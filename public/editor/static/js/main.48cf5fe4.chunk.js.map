{"version":3,"sources":["assets/images/icons/WhatsApp.svg","assets/images/icons/Twitter.png","assets/images/icons/Facebook.png","assets/images/icons/Gmail.png","assets/images/icons/Telegram.png","assets/images/icons/Pinterest.png","assets/images/icons/Reddit.png","assets/images/icons/Tumblr.png","assets/images/icons/Skype.png","assets/images/icons/FBMessenger.png","components/Dialogs/components/Select.js","components/Dialogs/components/Switch.js","utils/withBackButtonSupport.js","components/Dialogs/TextboxSettingsDialog.js","config/constants.js","utils/useSnapshots.js","components/Canvas/Elements/makeElement.js","utils/fitText.js","components/Canvas/Elements/Textbox.js","components/Dialogs/ImageSettingsDialog.js","components/Canvas/Elements/Sticker.js","components/Canvas/Grid.js","components/Dialogs/BorderDialog.js","components/Dialogs/ShareDialog.js","utils/dataURLToFile.js","utils/cache.js","utils/API.js","utils/uploadImage.js","components/Dialogs/ImageDialog.js","utils/downloadImageFromSrc.js","components/Dialogs/GridDialog.js","utils/importFile.js","utils/generateImage.js","components/Canvas/Canvas.js","components/BottomBar/Menu.js","components/Dialogs/ConfirmDialog.js","components/Dialogs/components/Templates.js","components/Dialogs/components/Stickers.js","components/Dialogs/TemplatesDialog.js","components/Dialogs/HelpDialog.js","components/Dialogs/AuthDialog.js","components/BottomBar/BottomBar.js","utils/Analytics.js","utils/OfflineUseAlerts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Select","name","label","options","child","className","useFormContext","control","watch","as","props","TextField","select","fullWidth","value","Object","entries","map","MenuItem","key","React","createElement","useStyles","makeStyles","theme","switch","width","register","setValue","classes","FormControlLabel","Switch","inputRef","onChange","event","checked","withBackButtonSupport","childElement","open","onClose","useEffect","window","location","hash","addEventListener","handleClose","ReactGA","modalview","values","removeEventListener","form","padding","spacing","paddingTop","text","whiteSpace","applyButton","marginTop","input","useForm","getValues","handleSubmit","reset","Dialog","style","onSubmit","settingsOptions","colors","color","textAlign","verticalTextAlign","fontFamilies","fontFamily","Button","type","URLSearchParams","search","get","useSnapshots","createSnapshot","applySnapshot","onSnapshotsEmpty","context","useContext","AppContext","snapshots","useRef","addSnapshot","newSnapshot","current","push","length","shift","handleUndo","snapshot","pop","dispatchEvent","CustomEvent","highlight","backgroundColor","border","borderRadius","shape","display","capture","handle","zIndex","height","position","cursor","container","top","flexDirection","alignItems","rotationHandle","button","marginLeft","action","transform","justifyContent","resizeHandles","vertical","left","horizontal","diagonal","makeElement","controls","defaultValues","Child","onRemove","grid","canvas","template","id","lastRotation","rotation","childRef","hasCreatedSnapshot","useState","x","y","setPosition","setRotation","TEXTBOX_PADDING","setHeight","setWidth","setCapture","isFocused","setIsFocused","shouldMove","setShouldMove","dragGrid","useMemo","enabled","fixedSize","clientWidth","columns","clientHeight","rows","image","getRotationAngle","data","childRect","getBoundingClientRect","childCenter","newRotation","Math","atan2","PI","handleRotationStart","emitResize","onResize","calcNewHeight","angle","dy","deltaX","sin","deltaY","cos","newHeight","aspectRatio","newWidth","calcNewWidth","dx","beforeCapturing","afterCapturing","handleClick","contains","target","a","Promise","requestAnimationFrame","onDrag","onStop","disabled","transformOrigin","ref","data-id","onFocus","toggleMovement","state","dimensions","includes","onStart","IconButton","onClick","onEditClicked","onSettingsClicked","fitText","styles","floor","div","document","fontWeight","bold","textTransform","caps","assign","textContent","body","appendChild","fontSize","textfit","multiLine","minFontSize","maxFontSize","innerHeight","span","querySelector","getComputedStyle","parseInt","getNewFontsize","removeChild","globalDefaultSettings","background","outline","typography","settings","resize","userSelect","isEditing","forwardRef","forwardedRef","defaultSettings","textboxRef","shouldEmitSnapshot","dialogOpen","setDialogOpen","setSettings","setIsEditing","handleEditClicked","handleFocusOut","focus","toLowerCase","toObject","toPercentage","useWidth","changedSettings","contentEditable","onMouseDown","onTouchStart","onInput","newValue","imageWrapper","boxSizing","src","alt","keepAspectRatio","flip","imageRef","isDialogOpen","setIsDialogOpen","defineProperty","naturalHeight","naturalWidth","configurable","draggable","line","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","pointerEvents","touchAction","Grid","renderContext","config","setDimensions","canvasRect","render","cellWidth","cellHeight","renderGrid","getContext","strokeStyle","fixedSpacing","renderWithRelativeSpacing","then","DialogTitle","FormGroup","innerDrawer","title","paddingBottom","iconsContainer","overflowX","icon","ShareDialog","link","onOpen","encodeURIComponent","openLink","href","detail","replace","SwipeableDrawer","disableDiscovery","disableSwipeToOpen","anchor","PaperProps","WhatsAppIcon","FacebookIcon","TwitterIcon","TelegramIcon","SkypeIcon","FBMessengerIcon","PinterestIcon","RedditIcon","TumblrIcon","GmailIcon","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","isCacheSupported","cachedRequest","url","fetch","caches","cache","cachedData","navigator","onLine","response","put","clone","getCachedImage","blob","imageURL","URL","createObjectURL","cacheImage","indexOf","path","protocol","hostname","uploadTemplate","formData","method","authorize","password","headers","JSON","stringify","res","json","uploadSticker","registerStickerUse","uploadFile","FormData","append","host","console","error","uploadImage","margin","innerDialog","imageData","uploadButtonWrapper","buttonLoader","linkWrapper","shareButton","terms","palette","secondary","archiveLink","snackbarClose","primary","variant","elements","isRegistered","setLink","isUploading","setIsUploading","isShareDialogOpen","setIsShareDialogOpen","isUploadSnackbarOpen","setIsUploadSnackbarOpen","hasCreatedTemplate","setHasCreatedTemplate","registerUsage","currentTemplate","element","undefined","handleUploadClick","file","dataURLToFile","handleShareClick","handleTemplateClick","metaData","textboxes","getTextboxes","getBorder","ok","Paper","Typography","startIcon","CircularProgress","size","download","click","downloadImageFromSrc","defaultValue","Snackbar","anchorOrigin","autoHideDuration","message","spacingError","setSpacingError","fileToImage","resolve","reader","FileReader","onload","result","readAsDataURL","importFile","accept","onchange","e","files","remove","compensateError","clonedDocument","querySelectorAll","forEach","textbox","shiftOffset","min","offsetHeight","Array","from","parent","parentNode","node","reverse","minWidth","minHeight","html2canvas","useCORS","onclone","toDataURL","generateImage","getDimensionsWithoutPadding","parseFloat","paddingLeft","paddingRight","waitFrames","amount","i","defaultBorderValues","bottom","right","defaultGridValues","canvasWrapper","default","mixins","toolbar","overflow","Canvas","idCounter","elementRefs","elementKeys","setElementKeys","borderValues","setBorderValues","gridValues","setGridValues","isBorderDialogOpen","setIsBorderDialogOpen","isImageDialogOpen","setIsImageDialogOpen","isGridDialogOpen","setIsGridDialogOpen","generatedImage","setGeneratedImage","handleImageDialogClose","handleRemoveElement","removeKey","newKeys","filter","clearElements","createNewElement","handleAddTextbox","newElementKey","addSticker","handleImportSticker","base64Image","handleImportImage","set","handleGenerateImage","handleSetBorder","handleSetGrid","handleLoadTemplate","image_url","formatPercentage","object","selector","test","percentage","meta_data","newKey","handleLoadSticker","sticker","handleGetTextboxes","handleGetBorder","imgWidth","imgHeight","imgRatio","maxWidth","maxHeight","borderSize","Error","Menu","anchorEl","ListItemIcon","ListItemText","ConfirmDialog","content","disableBackdropClick","disableEscapeKeyDown","DialogContent","dividers","DialogActions","spacer","searchWrapper","flex","searchClear","listWrapper","list","tile","tilebar","deleteButton","Templates","onLoad","templates","setTemplates","isConfirmDialogOpen","setIsConfirmDialogOpen","setSearch","fetchTemplates","parse","renderTemplates","sort","b","amount_uses","InputBase","placeholder","GridList","GridListTile","tagName","loading","handleImageLoad","GridListTileBar","subtitle","count","handleDeleteClick","shouldDelete","addButton","InnerTile","onDelete","Stickers","active","currentSticker","stickers","setStickers","fetchStickers","handleDelete","handleAddSticker","cols","ReactDOM","createPortal","Zoom","in","unmountOnExit","Fab","getElementById","Transition","Slide","direction","currentTab","setCurrentTab","scrollToTop","scrollTo","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Tabs","index","Tab","onChangeIndex","axis","disableLazyLoading","OverlayChild","rect","Tooltip","placement","arrow","ClickAwayListener","onClickAway","isSnackbarOpen","setIsSnackbarOpen","isWrongPassword","setIsWrongPassword","setPassword","helperText","appBar","paper","fabButton","flexGrow","BottomBar","openMenuButton","helpButtonTimer","isMenuOpen","setIsMenuOpen","isTemplatesOpen","setIsTemplatesOpen","isHelpOpen","setIsHelpOpen","isAuthDialogOpen","setIsAuthDialogOpen","handleTemplatesClick","handleTouchStart","setTimeout","handleTouchEnd","clearTimeout","onTouchEnd","onMouseUp","AuthDialog","Analytics","isInitialized","setIsInitialized","initialize","pageview","pathname","generateImageEvent","bind","category","loadTemplateEvent","shareModalModalview","uploadImageEvent","downloadImageEvent","shareEvent","OfflineUseAlerts","snackbarText","setSnackbarText","channel","BroadcastChannel","close","createContext","App","EventTarget","localStorage","getItem","setContext","setter","setItem","handleMessage","ctrlKey","keyCode","Provider","isLocalhost","Boolean","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","postMessage","log","onUpdate","onSuccess","catch","createMuiTheme","main","ThemeProvider","process","origin","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.48cf5fe4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WhatsApp.0e878a0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Twitter.1f5a8ef5.png\";","module.exports = __webpack_public_path__ + \"static/media/Facebook.9ee5d43c.png\";","module.exports = __webpack_public_path__ + \"static/media/Gmail.598d07e7.png\";","module.exports = __webpack_public_path__ + \"static/media/Telegram.b4b9d64f.png\";","module.exports = __webpack_public_path__ + \"static/media/Pinterest.717253e4.png\";","module.exports = __webpack_public_path__ + \"static/media/Reddit.3826daa7.png\";","module.exports = __webpack_public_path__ + \"static/media/Tumblr.93e9138a.png\";","module.exports = __webpack_public_path__ + \"static/media/Skype.5a725d78.png\";","module.exports = __webpack_public_path__ + \"static/media/FBMessenger.f8b3ffc7.png\";","import React from \"react\"\r\nimport { TextField, MenuItem } from \"@material-ui/core\"\r\nimport { Controller, useFormContext } from \"react-hook-form\"\r\n\r\nfunction Select({ name, label, options, child, className }) {\r\n    const { control, watch } = useFormContext()\r\n\r\n    return (\r\n        <Controller\r\n            as={props => (\r\n                <TextField\r\n                    select\r\n                    label={label}\r\n                    fullWidth\r\n                    className={className}\r\n                    value={watch(name)}\r\n                    {...props}\r\n                >\r\n                    {Object.entries(options).map(([label, value]) => (\r\n                        <MenuItem key={value} value={value}>\r\n                            {React.createElement(child, { label, value })}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n            control={control}\r\n            name={name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Select","import React from \"react\"\r\nimport { Switch, FormControlLabel } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useFormContext } from \"react-hook-form\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    switch: {\r\n        width: \"100%\"\r\n    }\r\n}))\r\n\r\nfunction Select({ name, label, className }) {\r\n    const { register, watch, setValue } = useFormContext()\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    name={name}\r\n                    inputRef={register()}\r\n                    onChange={(event, value) => setValue(name, value)}\r\n                    checked={watch(name)}\r\n                />\r\n            }\r\n            label={label}\r\n            className={`${classes.switch} ${className}`}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Select","import React, { useEffect } from \"react\"\r\nimport ReactGA from \"react-ga\"\r\n\r\nfunction withBackButtonSupport(childElement, name) {\r\n    return ({ open, onClose, ...props }) => {\r\n        useEffect(() => {\r\n            if(open) {\r\n                window.location.hash = \"#\" + name\r\n                window.addEventListener(\"popstate\", handleClose)\r\n                ReactGA.modalview(name)\r\n            }\r\n        }, [open])\r\n\r\n        const handleClose = ({ values }) => {\r\n            window.removeEventListener(\"popstate\", handleClose)\r\n            window.location.hash = \"\"\r\n            onClose(values)\r\n        }\r\n\r\n        return React.createElement(childElement, {\r\n            ...props,\r\n            open,\r\n            onClose: values => handleClose({ values })\r\n        })\r\n    }\r\n}\r\n\r\nexport default withBackButtonSupport","import React, { useEffect } from \"react\"\r\nimport { Dialog, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormContext } from \"react-hook-form\"\r\n\r\nimport Select from \"./components/Select.js\"\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport settingsOptions from \"../../config/settings-options.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    text: {\r\n        padding: `${theme.spacing(3)}px ${theme.spacing(2)}px`,\r\n        whiteSpace: \"pre\"\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nfunction TextboxSettingsDialog({ onClose, open, values, text }) {\r\n    const { getValues, handleSubmit, control, watch, reset, register, setValue } = useForm()\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        onClose(getValues())\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <div className={classes.text} style={watch()}>\r\n                {text}\r\n            </div>\r\n            \r\n            <FormContext {...{ control, watch, register, setValue }}>\r\n                <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                    {/* Color */}\r\n                    <Select\r\n                        name=\"color\"\r\n                        label=\"Color\"\r\n                        options={settingsOptions.colors}\r\n                        className={classes.input}\r\n                        child={({ label, value }) => (\r\n                            <span style={{ color: value }}>{label}</span>\r\n                        )}\r\n                    />\r\n\r\n                    {/* Background Color */}\r\n                    <Select\r\n                        name=\"backgroundColor\"\r\n                        label=\"Background Color\"\r\n                        options={{\r\n                            \"Transparent\": \"transparent\",\r\n                            ...settingsOptions.colors\r\n                        }}\r\n                        className={classes.input}\r\n                        child={({ label, value }) => (\r\n                            <span style={{ color: value }}>{label}</span>\r\n                        )}\r\n                    />\r\n\r\n                    {/* Text Align */}\r\n                    <Select\r\n                        name=\"textAlign\"\r\n                        label=\"Text Align\"\r\n                        options={settingsOptions.textAlign}\r\n                        className={classes.input}\r\n                        child={({ label }) => label}\r\n                    />\r\n\r\n                    {/* Vertical Text Align */}\r\n                    <Select\r\n                        name=\"verticalTextAlign\"\r\n                        label=\"Vertical Text Align\"\r\n                        options={settingsOptions.verticalTextAlign}\r\n                        className={classes.input}\r\n                        child={({ label }) => label}\r\n                    />\r\n\r\n                    {/* Font Family */}\r\n                    <Select\r\n                        name=\"fontFamily\"\r\n                        label=\"Font Family\"\r\n                        options={settingsOptions.fontFamilies}\r\n                        className={classes.input}\r\n                        child={({ label, value }) => (\r\n                            <span style={{ fontFamily: value }}>{label}</span>\r\n                        )}\r\n                    />\r\n\r\n                    {/* Bold */}\r\n                    <Switch name=\"bold\" label=\"Bold\" className={classes.input}/>\r\n\r\n                    {/* Caps */}\r\n                    <Switch name=\"caps\" label=\"Caps\" className={classes.input}/>\r\n\r\n                    <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                </form>\r\n            </FormContext>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(TextboxSettingsDialog, \"settings\")","export const MAX_SNAPSHOTS = 50\r\nexport const TEXTBOX_PLACEHOLDER = \"Enter Text...\"\r\nexport const TEXTBOX_PADDING = 6\r\nexport const LONG_PRESS_DURATION = 1000\r\nexport const IS_DEV = !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\r\nexport const IS_ANDROID_APP = new URLSearchParams(window.location.search).get(\"isAndroidApp\")\r\nexport const GA_TRACKING_ID = \"UA-162994094-2\"\r\nexport const CACHE_NAME = \"v1\"","import { useContext, useEffect, useRef } from \"react\"\r\n\r\nimport { AppContext } from \"../App.js\"\r\nimport { MAX_SNAPSHOTS } from \"../config/constants.js\"\r\n\r\nfunction useSnapshots({ createSnapshot, applySnapshot, onSnapshotsEmpty }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const snapshots = useRef([])\r\n\r\n    const addSnapshot = () => {\r\n        // Create new snapshot\r\n        const newSnapshot = createSnapshot()\r\n        snapshots.current.push(newSnapshot)\r\n\r\n        // Apply size constraint\r\n        if (snapshots.current.length > MAX_SNAPSHOTS) {\r\n            snapshots.current.shift()\r\n        }\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        // No snapshots left\r\n        if (snapshots.current.length === 0) {\r\n            onSnapshotsEmpty()\r\n            return\r\n        }\r\n\r\n        // Apply snapshot\r\n        const snapshot = snapshots.current.pop()\r\n        applySnapshot(snapshot)\r\n    }\r\n\r\n    useEffect(() => {\r\n        context.event.addEventListener(\"undo\", handleUndo)\r\n        context.event.addEventListener(\"addSnapshot\", addSnapshot)\r\n\r\n        return () => {\r\n            context.event.removeEventListener(\"undo\", handleUndo)\r\n            context.event.removeEventListener(\"addSnapshot\", addSnapshot)\r\n        }\r\n    })\r\n\r\n    return () => {\r\n        context.event.dispatchEvent(new CustomEvent(\"addSnapshot\"))\r\n    }\r\n}\r\n\r\nexport default useSnapshots","import React, { useState, useRef, useMemo, useEffect, useContext } from \"react\"\r\nimport { DraggableCore } from \"react-draggable\"\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport HeightIcon from \"@material-ui/icons/Height\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\n\r\nimport { AppContext } from \"../../../App.js\"\r\nimport useSnapshots from \"../../../utils/useSnapshots.js\"\r\nimport { TEXTBOX_PADDING } from \"../../../config/constants.js\"\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    const highlight = {\r\n        backgroundColor: \"rgba(255, 255, 255, .5)\",\r\n        border: \"1px solid black\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        display: props => props.capture && \"none\"\r\n    }\r\n\r\n    const handle = {\r\n        ...highlight,\r\n        zIndex: 20,\r\n        height: 24,\r\n        position: \"absolute\",\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n    return {\r\n        container: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            zIndex: 10\r\n        },\r\n\r\n        rotationHandle: {\r\n            ...highlight,\r\n            cursor: \"pointer\"\r\n        },\r\n\r\n        button: {\r\n            ...highlight,\r\n            padding: 0,\r\n            marginLeft: theme.spacing(1),\r\n            color: \"black\"\r\n        },\r\n\r\n        action: {\r\n            position: \"absolute\",\r\n            transform: \"translateY(-100%)\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: 24\r\n        },\r\n\r\n        resizeHandles: {\r\n            position: \"absolute\",\r\n            height: \"100%\",\r\n            width: \"100%\"\r\n        },\r\n\r\n        vertical: {\r\n            ...handle,\r\n            top: \"100%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            cursor: \"ns-resize\"\r\n        },\r\n\r\n        horizontal: {\r\n            ...handle,\r\n            top: \"50%\",\r\n            left: \"100%\",\r\n            transform: \"translate(-50%, -50%) rotate(-90deg)\",\r\n            cursor: \"ew-resize\"\r\n        },\r\n\r\n        diagonal: {\r\n            ...handle,\r\n            top: \"100%\",\r\n            left: \"100%\",\r\n            transform: \"translate(-50%, -50%) rotate(-45deg)\",\r\n            cursor: \"nwse-resize\"\r\n        }\r\n    }\r\n})\r\n\r\nfunction makeElement({\r\n    controls,\r\n    defaultValues,\r\n    Child\r\n}) {\r\n    return function Element({ onRemove, handle, grid, canvas, template, id, ...props }) {\r\n        const context = useContext(AppContext)\r\n\r\n        const lastRotation = useRef(template?.rotation || 0)\r\n        const container = useRef()\r\n        const childRef = useRef()\r\n        const hasCreatedSnapshot = useRef(false)\r\n\r\n        const [position, setPosition] = useState({ x: template?.x || 0, y: template?.y || 0 })\r\n        const [rotation, setRotation] = useState(template?.rotation || 0)\r\n        const [height, setHeight] = useState((template?.height && template.height - TEXTBOX_PADDING * 2) || defaultValues.height)\r\n        const [width, setWidth] = useState((template?.width && template.width - TEXTBOX_PADDING * 2) || defaultValues.width)\r\n        const [capture, setCapture] = useState(false)\r\n        const [isFocused, setIsFocused] = useState(false)\r\n        const [shouldMove, setShouldMove] = useState(true)\r\n\r\n        const classes = useStyles({ capture })\r\n\r\n        // Set grid for movement drag\r\n        const dragGrid = useMemo(() => {\r\n            if (grid.enabled) {\r\n                if (grid.fixedSize) {\r\n                    // Fixed size\r\n                    return [grid.spacing, grid.spacing]\r\n                } else {\r\n                    // Relative size\r\n                    const cellWidth = canvas.clientWidth / grid.columns\r\n                    const cellHeight = canvas.clientHeight / grid.rows\r\n                    return [cellWidth, cellHeight]\r\n                }\r\n            }\r\n        }, [grid, context.image])\r\n\r\n        const addSnapshot = useSnapshots({\r\n            createSnapshot: () => ({ width, height, position, rotation }),\r\n\r\n            applySnapshot: (snapshot) => {\r\n                setWidth(snapshot.width)\r\n                setHeight(snapshot.height)\r\n                setPosition(snapshot.position)\r\n                setRotation(snapshot.rotation)\r\n            },\r\n\r\n            onSnapshotsEmpty: () => {\r\n                // Remove element if it does not come from template\r\n                if (!template) {\r\n                    onRemove(id)\r\n                }\r\n            }\r\n        })\r\n\r\n        const getRotationAngle = (event, data) => {\r\n            // Get child center position\r\n            const childRect = childRef.current.getBoundingClientRect()\r\n            const childCenter = {\r\n                x: childRect.x + childRect.width / 2,\r\n                y: childRect.y + childRect.height / 2\r\n            }\r\n\r\n            // Calculate new rotation\r\n            const childToMouse = Math.atan2(childCenter.y - data.y, childCenter.x - data.x)\r\n            let newRotation = childToMouse - lastRotation.current\r\n\r\n            // Snap to 45°\r\n            if (grid.enabled) {\r\n                newRotation -= newRotation % (Math.PI / 4)\r\n            }\r\n\r\n            return newRotation\r\n        }\r\n\r\n        const handleRotationStart = (event, data) => {\r\n            lastRotation.current = getRotationAngle(event, data)\r\n        }\r\n\r\n        const handleRotationEnd = (event, data) => {\r\n            lastRotation.current = getRotationAngle(event, data)\r\n        }\r\n\r\n        const handleRotationDrag = (event, data) => {\r\n            setRotation(getRotationAngle(event, data))\r\n        }\r\n            \r\n        const emitResize = () => {\r\n            if(handle.onResize) {\r\n                handle.onResize()\r\n            }\r\n        }\r\n\r\n        const calcNewHeight = (data) => {\r\n            // Calculate new delta-y with the following rotation matrix: https://en.wikipedia.org/wiki/Rotation_matrix\r\n            const angle = -rotation\r\n            const dy = data.deltaX * Math.sin(angle) + data.deltaY * Math.cos(angle)\r\n            const newHeight = height + dy\r\n            setHeight(newHeight)\r\n\r\n            if(handle.aspectRatio) {\r\n                const newWidth = newHeight * (1 / handle.aspectRatio)\r\n                setWidth(newWidth)\r\n            }\r\n        }\r\n\r\n        const calcNewWidth = (data) => {\r\n            // Calculate new delta-x with the following rotation matrix: https://en.wikipedia.org/wiki/Rotation_matrix\r\n            const angle = -rotation\r\n            const dx = data.deltaX * Math.cos(angle) - data.deltaY * Math.sin(angle)\r\n            const newWidth = width + dx\r\n            setWidth(width + dx)\r\n\r\n            if(handle.aspectRatio) {\r\n                const newHeight = newWidth * handle.aspectRatio\r\n                setHeight(newHeight)\r\n            }\r\n        }\r\n\r\n        const handleVerticalDrag = (event, data) => {\r\n            calcNewHeight(data)\r\n            emitResize()\r\n        }\r\n\r\n        const handleHorizontalDrag = (event, data) => {\r\n            calcNewWidth(data)\r\n            emitResize()\r\n        }\r\n\r\n        const handleDiagonalDrag = (event, data) => {\r\n            calcNewWidth(data)\r\n            calcNewHeight(data)\r\n            emitResize()\r\n        }\r\n\r\n        const handleMovementDrag = (event, data) => {\r\n            if(!isFocused) {\r\n                return\r\n            }\r\n\r\n            // Add snapshot when dragging starts\r\n            if(!hasCreatedSnapshot.current) {\r\n                addSnapshot()\r\n                hasCreatedSnapshot.current = true\r\n            }\r\n\r\n            setPosition({\r\n                x: position.x + data.deltaX,\r\n                y: position.y + data.deltaY\r\n            })\r\n        }\r\n\r\n        const handleMovementStop = () => {\r\n            hasCreatedSnapshot.current = false\r\n        }\r\n\r\n        const handleRemoveClicked = () => {\r\n            onRemove(id)\r\n        }\r\n\r\n        const handleFocus = () => {\r\n            setIsFocused(true)\r\n        }\r\n\r\n        const handleBlur = () => {\r\n            setIsFocused(false)\r\n        }\r\n\r\n        const handleToggleMovement = (state = true) => {\r\n            setShouldMove(state)\r\n        }\r\n\r\n        const beforeCapturing = () => {\r\n            setCapture(true)\r\n        }\r\n\r\n        const afterCapturing = () => {\r\n            setCapture(false)\r\n        }\r\n\r\n        // Expose methods to parent\r\n        if (handle) {\r\n            handle.beforeCapturing = beforeCapturing\r\n            handle.afterCapturing = afterCapturing\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (grid.enabled) {\r\n                // Init position in grid\r\n                setPosition({\r\n                    x: position.x - position.x % dragGrid[0],\r\n                    y: position.y - position.y % dragGrid[1]\r\n                })\r\n\r\n                // Init width in grid\r\n                const newWidth = width - (width + TEXTBOX_PADDING * 2) % dragGrid[0]\r\n                setWidth(newWidth)\r\n\r\n                // Init height in grid\r\n                const newHeight = height - (height + TEXTBOX_PADDING * 2) % dragGrid[1]\r\n                setHeight(newHeight)\r\n            }\r\n        }, [grid])\r\n\r\n        useEffect(() => {\r\n            // Handle click-away event\r\n            const handleClick = (event) => {\r\n                if (isFocused && !container.current.contains(event.target)) {\r\n                    handleBlur()\r\n                }\r\n            }\r\n\r\n            window.addEventListener(\"click\", handleClick)\r\n            window.addEventListener(\"touchstart\", handleClick)\r\n            \r\n            return () => {\r\n                window.removeEventListener(\"click\", handleClick)\r\n                window.removeEventListener(\"touchstart\", handleClick)\r\n            }\r\n        })\r\n\r\n        useEffect(() => {\r\n            (async () => {\r\n                // Wait until handle received all props\r\n                await new Promise(requestAnimationFrame)\r\n\r\n                // Init dimensions\r\n                if (handle.aspectRatio) {\r\n                    if (width) {\r\n                        setHeight(width * handle.aspectRatio)\r\n                    } else if (height) {\r\n                        setWidth(height * (1 / handle.aspectRatio))\r\n                    }\r\n                }\r\n            })()\r\n        }, [])\r\n\r\n        return (\r\n            <DraggableCore onDrag={handleMovementDrag} onStop={handleMovementStop} grid={dragGrid} handle={`#element-${id}`} disabled={!shouldMove}>\r\n                <div\r\n                    className={`${classes.container} element`}\r\n                    style={{\r\n                        transform: `translate(${position.x}px, ${position.y}px) rotate(${rotation}rad)`,\r\n                        transformOrigin: `center center`,\r\n                        zIndex: defaultValues.zIndex || 0\r\n                    }}\r\n                    ref={container}\r\n                    data-id={id}\r\n                >\r\n                    <Child\r\n                        id={id}\r\n                        handle={handle}\r\n                        template={template}\r\n                        onFocus={handleFocus}\r\n                        isFocused={isFocused}\r\n                        toggleMovement={handleToggleMovement}\r\n                        dimensions={{ width, height, ...position, rotation }}\r\n                        ref={childRef}\r\n                        capture={capture}\r\n                        {...props}\r\n                    />\r\n\r\n                    {isFocused && (\r\n                        // Render controls if the element is focused\r\n                        <>\r\n                            {controls.includes(\"resize\") && (\r\n                                <div className={classes.resizeHandles}>\r\n                                    <DraggableCore onDrag={handleVerticalDrag} onStart={addSnapshot} grid={dragGrid}>\r\n                                        <div className={classes.vertical}>\r\n                                            <HeightIcon />\r\n                                        </div>\r\n                                    </DraggableCore>\r\n\r\n                                    <DraggableCore onDrag={handleHorizontalDrag} onStart={addSnapshot} grid={dragGrid}>\r\n                                        <div className={classes.horizontal}>\r\n                                            <HeightIcon />\r\n                                        </div>\r\n                                    </DraggableCore>\r\n\r\n                                    <DraggableCore onDrag={handleDiagonalDrag} onStart={addSnapshot} grid={dragGrid}>\r\n                                        <div className={classes.diagonal}>\r\n                                            <HeightIcon />\r\n                                        </div>\r\n                                    </DraggableCore>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className={classes.action}>\r\n                                {controls.includes(\"rotate\") && (\r\n                                    <DraggableCore onStart={(...args) => {\r\n                                        handleRotationStart(...args)\r\n                                        addSnapshot()\r\n                                    }} onStop={handleRotationEnd} onDrag={handleRotationDrag}>\r\n                                        <RotateLeftIcon className={classes.rotationHandle} />\r\n                                    </DraggableCore>\r\n                                )}\r\n\r\n                                {controls.includes(\"edit\") && (\r\n                                    <IconButton className={classes.button} onClick={handle.onEditClicked}>\r\n                                        <EditIcon />\r\n                                    </IconButton>\r\n                                )}\r\n\r\n                                {controls.includes(\"settings\") && (\r\n                                    <IconButton className={classes.button} onClick={handle.onSettingsClicked}>\r\n                                        <SettingsIcon />\r\n                                    </IconButton>\r\n                                )}\r\n\r\n                                {controls.includes(\"remove\") && (\r\n                                    <IconButton className={classes.button} onClick={handleRemoveClicked}>\r\n                                        <CloseIcon />\r\n                                    </IconButton>\r\n                                )}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </DraggableCore>\r\n        )\r\n    }\r\n}\r\n\r\nexport default makeElement","import textfit from \"textfit\"\r\n\r\nfunction getNewFontsize(div) {\r\n    textfit(div, {\r\n        multiLine: true,\r\n        minFontSize: 1,\r\n        maxFontSize: window.innerHeight\r\n    })\r\n    const span = div.querySelector(\"span\")\r\n    const fontSize = getComputedStyle(span).fontSize\r\n    return parseInt(fontSize)\r\n}\r\n\r\nfunction fitText({ width, height, text, styles }) {\r\n    width = Math.floor(width)\r\n    height = Math.floor(height)\r\n\r\n    if(width <= 0 || height <= 0) {\r\n        return 0\r\n    }\r\n\r\n    const div = document.createElement(\"div\")\r\n\r\n    // div.style.visibility = \"hidden\"\r\n    div.style.position = \"absolute\"\r\n    div.style.width = width + \"px\"\r\n    div.style.height = height + \"px\"\r\n    div.style.whiteSpace = \"pre-wrap\"\r\n    div.style.fontWeight = styles.bold ? \"bold\" : null\r\n    div.style.textTransform = styles.caps ? \"uppercase\" : null\r\n\r\n    Object.assign(div.style, styles)\r\n\r\n    div.textContent = text\r\n\r\n    document.body.appendChild(div)\r\n\r\n    const fontSize = getNewFontsize(div)\r\n\r\n    document.body.removeChild(div)\r\n\r\n    return fontSize\r\n}\r\n\r\nexport default fitText","import React, { useState, useRef, useMemo, useEffect } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport TextboxSettingsDialog from \"../../Dialogs/TextboxSettingsDialog.js\"\r\n\r\nimport useSnapshots from \"../../../utils/useSnapshots.js\"\r\nimport makeElement from \"./makeElement.js\"\r\nimport fitText from \"../../../utils/fitText.js\"\r\nimport { TEXTBOX_PLACEHOLDER, TEXTBOX_PADDING } from \"../../../config/constants.js\"\r\n\r\nconst globalDefaultSettings = {\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"'Impact', fantasy\",\r\n    backgroundColor: \"transparent\",\r\n    verticalTextAlign: \"center\",\r\n    bold: false,\r\n    caps: true\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    input: {\r\n        background: \"none\",\r\n        border: \"none\",\r\n        outline: props => !props.capture && props.isFocused ? \"1px dashed gray\" : \"none\",\r\n        fontSize: 24,\r\n        color: \"white\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        textTransform: props => props.settings.caps && \"uppercase\",\r\n        resize: \"none\",\r\n        whiteSpace: \"pre-wrap\",\r\n        zIndex: 10,\r\n        padding: TEXTBOX_PADDING,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        fontWeight: props => props.settings.bold && \"bold\",\r\n        userSelect: props => !props.isEditing && \"none\",\r\n        cursor: props => !props.isEditing && \"move\",\r\n        justifyContent: props => (\r\n            props.settings.verticalTextAlign === \"top\" ? \"flex-start\" :\r\n            props.settings.verticalTextAlign === \"bottom\" ? \"flex-end\" :\r\n            props.settings.verticalTextAlign === \"center\" ? \"center\" :\r\n            null\r\n        )\r\n    }\r\n}))\r\n\r\nfunction Textbox({ id, handle, template, onFocus, isFocused, toggleMovement, dimensions }, forwardedRef) {\r\n    const defaultSettings = {...globalDefaultSettings}\r\n\r\n    // Apply template settings\r\n    if(template?.settings) {\r\n        for(let key in defaultSettings) {\r\n            if(template.settings[key]) {\r\n                defaultSettings[key] = template.settings[key]\r\n            }\r\n        }\r\n    }\r\n\r\n    const textboxRef = useRef()\r\n    const shouldEmitSnapshot = useRef(false)\r\n\r\n    const [value, setValue] = useState(TEXTBOX_PLACEHOLDER)\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [settings, setSettings] = useState(defaultSettings)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    const classes = useStyles({ settings, isFocused, isEditing }) \r\n\r\n    const addSnapshot = useSnapshots({\r\n        createSnapshot: () => ({ value, settings }),\r\n\r\n        applySnapshot: (snapshot) => {\r\n            setValue(snapshot.value)\r\n            textboxRef.current.textContent = snapshot.value\r\n            setSettings(snapshot.settings)\r\n        },\r\n\r\n        onSnapshotsEmpty: () => {\r\n            // Set initial values\r\n            setValue(TEXTBOX_PLACEHOLDER)\r\n            setSettings(defaultSettings)\r\n        }\r\n    })\r\n\r\n    const handleSettingsClicked = () => {\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    const handleSettingsApply = values => {\r\n        if(values) {\r\n            addSnapshot()\r\n            setSettings(values)\r\n        }\r\n        setDialogOpen(false)\r\n    }\r\n    \r\n    const handleEditClicked = async () => {\r\n        const handleFocusOut = () => {\r\n            toggleMovement(true)\r\n            setIsEditing(false)\r\n            textboxRef.current.removeEventListener(\"focusout\", handleFocusOut)\r\n        }\r\n        \r\n        shouldEmitSnapshot.current = true\r\n        toggleMovement(false)\r\n        setIsEditing(true)\r\n        textboxRef.current.addEventListener(\"focusout\", handleFocusOut)\r\n\r\n        // Wait until contenteditable is set\r\n        await new Promise(requestAnimationFrame)\r\n\r\n        textboxRef.current.focus()\r\n\r\n        // Clear the placeholder\r\n        if(value.toLowerCase() === TEXTBOX_PLACEHOLDER.toLowerCase()) {\r\n            textboxRef.current.textContent = \"\"\r\n        }\r\n    }\r\n\r\n    const handleValueChange = (event) => {\r\n        if(shouldEmitSnapshot.current) {\r\n            shouldEmitSnapshot.current = false\r\n            addSnapshot()\r\n        }\r\n\r\n        const newValue = event.target.textContent\r\n        setValue(newValue)\r\n    }\r\n\r\n    const toObject = ({ image }) => {\r\n        const toPercentage = (value, useWidth = false) => value / (useWidth ? image.clientWidth : image.clientHeight) * 100 + \"%\"\r\n\r\n        const changedSettings = {}\r\n        for(let key in settings) {\r\n            if(settings[key] !== defaultSettings[key]) {\r\n                changedSettings[key] = settings[key]\r\n            }\r\n        }\r\n\r\n        return {\r\n            value,\r\n            width: toPercentage(dimensions.width + TEXTBOX_PADDING * 2, true),\r\n            height: toPercentage(dimensions.height + TEXTBOX_PADDING * 2),\r\n            x: toPercentage(dimensions.x, true),\r\n            y: toPercentage(dimensions.y),\r\n            rotation: dimensions.rotation,\r\n            settings: changedSettings\r\n        }\r\n    }\r\n\r\n    // Expose methods for parent\r\n    if(handle) {\r\n        handle.toObject = toObject\r\n        handle.onEditClicked = handleEditClicked\r\n        handle.onSettingsClicked = handleSettingsClicked\r\n    }\r\n\r\n    // Generate stylings for textbox\r\n    const styles = useMemo(() => ({\r\n        ...settings,\r\n        width: dimensions.width + \"px\",\r\n        height: dimensions.height + \"px\",\r\n        fontSize: fitText({ styles: settings, text: value, ...dimensions })\r\n    }), [value, settings, dimensions.width, dimensions.height])\r\n\r\n    useEffect(() => {\r\n        // Set initial value\r\n        textboxRef.current.textContent = value\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!isEditing && !value) {\r\n            // Insert placeholder if textbox is empty\r\n            setValue(TEXTBOX_PLACEHOLDER)\r\n            textboxRef.current.textContent = TEXTBOX_PLACEHOLDER\r\n        }\r\n    }, [isEditing])\r\n    \r\n    return (\r\n        <>\r\n            <div\r\n                contentEditable={isEditing}\r\n                id={`element-${id}`}\r\n                className={`textbox ${classes.input}`}\r\n                style={styles}\r\n                ref={ref => {\r\n                    textboxRef.current = ref\r\n                    forwardedRef.current = ref\r\n                }}\r\n                onMouseDown={onFocus}\r\n                onTouchStart={onFocus}\r\n                onInput={handleValueChange}\r\n            />\r\n\r\n            <TextboxSettingsDialog open={dialogOpen} onClose={handleSettingsApply} values={settings} text={value}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default makeElement({\r\n    controls: [\"resize\", \"rotate\", \"edit\", \"settings\", \"remove\"],\r\n    defaultValues: {\r\n        width: 160,\r\n        height: 24,\r\n        zIndex: 2\r\n    },\r\n    Child: React.forwardRef(Textbox)\r\n})","import React, { useEffect } from \"react\"\r\nimport { useForm, FormContext } from \"react-hook-form\"\r\nimport { Dialog, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n\r\n    image: {\r\n        width: 100\r\n    },\r\n\r\n    imageWrapper: {\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        padding: theme.spacing(1),\r\n        boxSizing: \"border-box\"\r\n    }\r\n}))\r\n\r\nfunction ImageSettingsDialog({ onClose, open, values, src }) {\r\n    const { getValues, handleSubmit, control, watch, reset, register, setValue } = useForm()\r\n\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        onClose(getValues())\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <div className={classes.imageWrapper}>\r\n                <img src={src} alt=\"\" className={classes.image} style={{\r\n                    transform: `scaleX(${watch(\"flip\") ? \"-1\" : \"1\"})`\r\n                }}/>\r\n            </div>\r\n\r\n            <FormContext {...{ control, watch, register, setValue }}>\r\n                <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                    {/* Keep Aspect Ratio */}\r\n                    <Switch name=\"keepAspectRatio\" label=\"Keep Aspect Ratio\" className={classes.input} />\r\n\r\n                    {/* Flip */}\r\n                    <Switch name=\"flip\" label=\"Flip\" className={classes.input} />\r\n\r\n                    <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                </form>\r\n            </FormContext>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(ImageSettingsDialog, \"settings\")","import React, { useState, useRef } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport ImageSettingsDialog from \"../../Dialogs/ImageSettingsDialog.js\"\r\n\r\nimport makeElement from \"./makeElement.js\"\r\n\r\nconst defaultSettings = {\r\n    keepAspectRatio: true,\r\n    flip: false\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    image: {\r\n        zIndex: 1,\r\n        cursor: \"move\"\r\n    }\r\n}))\r\n\r\nfunction Sticker({ src, id, onFocus, dimensions, handle }, forwardedRef) {\r\n    const classes = useStyles()\r\n\r\n    const imageRef = useRef()\r\n\r\n    const [settings, setSettings] = useState(defaultSettings)\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n\r\n    const handleSettingsApply = (values) => {\r\n        if(values) {\r\n            setSettings(values)\r\n        }\r\n        setIsDialogOpen(false)\r\n    }\r\n\r\n    const styles = {\r\n        width: dimensions.width + \"px\",\r\n        height: dimensions.height + \"px\",\r\n        transform: `scaleX(${settings.flip ? \"-1\" : \"1\"})`\r\n    }\r\n\r\n    if(handle) {\r\n        handle.onSettingsClicked = () => setIsDialogOpen(true)\r\n\r\n        if(settings.keepAspectRatio) {\r\n            Object.defineProperty(handle, \"aspectRatio\", { \r\n                get: function() {\r\n                    return imageRef.current?.naturalHeight / imageRef.current?.naturalWidth\r\n                },\r\n                configurable: true\r\n            })\r\n        } else {\r\n            delete handle.aspectRatio\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img\r\n                src={src}\r\n                alt=\"\"\r\n                id={`element-${id}`}\r\n                ref={ref => {\r\n                    forwardedRef.current = ref\r\n                    imageRef.current = ref\r\n                }}\r\n                onMouseDown={onFocus}\r\n                onTouchStart={onFocus}\r\n                style={styles}\r\n                className={classes.image}\r\n                draggable=\"false\"\r\n            />\r\n\r\n            <ImageSettingsDialog open={isDialogOpen} onClose={handleSettingsApply} values={settings} src={src}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default makeElement({\r\n    controls: [\"resize\", \"rotate\", \"remove\", \"settings\"],\r\n    defaultValues: {\r\n        width: 100,\r\n        zIndex: 1\r\n    },\r\n    Child: React.forwardRef(Sticker)\r\n})","import React, { useEffect, useRef, useContext } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nfunction line(context, x1, y1, x2, y2) {\r\n    context.beginPath()\r\n    context.moveTo(x1, y1)\r\n    context.lineTo(x2, y2)\r\n    context.stroke()\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    canvas: {\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        touchAction: \"none\"\r\n    }\r\n}))\r\n\r\nfunction Grid({ config, canvas, border }) {\r\n    const classes = useStyles()\r\n\r\n    const context = useContext(AppContext)\r\n\r\n    const grid = useRef()\r\n\r\n    let renderContext;\r\n\r\n    const setDimensions = async () => {\r\n        // Wait until canvas has resized proberly\r\n        await new Promise(requestAnimationFrame)\r\n\r\n        const canvasRect = canvas.getBoundingClientRect()\r\n\r\n        grid.current.width = canvasRect.width\r\n        grid.current.height = canvasRect.height\r\n    }\r\n\r\n    const render = (cellWidth, cellHeight) => {\r\n        for (let x = 0; x < grid.current.width; x += cellWidth) {\r\n            line(renderContext, x, 0, x, grid.current.height)\r\n        }\r\n\r\n        for (let y = 0; y < grid.current.height; y += cellHeight) {\r\n            line(renderContext, 0, y, grid.current.width, y)\r\n        }\r\n    }\r\n\r\n    // Render a dynamic amount of columns / rows with a fixed size\r\n    const renderWithFixedSpacing = () => {\r\n        if(!config.spacing) {\r\n            return\r\n        }\r\n\r\n        render(config.spacing, config.spacing)\r\n    }\r\n\r\n    // Render a fixed amount of columns / rows with a dynamic size\r\n    const renderWithRelativeSpacing = () => {\r\n        if(!config.columns || !config.rows || !canvas) {\r\n            return\r\n        }\r\n\r\n        const cellWidth = canvas.clientWidth / config.columns\r\n        const cellHeight = canvas.clientHeight / config.rows\r\n\r\n        render(cellWidth, cellHeight)\r\n    }\r\n\r\n    const renderGrid = () => {\r\n        renderContext = grid.current.getContext(\"2d\")\r\n\r\n        renderContext.strokeStyle = config.color\r\n\r\n        if(config.fixedSpacing) {\r\n            renderWithFixedSpacing()\r\n        } else {\r\n            renderWithRelativeSpacing()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!canvas) {\r\n            return\r\n        }\r\n\r\n        setDimensions().then(renderGrid)\r\n    }, [canvas, config, context.image, border])\r\n\r\n    return (\r\n        <canvas\r\n            ref={grid}\r\n            style={{ display: !config.enabled && \"none\" }}\r\n            className={classes.canvas}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Grid","import React, { useEffect } from \"react\"\r\nimport { Dialog, DialogTitle, Button, TextField, FormControlLabel, FormGroup } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormContext } from \"react-hook-form\"\r\n\r\nimport Select from \"./components/Select.js\"\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport settingsOptions from \"../../config/settings-options.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nfunction BorderDialog({ onClose, open, values }) {\r\n    const { register, getValues, handleSubmit, control, watch, reset, setValue } = useForm()\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        const values = getValues()\r\n\r\n        onClose(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n                <DialogTitle>Set Border</DialogTitle>\r\n\r\n                <FormContext {...{ control, watch, register, setValue }}>\r\n                    <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                        <FormGroup>\r\n                            {/* Size */}\r\n                            <TextField\r\n                                inputRef={register()}\r\n                                className={classes.input}\r\n                                fullWidth\r\n                                type=\"number\"\r\n                                name=\"size\"\r\n                                label=\"Size (px)\"\r\n                            />\r\n\r\n                            {/* Color */}\r\n                            <Select\r\n                                name=\"color\"\r\n                                label=\"Color\"\r\n                                options={settingsOptions.colors}\r\n                                className={classes.input}\r\n                                child={({ label, value }) => (\r\n                                    <span style={{ color: value }}>{label}</span>\r\n                                )}\r\n                            />\r\n\r\n                            {/* Top */}\r\n                            <Switch name=\"top\" label=\"Top\" className={classes.input}/>\r\n\r\n                            {/* Bottom */}\r\n                            <Switch name=\"bottom\" label=\"Bottom\" className={classes.input}/>\r\n\r\n                            {/* Left */}\r\n                            <Switch name=\"left\" label=\"Left\" className={classes.input}/>\r\n\r\n                            {/* Right */}\r\n                            <Switch name=\"right\" label=\"Right\" className={classes.input}/>\r\n\r\n                            <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormContext>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(BorderDialog, \"border\")","import React, { useContext } from \"react\"\r\nimport { SwipeableDrawer, IconButton, DialogTitle } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nimport WhatsAppIcon from \"../../assets/images/icons/WhatsApp.svg\"\r\nimport TwitterIcon from \"../../assets/images/icons/Twitter.png\"\r\nimport FacebookIcon from \"../../assets/images/icons/Facebook.png\"\r\nimport GmailIcon from \"../../assets/images/icons/Gmail.png\"\r\nimport TelegramIcon from \"../../assets/images/icons/Telegram.png\"\r\nimport PinterestIcon from \"../../assets/images/icons/Pinterest.png\"\r\nimport RedditIcon from \"../../assets/images/icons/Reddit.png\"\r\nimport TumblrIcon from \"../../assets/images/icons/Tumblr.png\"\r\nimport SkypeIcon from \"../../assets/images/icons/Skype.png\"\r\nimport FBMessengerIcon from \"../../assets/images/icons/FBMessenger.png\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    innerDrawer: {\r\n        borderRadius: \"16px 16px 0 0\"\r\n    },\r\n\r\n    title: {\r\n        paddingBottom: theme.spacing(1)\r\n    },\r\n\r\n    iconsContainer: {\r\n        display: \"flex\",\r\n        padding: `0 ${theme.spacing(1)}px ${theme.spacing(2)}px ${theme.spacing(1)}px`,\r\n        overflowX: \"scroll\"\r\n    },\r\n\r\n    icon: {\r\n        width: 40\r\n    }\r\n}))\r\n\r\nfunction ShareDialog({ open, link, onClose, onOpen }) {\r\n    link = encodeURIComponent(link)\r\n\r\n    const context = useContext(AppContext)\r\n    \r\n    const classes = useStyles()\r\n\r\n    const openLink = (href, label) => () => {\r\n        context.event.dispatchEvent(new CustomEvent(\"share\", { detail: { label } }))\r\n        window.open(href.replace(/{}/g, link))\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            disableDiscovery\r\n            disableSwipeToOpen\r\n            open={open}\r\n            onClose={onClose}\r\n            onOpen={onOpen}\r\n            anchor=\"bottom\"\r\n            PaperProps={{ className: classes.innerDrawer }}\r\n        >\r\n            <DialogTitle className={classes.title}>Share Link</DialogTitle>\r\n\r\n            <div className={classes.iconsContainer}>\r\n                <IconButton onClick={openLink(\"whatsapp://send?text={}\", \"WhatsApp\")}>\r\n                    <img src={WhatsAppIcon} alt=\"WhatsApp\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.facebook.com/sharer/sharer.php?u={}\", \"Facebook\")}>\r\n                    <img src={FacebookIcon} alt=\"Facebook\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"http://twitter.com/intent/tweet?text={}\", \"Twitter\")}>\r\n                    <img src={TwitterIcon} alt=\"Twitter\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://telegram.me/share?url={}\", \"Telegram\")}>\r\n                    <img src={TelegramIcon} alt=\"Telegram\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://web.skype.com/share?url={}\", \"Skype\")}>\r\n                    <img src={SkypeIcon} alt=\"Skype\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"fb-messenger://share?link={}\", \"FB-Messenger\")}>\r\n                    <img src={FBMessengerIcon} alt=\"Messenger\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.pinterest.com/pin/create/button?url={}\", \"Pinterest\")}>\r\n                    <img src={PinterestIcon} alt=\"Pinterest\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.reddit.com/submit?url={}\", \"Reddit\")}>\r\n                    <img src={RedditIcon} alt=\"Reddit\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.tumblr.com/widgets/share/tool?posttype=link&canonicalUrl={}\", \"Tumblr\")}>\r\n                    <img src={TumblrIcon} alt=\"Tumblr\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"mailto:?body={}\", \"Mail\")}>\r\n                    <img src={GmailIcon} alt=\"Email\" className={classes.icon}/>\r\n                </IconButton>\r\n            </div>\r\n        </SwipeableDrawer>\r\n    )\r\n}\r\n\r\nexport default ShareDialog","function dataURLtoFile(dataurl, filename) {\r\n    var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\nexport default dataURLtoFile","import { IS_DEV, CACHE_NAME } from \"../config/constants.js\"\r\n\r\nconst isCacheSupported = \"caches\" in window\r\n\r\nexport async function cachedRequest(url) {\r\n    // Do not cache in development mode\r\n    if (IS_DEV || !isCacheSupported) {\r\n        return await fetch(url)\r\n    }\r\n\r\n    // Retrieve cache instance\r\n    const cache = await caches.open(CACHE_NAME)\r\n\r\n    // Get cached data\r\n    const cachedData = await cache.match(url)\r\n\r\n    // Return cached data if neccessary\r\n    if(!navigator.onLine) {\r\n        return cachedData\r\n    }\r\n\r\n    // Request data from url\r\n    const response = await fetch(url)\r\n\r\n    // Write data to cache\r\n    cache.put(url, response.clone())\r\n\r\n    return response\r\n}\r\n\r\nexport async function getCachedImage(url) {\r\n    if (!isCacheSupported) {\r\n        return url\r\n    }\r\n\r\n    // Retrieve cache instance\r\n    const cache = await caches.open(CACHE_NAME)\r\n\r\n    // Get cached response\r\n    const response = await cache.match(url)\r\n\r\n    // Return url if image is not cached\r\n    if(!response) {\r\n        return url\r\n    }\r\n\r\n    // Create local image url from response\r\n    const blob = await response.blob()\r\n    const imageURL = URL.createObjectURL(blob)\r\n    \r\n    return imageURL\r\n}\r\n\r\nexport async function cacheImage(url) {\r\n    if (!isCacheSupported) {\r\n        return\r\n    }\r\n\r\n    // Do not cache blob / in development mode\r\n    if(url.indexOf(\"blob\") === 0 || IS_DEV) {\r\n        return\r\n    }\r\n\r\n    // Retrieve cache instance\r\n    const cache = await caches.open(CACHE_NAME)\r\n\r\n    // Check if image is cached already\r\n    const cachedData = await cache.match(url)\r\n\r\n    if(!cachedData) {\r\n        // Store image in cache\r\n        const response = await fetch(url)\r\n        cache.put(url, response)\r\n    }\r\n}","import { IS_DEV } from \"../config/constants.js\"\r\nimport { cachedRequest, getCachedImage } from \"./cache.js\"\r\n\r\nfunction url(path) {\r\n    return `${window.location.protocol}//${window.location.hostname}${IS_DEV ? \":8080\" : \"\"}/api${path}`\r\n}\r\n\r\n// Templates\r\n\r\nexport const uploadTemplate = (formData) => fetch(url(\"/templates\"), {\r\n    method: \"POST\",\r\n    body: formData\r\n})\r\n\r\nexport const getTemplates = () => {\r\n    return cachedRequest(url(\"/templates\"))\r\n        .then(res => res.json())\r\n        .then(async data => {\r\n            for(let template of data) {\r\n                template.image_url = await getCachedImage(template.image_url)\r\n\r\n                if (template.meta_data) {\r\n                    template.meta_data = JSON.parse(template.meta_data)\r\n                }\r\n            }\r\n\r\n            return data\r\n        })\r\n}\r\n\r\nexport const deleteTemplate = (password, id) => fetch(url(\"/templates/delete/\" + id), {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ password })\r\n})\r\n\r\nexport const registerTemplateUse = (id) => fetch(url(\"/templates/register-use\"), {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ id })\r\n})\r\n\r\n// Auth\r\n\r\nexport const authorize = (password) => fetch(url(\"/auth/authorize\"), {\r\n    method: \"POST\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ password })\r\n}).then(res => res.json())\r\n\r\n// Stickers\r\n\r\nexport const getStickers = () => cachedRequest(url(\"/stickers\"))\r\n    .then(res => res.json())\r\n    .then(async data => {\r\n        for(let sticker of data) {\r\n            sticker.image_url = await getCachedImage(sticker.image_url)\r\n        }\r\n\r\n        return data\r\n    })\r\n\r\nexport const uploadSticker = (formData) => fetch(url(\"/stickers\"), {\r\n    method: \"POST\",\r\n    body: formData\r\n})\r\n\r\nexport const deleteSticker = (password, id) => fetch(url(\"/stickers/delete/\" + id), {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ password })\r\n})\r\n\r\nexport const registerStickerUse = (id) => fetch(url(\"/stickers/register-use\"), {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ id })\r\n})\r\n\r\n// Upload\r\n\r\nexport const uploadFile = (formData) => fetch(\"/upload\", {\r\n    method: \"POST\",\r\n    body: formData\r\n})","import { uploadFile } from \"./API.js\"\r\n\r\nasync function uploadImage(image) {\r\n    // Create formData object\r\n    const formData = new FormData()\r\n    formData.append(\"file\", image)\r\n\r\n    // Upload image to server\r\n    try {\r\n        const res = await uploadFile(formData)\r\n        \r\n        const data = await res.json()\r\n    \r\n        return \"https://\" + window.location.host + data.path\r\n    } catch (error) {\r\n        console.error(error)\r\n        return\r\n    }\r\n}\r\n\r\nexport default uploadImage","import React, { useState, useEffect, useContext, useRef } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Dialog, Button, CircularProgress, Paper, Typography, IconButton, TextField, Snackbar } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\r\nimport LinkIcon from \"@material-ui/icons/Link\"\r\nimport ShareIcon from \"@material-ui/icons/Share\"\r\nimport PublishIcon from \"@material-ui/icons/Publish\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport ShareDialog from \"./ShareDialog.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport downloadImageFromSrc from \"../../utils/downloadImageFromSrc.js\"\r\nimport dataURLToFile from \"../../utils/dataURLToFile.js\"\r\nimport uploadImage from \"../../utils/uploadImage.js\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\nimport { uploadTemplate, registerTemplateUse, registerStickerUse } from \"../../utils/API.js\"\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    const spacing = {\r\n        margin: theme.spacing(2),\r\n        marginTop: 0\r\n    }\r\n\r\n    return {\r\n        spacing,\r\n\r\n        title: {\r\n            textAlign: \"center\"\r\n        },\r\n\r\n        innerDialog: {\r\n            margin: theme.spacing(1),\r\n            width: props => !props.imageData && \"100%\",\r\n            height: props => !props.imageData && \"50%\",\r\n            display: props => !props.imageData && \"flex\",\r\n            justifyContent: props => !props.imageData && \"center\",\r\n            alignItems: props => !props.imageData && \"center\"\r\n        },\r\n\r\n        image: {\r\n            width: \"90%\",\r\n            margin: `${theme.spacing(2)}px auto`\r\n        },\r\n\r\n        uploadButtonWrapper: {\r\n            ...spacing,\r\n            position: \"relative\"\r\n        },\r\n        \r\n        buttonLoader: {\r\n            position: \"absolute\",\r\n            top: \"50%\", left: \"50%\",\r\n            margin: \"-12px 0 0 -12px\"\r\n        },\r\n\r\n        linkWrapper: {\r\n            margin: theme.spacing(2),\r\n            marginTop: 0,\r\n            padding: `0 ${theme.spacing(1)}px`,\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\"\r\n        },\r\n\r\n        link: {\r\n            overflowX: \"scroll\",\r\n            padding: `${theme.spacing(1)}px 0`\r\n        },\r\n\r\n        shareButton: {\r\n            padding: theme.spacing(1)\r\n        },\r\n\r\n        terms: {\r\n            ...spacing,\r\n            color: theme.palette.text.secondary\r\n        },\r\n\r\n        archiveLink: {\r\n            color: theme.palette.text.secondary\r\n        },\r\n\r\n        snackbarClose: {\r\n            color: theme.palette.primary.variant\r\n        }\r\n    }\r\n})\r\n\r\nfunction ImageDialog({ open, onClose, imageData, elements }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles({ imageData })\r\n    \r\n    const { register, getValues } = useForm()\r\n\r\n    // Increase the usage-counter only once\r\n    const isRegistered = useRef(false)\r\n\r\n    const [link, setLink] = useState()\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isShareDialogOpen, setIsShareDialogOpen] = useState(false)\r\n    const [isUploadSnackbarOpen, setIsUploadSnackbarOpen] = useState(false)\r\n    const [hasCreatedTemplate, setHasCreatedTemplate] = useState(false)\r\n\r\n    const dispatchEvent = (name, detail) => context.event.dispatchEvent(new CustomEvent(name, { detail }))\r\n\r\n    const registerUsage = async () => {\r\n        // Register template usage\r\n        if(context.currentTemplate) {\r\n            if (!isRegistered.current) {\r\n                await registerTemplateUse(context.currentTemplate.id)\r\n            }\r\n        }\r\n\r\n        // Register sticker usage\r\n        for(let element of elements) {\r\n            if (element.type === \"sticker\" && element.data.id !== undefined) {\r\n                await registerStickerUse(element.data.id)\r\n            }\r\n        }\r\n\r\n        isRegistered.current = true\r\n    }\r\n\r\n    const handleClose = () => {\r\n        isRegistered.current = false\r\n        setHasCreatedTemplate(false)\r\n        onClose()\r\n    }\r\n\r\n    const handleDownloadClick = () => {\r\n        downloadImageFromSrc(imageData)\r\n        registerUsage()\r\n        dispatchEvent(\"downloadImage\")\r\n    }\r\n\r\n    const handleUploadClick = async () => {\r\n        setIsUploading(true)\r\n        \r\n        const file = dataURLToFile(imageData, \"image.png\")\r\n        const link = await uploadImage(file)\r\n        \r\n        setIsUploading(false)\r\n        setLink(link)\r\n        registerUsage()\r\n        dispatchEvent(\"uploadImage\", { link })\r\n    }\r\n\r\n    const handleShareClick = () => {\r\n        setIsShareDialogOpen(true)\r\n        dispatchEvent(\"openShareModal\")\r\n    }\r\n\r\n    const handleTemplateClick = async () => {\r\n        if(!getValues(\"label\")) {\r\n            return\r\n        }\r\n\r\n        // Collect image data\r\n        const label = getValues(\"label\")\r\n        const image = dataURLToFile(context.image, \"image.png\")\r\n        const metaData = {\r\n            textboxes: window.getTextboxes(),\r\n            border: window.getBorder()\r\n        }\r\n\r\n        // Create form data\r\n        const formData = new FormData()\r\n        formData.append(\"password\", context.password)\r\n        formData.append(\"image\", image)\r\n        formData.append(\"label\", label)\r\n        formData.append(\"meta_data\", JSON.stringify(metaData))\r\n\r\n        // Upload data\r\n        uploadTemplate(formData).then(res => {\r\n            if(res.ok) {\r\n                setHasCreatedTemplate(true)\r\n                setIsUploadSnackbarOpen(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!open) {\r\n            // Reset link when dialog closes\r\n            setLink(null)\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={handleClose} PaperProps={{ className: classes.innerDialog }}>\r\n                {!imageData ? (\r\n                    <CircularProgress/>\r\n                ) : (\r\n                    <>\r\n                        <img alt=\"\" src={imageData} className={classes.image}/>\r\n\r\n                        <Paper variant=\"outlined\" className={classes.linkWrapper} style={{ display: !link && \"none\" }}>\r\n                            <Typography variant=\"body1\" className={classes.link}>\r\n                                {link}\r\n                            </Typography>\r\n\r\n                            <IconButton className={classes.shareButton} onClick={handleShareClick}>\r\n                                <ShareIcon />\r\n                            </IconButton>\r\n                        </Paper>\r\n\r\n                        {!link && (\r\n                            <div className={classes.uploadButtonWrapper}>\r\n                                <Button\r\n                                    startIcon={<LinkIcon />}\r\n                                    color=\"primary\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={handleUploadClick}\r\n                                    disabled={isUploading}\r\n                                    style={{ width: \"100%\" }}\r\n                                >\r\n                                    Create Link\r\n                                </Button>\r\n\r\n                                {isUploading && <CircularProgress size={24} className={classes.buttonLoader} />}\r\n                            </div>\r\n                        )}\r\n\r\n                        <Button\r\n                            startIcon={<DownloadIcon />}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            className={classes.spacing}\r\n                            onClick={handleDownloadClick}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n\r\n                        <Typography variant=\"caption\" className={classes.terms}>\r\n                            By clicking on \"Create Link\" the image above will be uploaded to our servers and therefor be visible\r\n                            in the <a href=\"/archive\" target=\"_blank\" className={classes.archiveLink}>Archive</a>.\r\n                        </Typography>\r\n\r\n                        {context.password && !context.currentTemplate && !hasCreatedTemplate && (\r\n                            <>\r\n                                <TextField\r\n                                    inputRef={register()}\r\n                                    name=\"label\"\r\n                                    label=\"Label\"\r\n                                    className={classes.spacing}\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={context.label}\r\n                                />\r\n                                <Button\r\n                                    startIcon={<PublishIcon />}\r\n                                    color=\"primary\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.spacing}\r\n                                    onClick={handleTemplateClick}\r\n                                >\r\n                                    Publish Template\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n\r\n                        <ShareDialog\r\n                            open={isShareDialogOpen}\r\n                            link={link}\r\n                            onOpen={handleShareClick}\r\n                            onClose={() => setIsShareDialogOpen(false)}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={isUploadSnackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={() => setIsUploadSnackbarOpen(false)}\r\n                message=\"Uploaded\"\r\n                action={\r\n                    <IconButton onClick={() => setIsUploadSnackbarOpen(false)} className={classes.snackbarClose}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(ImageDialog, \"image\")","export default function downloadImageFromSrc(src) {\r\n    const a = document.createElement(\"a\")\r\n    a.href = src\r\n    a.download = \"download.png\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { Dialog, DialogTitle, Button, TextField, FormGroup } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormContext } from \"react-hook-form\"\r\n\r\nimport Select from \"./components/Select.js\"\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport settingsOptions from \"../../config/settings-options.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nfunction GridDialog({ onClose, open, values }) {\r\n    const { register, getValues, handleSubmit, control, watch, reset, setValue } = useForm()\r\n\r\n    const classes = useStyles()\r\n\r\n    const [spacingError, setSpacingError] = useState(false)\r\n\r\n    const handleClose = () => {\r\n        const values = getValues()\r\n\r\n        // Missing value \"Spacing\"\r\n        if(values.fixedSpacing && !values.spacing) {\r\n            setSpacingError(true)\r\n            return\r\n        } else {\r\n            setSpacingError(false)\r\n        }\r\n\r\n        values.spacing = parseInt(values.spacing)\r\n\r\n        onClose(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Set Grid</DialogTitle>\r\n\r\n            <FormContext {...{ control, watch, register, setValue }}>\r\n                <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                    <FormGroup>\r\n                        {/* Enabled */}\r\n                        <Switch name=\"enabled\" label=\"Enabled\" className={classes.input}/>\r\n\r\n                        {/* Use Fixed Spacing */}\r\n                        <Switch name=\"fixedSpacing\" label=\"Fixed Spacing\" className={classes.input}/>\r\n\r\n                        {/* Color */}\r\n                        <Select\r\n                            name=\"color\"\r\n                            label=\"Color\"\r\n                            options={settingsOptions.colors}\r\n                            className={classes.input}\r\n                            child={({ label, value }) => (\r\n                                <span style={{ color: value }}>{label}</span>\r\n                            )}\r\n                        />\r\n\r\n                        {/* Columns */}\r\n                        <TextField\r\n                            inputRef={register()}\r\n                            className={classes.input}\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"columns\"\r\n                            label=\"Columns\"\r\n                        />\r\n\r\n                        {/* Rows */}\r\n                        <TextField\r\n                            inputRef={register()}\r\n                            className={classes.input}\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"rows\"\r\n                            label=\"Rows\"\r\n                        />\r\n\r\n                        {/* Spacing */}\r\n                        <TextField\r\n                            inputRef={register()}\r\n                            className={classes.input}\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"spacing\"\r\n                            label=\"Spacing (px)\"\r\n                            error={spacingError}\r\n                        />\r\n\r\n                        <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </FormContext>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(GridDialog, \"grid\")","const importFile = accept => new Promise(resolve => {\r\n    const input = document.createElement(\"input\")\r\n    input.type = \"file\"\r\n    input.accept = accept\r\n    document.body.appendChild(input)\r\n\r\n    input.onchange = e => {\r\n        const file = e.target.files[0]\r\n        resolve(file)\r\n    }\r\n\r\n    input.click()\r\n    input.remove()\r\n})\r\n\r\nconst fileToImage = file => new Promise(resolve => {\r\n    const reader = new FileReader()\r\n\r\n    reader.onload = () => resolve(reader.result)\r\n\r\n    reader.readAsDataURL(file)\r\n})\r\n\r\nexport default importFile\r\n\r\nexport {\r\n    fileToImage\r\n}","import html2canvas from \"html2canvas\"\r\n\r\nimport { TEXTBOX_PADDING } from \"../config/constants.js\"\r\n\r\nfunction compensateError(clonedDocument) {\r\n    /**\r\n     * Compensate down shifting\r\n     */\r\n    const textboxes = clonedDocument.querySelectorAll(\".textbox\")\r\n    const padding = TEXTBOX_PADDING\r\n\r\n    textboxes.forEach(textbox => {\r\n        const shiftOffset = Math.min(textbox.offsetHeight / 18, padding)\r\n        textbox.style.padding = `${padding - shiftOffset}px ${padding}px ${padding + shiftOffset}px`\r\n    })\r\n\r\n    /**\r\n     * Reverse order of elements\r\n     */\r\n    const elements = Array.from(clonedDocument.querySelectorAll(\".element\"))\r\n    if(elements.length > 0) {\r\n        const parent = elements[0].parentNode\r\n        elements\r\n            .map(node => parent.removeChild(node))\r\n            .reverse()\r\n            .map(node => parent.appendChild(node))\r\n    }\r\n\r\n    /**\r\n     * Remove white border\r\n     */\r\n    const image = clonedDocument.querySelector(\".meme-image\")\r\n    image.style.minWidth = (image.clientWidth + 1) + \"px\"\r\n    image.style.minHeight = (image.clientHeight + 1) + \"px\"\r\n}\r\n\r\nasync function generateImage(container) {\r\n    const canvas = await html2canvas(container, {\r\n        useCORS: true,\r\n        onclone: compensateError\r\n    })\r\n\r\n    return canvas.toDataURL()\r\n}\r\n\r\nexport default generateImage","import React, { useContext, useEffect, useState, useRef } from \"react\"\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\"\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\"\r\n\r\nimport Textbox from \"./Elements/Textbox.js\"\r\nimport Sticker from \"./Elements/Sticker.js\"\r\nimport Grid from \"./Grid.js\"\r\nimport BorderDialog from \"../Dialogs/BorderDialog.js\"\r\nimport ImageDialog from \"../Dialogs/ImageDialog.js\"\r\nimport GridDialog from \"../Dialogs/GridDialog.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nimport importFile, { fileToImage } from \"../../utils/importFile.js\"\r\nimport generateImage from \"../../utils/generateImage.js\"\r\n\r\nfunction showCanvas (canvas) {\r\n    const newWindow = window.open(\"\", \"canvas\")\r\n    newWindow.document.body.appendChild(canvas)\r\n}\r\n\r\nfunction getDimensionsWithoutPadding(element) {\r\n    const styles = getComputedStyle(element)\r\n\r\n    return {\r\n        width: element.clientWidth - parseFloat(styles.paddingLeft) - parseFloat(styles.paddingRight),\r\n        height: element.clientHeight - parseFloat(styles.paddingTop) - parseFloat(styles.paddingBottom)\r\n    }\r\n}\r\n\r\nasync function waitFrames(amount = 1) {\r\n    for(let i = 0; i < amount; i++) {\r\n        await new Promise(requestAnimationFrame)\r\n    }\r\n}\r\n\r\nconst defaultBorderValues = {\r\n    size: 0,\r\n    top: true,\r\n    bottom: true,\r\n    left: false,\r\n    right: false,\r\n    color: \"white\"\r\n}\r\n\r\nconst defaultGridValues = {\r\n    enabled: false,\r\n    fixedSpacing: false,\r\n    color: \"black\",\r\n    spacing: undefined,\r\n    columns: 16,\r\n    rows: 16\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    canvasWrapper: {\r\n        position: \"absolute\",\r\n        top: 0, bottom: 0,\r\n        left: 0, right: 0,\r\n        backgroundColor: theme.palette.background.default,\r\n        // outline: `${theme.spacing(1)}px solid ${theme.palette.background.default}`,\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.mixins.toolbar.minHeight + theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    canvas: {\r\n        position: \"relative\",\r\n        display: \"flex\"\r\n    }\r\n}))\r\n\r\nfunction Canvas() {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const idCounter = useRef(0)\r\n\r\n    const image = useRef()\r\n    const canvas = useRef()\r\n    const container = useRef()\r\n    const elementRefs = useRef({})\r\n\r\n    let [elementKeys, setElementKeys] = useState([])\r\n    const [borderValues, setBorderValues] = useState(defaultBorderValues)\r\n    const [gridValues, setGridValues] = useState(defaultGridValues)\r\n    const [isBorderDialogOpen, setIsBorderDialogOpen] = useState(false)\r\n    const [isImageDialogOpen, setIsImageDialogOpen] = useState(false)\r\n    const [isGridDialogOpen, setIsGridDialogOpen] = useState(false)\r\n    const [generatedImage, setGeneratedImage] = useState(null)\r\n\r\n    elementRefs.current = {}\r\n    for (let element of elementKeys) {\r\n        elementRefs.current[element.key] = {}\r\n    }\r\n\r\n    const handleBorderDialogClose = (values) => {\r\n        if(values) {\r\n            setBorderValues(values)\r\n        }\r\n        setIsBorderDialogOpen(false)\r\n    }\r\n\r\n    const handleGridDialogClose = (values) => {\r\n        if(values) {\r\n            setGridValues(values)\r\n        }\r\n        setIsGridDialogOpen(false)\r\n    }\r\n\r\n    const handleImageDialogClose = async () => {\r\n        setIsImageDialogOpen(false)\r\n        // Wait until dialog is closed\r\n        await waitFrames(3)\r\n        setGeneratedImage(null)\r\n    }\r\n\r\n    const handleRemoveElement = (removeKey) => {\r\n        const newKeys = elementKeys.filter(({ key }) => key !== removeKey)\r\n        setElementKeys(newKeys)\r\n\r\n        delete elementRefs.current[removeKey]\r\n    }\r\n\r\n    const clearElements = () => {\r\n        setElementKeys([])\r\n        elementRefs.current = {}\r\n    }\r\n\r\n    const createNewElement = (type, data) => {\r\n        const newElementKey = {\r\n            type,\r\n            data,\r\n            key: idCounter.current++\r\n        }\r\n\r\n        return newElementKey\r\n    }\r\n\r\n    const handleAddTextbox = ({ template }) => {\r\n        const newElementKey = createNewElement(\"textbox\", { template })\r\n\r\n        setElementKeys([...elementKeys, newElementKey])\r\n\r\n        return newElementKey\r\n    }\r\n\r\n    const addSticker = (src, id) => {\r\n        const newElementKey = createNewElement(\"sticker\", { src, id })\r\n        setElementKeys([...elementKeys, newElementKey])\r\n    }\r\n\r\n    const handleImportSticker = async () => {\r\n        const file = await importFile(\"image/*\")\r\n        const base64Image = await fileToImage(file)\r\n        addSticker(base64Image)\r\n    }\r\n\r\n    const beforeCapturing = async container => {\r\n        Object.values(elementRefs.current).forEach(textbox => textbox.beforeCapturing())\r\n        \r\n        // Wait until the dom changes have applied\r\n        await waitFrames(3)\r\n    }\r\n\r\n    const afterCapturing = container => {\r\n        Object.values(elementRefs.current).forEach(textbox => textbox.afterCapturing())\r\n    }\r\n\r\n    const handleImportImage = async () => {\r\n        const file = await importFile(\"image/*\")\r\n        const base64Image = await fileToImage(file)\r\n\r\n        clearElements()\r\n        context.set({\r\n            currentTemplate: null,\r\n            image: base64Image\r\n        })\r\n    }\r\n\r\n    const handleGenerateImage = async () => {\r\n        setIsImageDialogOpen(true)\r\n\r\n        // Wait until component got rendered and the textbox handles got applied\r\n        await waitFrames(1)\r\n\r\n        const container = document.querySelector(`.${classes.canvas}`)\r\n\r\n        await beforeCapturing(container)\r\n\r\n        const imageData = await generateImage(container)\r\n\r\n        setGeneratedImage(imageData)\r\n        \r\n        afterCapturing(container)\r\n    }\r\n\r\n    const handleSetBorder = () => {\r\n        setIsBorderDialogOpen(true)\r\n    }\r\n\r\n    const handleSetGrid = () => {\r\n        setIsGridDialogOpen(true)\r\n    }\r\n\r\n    const handleLoadTemplate = async ({ detail: { template } }) => {\r\n        context.set({\r\n            currentTemplate: template,\r\n            image: template.image_url\r\n        })\r\n\r\n        // Wait until image is loaded into DOM and resized\r\n        await waitFrames(2)\r\n        \r\n        // Check if value is given as percentage string and convert it if true\r\n        const formatPercentage = (object, selector, useWidth = false) => {\r\n            if(/\\d+%/.test(object[selector])) {\r\n                const percentage = parseFloat(object[selector])\r\n                object[selector] = (useWidth ? image.current.clientWidth : image.current.clientHeight) * (percentage / 100)\r\n            }\r\n        }\r\n\r\n        // Delete all elements\r\n        clearElements()\r\n        elementKeys = []\r\n\r\n        // Stop if no metadata exists\r\n        if(!template.meta_data) {\r\n            return\r\n        }\r\n\r\n        const border = template.meta_data.border\r\n        const textboxes = template.meta_data.textboxes\r\n\r\n        // Format border size\r\n        if (typeof border?.size === \"string\") {\r\n            formatPercentage(border, \"size\")\r\n        }\r\n\r\n        // Set border\r\n        setBorderValues(border || defaultBorderValues)\r\n\r\n        // Handle textboxes\r\n        if(textboxes) {\r\n            for(let textbox of textboxes){\r\n                // Format values\r\n                formatPercentage(textbox, \"width\", true)\r\n                formatPercentage(textbox, \"height\")\r\n                formatPercentage(textbox, \"x\", true)\r\n                formatPercentage(textbox, \"y\")\r\n\r\n                // Add textbox\r\n                const newKey = handleAddTextbox({ template: textbox })\r\n                elementKeys.push(newKey)\r\n            }\r\n        }\r\n\r\n        // Set new keys\r\n        setElementKeys(elementKeys)\r\n    }\r\n\r\n    const handleLoadSticker = ({ detail: { sticker } }) => {\r\n        addSticker(sticker.image_url, sticker.id)\r\n    }\r\n\r\n    const handleGetTextboxes = () => {\r\n        const textboxKeys = elementKeys.filter(({ type }) => type === \"textbox\").map(({ key }) => key)\r\n        const formatted = textboxKeys.map(key => elementRefs.current[key].toObject({ image: image.current }))\r\n\r\n        return formatted\r\n    }\r\n\r\n    const handleGetBorder = () => {\r\n        return borderValues\r\n    }\r\n\r\n    // Set event listeners\r\n    useEffect(() => {\r\n        context.event.addEventListener(\"importImage\", handleImportImage)\r\n        context.event.addEventListener(\"addTextbox\", handleAddTextbox)\r\n        context.event.addEventListener(\"importSticker\", handleImportSticker)\r\n        context.event.addEventListener(\"generateImage\", handleGenerateImage)\r\n        context.event.addEventListener(\"setBorder\", handleSetBorder)\r\n        context.event.addEventListener(\"setGrid\", handleSetGrid)\r\n        context.event.addEventListener(\"loadTemplate\", handleLoadTemplate)\r\n        context.event.addEventListener(\"loadSticker\", handleLoadSticker)\r\n\r\n        window.getTextboxes = handleGetTextboxes\r\n        window.getBorder = handleGetBorder\r\n        \r\n        return () => {\r\n            context.event.removeEventListener(\"importImage\", handleImportImage)\r\n            context.event.removeEventListener(\"addTextbox\", handleAddTextbox)\r\n            context.event.removeEventListener(\"importSticker\", handleImportSticker)\r\n            context.event.removeEventListener(\"generateImage\", handleGenerateImage)\r\n            context.event.removeEventListener(\"setBorder\", handleSetBorder)\r\n            context.event.removeEventListener(\"setGrid\", handleSetGrid)\r\n            context.event.removeEventListener(\"loadTemplate\", handleLoadTemplate)\r\n            context.event.removeEventListener(\"loadSticker\", handleLoadSticker)\r\n        }\r\n    })\r\n\r\n    // Set image dimensions\r\n    useEffect(() => {\r\n        (async () => {\r\n            // Wait until image is loaded\r\n            await waitFrames(1)\r\n\r\n            if (!image.current || !container.current || !canvas.current) {\r\n                return\r\n            }\r\n\r\n            // Get image dimensions\r\n            const imgWidth = image.current.naturalWidth\r\n            const imgHeight = image.current.naturalHeight\r\n            const imgRatio = imgHeight / imgWidth\r\n\r\n            // Get container size\r\n            const { width: maxWidth, height: maxHeight } = getDimensionsWithoutPadding(container.current)\r\n\r\n            let newWidth, newHeight\r\n\r\n            if (maxWidth * imgRatio > maxHeight) {\r\n                // Height is larger than max height => Constrain height\r\n                const margin = 32\r\n                const borderSize = (borderValues.top || 0 + borderValues.bottom || 0) * borderValues.size\r\n                newHeight = maxHeight - margin - borderSize\r\n                newWidth = newHeight * (1 / imgRatio)\r\n            } else {\r\n                // Width is larger than max width => Constrain width\r\n                const borderSize = (borderValues.left || 0 + borderValues.right || 0) * borderValues.size\r\n                newWidth = maxWidth - borderSize\r\n                newHeight = newWidth * imgRatio\r\n            }\r\n\r\n            newWidth = Math.floor(newWidth)\r\n            newHeight = Math.floor(newHeight)\r\n\r\n            // Apply sizing to image\r\n            image.current.style.width = newWidth + \"px\"\r\n            image.current.style.height = newHeight + \"px\"\r\n\r\n            // Apply sizing to canvas\r\n            canvas.current.style.width = newWidth + \"px\"\r\n            canvas.current.style.height = newHeight + \"px\"\r\n        })()\r\n    }, [context.image, image, container, canvas, borderValues])\r\n\r\n    return (\r\n        <div className={classes.canvasWrapper} ref={container}>\r\n            <div \r\n                className={classes.canvas} \r\n                style={{\r\n                    paddingTop: borderValues.top && borderValues.size + \"px\",\r\n                    paddingBottom: borderValues.bottom && borderValues.size + \"px\",\r\n                    paddingLeft: borderValues.left && borderValues.size + \"px\",\r\n                    paddingRight: borderValues.right && borderValues.size + \"px\",\r\n                    backgroundColor: context.image && borderValues.color,\r\n                    width: !context.image && \"unset\"\r\n                }}\r\n                ref={canvas}\r\n            >\r\n                {context.image ? (\r\n                    <img\r\n                        alt=\"\"\r\n                        src={context.image}\r\n                        className=\"meme-image\"\r\n                        ref={image}\r\n                        draggable=\"false\"\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <IconButton onClick={() => context.event.dispatchEvent(new CustomEvent(\"openTemplatesDialog\"))}>\r\n                            <CloudDownloadIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                        \r\n                        <IconButton onClick={handleImportImage}>\r\n                            <PhotoLibraryIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </>\r\n                )}\r\n\r\n                {elementKeys.map(({ type, key, data }) => {\r\n                    if(type === \"textbox\") {\r\n                        return (\r\n                            <Textbox\r\n                                key={key}\r\n                                id={key}\r\n                                onRemove={handleRemoveElement}\r\n                                handle={elementRefs.current[key]}\r\n                                grid={gridValues}\r\n                                template={data.template}\r\n                                canvas={canvas.current}\r\n                            />\r\n                        )\r\n                    } else if (type === \"sticker\") {\r\n                        return (\r\n                            <Sticker\r\n                                key={key}\r\n                                id={key}\r\n                                onRemove={handleRemoveElement}\r\n                                handle={elementRefs.current[key]}\r\n                                grid={gridValues}\r\n                                canvas={canvas.current}\r\n                                src={data.src}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    throw new Error(\"Type \" + type + \" is not defined\")\r\n                })}\r\n            </div>\r\n\r\n            <Grid config={gridValues} canvas={canvas.current} border={borderValues}/>\r\n\r\n            <BorderDialog open={isBorderDialogOpen} onClose={handleBorderDialogClose} values={borderValues}/>\r\n            <GridDialog open={isGridDialogOpen} onClose={handleGridDialogClose} values={gridValues}/>\r\n            <ImageDialog open={isImageDialogOpen} onClose={handleImageDialogClose} imageData={generatedImage} elements={elementKeys}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas","import React, { useContext } from \"react\"\r\nimport { Menu as MuiMenu, MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport BorderOuterIcon from \"@material-ui/icons/BorderOuter\"\r\nimport GridIcon from \"@material-ui/icons/GridOn\"\r\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\"\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        minWidth: theme.spacing(4)\r\n    }\r\n}))\r\n\r\nfunction Menu({ open, anchorEl, onClose }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const dispatchEvent = (name) => () => {\r\n        context.event.dispatchEvent(new CustomEvent(name))\r\n        onClose()\r\n    } \r\n\r\n    return (\r\n        <MuiMenu\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n            transformOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n            }}\r\n        >\r\n            <MenuItem onClick={dispatchEvent(\"setBorder\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <BorderOuterIcon fontSize=\"small\"/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Border\"/>\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={dispatchEvent(\"setGrid\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <GridIcon fontSize=\"small\"/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Grid\"/>\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={dispatchEvent(\"importSticker\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <AddPhotoIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Import Sticker\" />\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={dispatchEvent(\"importImage\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <PhotoLibraryIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary={context.image ? \"Replace Meme\" : \"Import Meme\"} />\r\n            </MenuItem>\r\n        </MuiMenu>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from \"@material-ui/core\"\r\n\r\nfunction ConfirmDialog({ onClose, open, content }) {\r\n    const handleCancel = () => onClose(false)\r\n\r\n    const handleAccept = () => onClose(true)\r\n\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            open={open}\r\n        >\r\n            <DialogTitle>Confirm</DialogTitle>\r\n            \r\n            <DialogContent dividers>\r\n                <Typography>{content}</Typography>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleCancel}>Cancel</Button>\r\n                <Button onClick={handleAccept}>Ok</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialog","import React, { useState, useContext, useEffect, useRef } from \"react\"\r\nimport { IconButton, GridList, GridListTile, GridListTileBar, CircularProgress, InputBase, Paper } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport { AppContext } from \"../../../App.js\"\r\nimport ConfirmDialog from \"../ConfirmDialog.js\"\r\n\r\nimport { getTemplates, deleteTemplate } from \"../../../utils/API.js\"\r\nimport { cacheImage } from \"../../../utils/cache.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    spacer: {\r\n        height: theme.spacing(2)\r\n    },\r\n\r\n    searchWrapper: {\r\n        margin: `${theme.spacing(2)}px ${theme.spacing(1)}px`,\r\n        marginTop: 0,\r\n        padding: \"2px 4px\",\r\n        display: \"flex\"\r\n    },\r\n\r\n    search: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1\r\n    },\r\n\r\n    searchClear: {\r\n        padding: theme.spacing(1)\r\n    },\r\n    \r\n    listWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    list: {\r\n        maxWidth: 400,\r\n        width: \"100%\"\r\n    },\r\n\r\n    tile: {\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    tilebar: {\r\n        height: 56\r\n    },\r\n\r\n    deleteButton: {\r\n        zIndex: 10,\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0\r\n    }\r\n}))\r\n\r\nconst getSubtitle = (count) => {\r\n    if (count === 1) {\r\n        return \"1 Meme Created\"\r\n    } else {\r\n        return count + \" Memes Created\"\r\n    }\r\n}\r\n\r\nfunction Templates({ onLoad }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const currentTemplate = useRef({})\r\n\r\n    const [templates, setTemplates] = useState()\r\n    const [isConfirmDialogOpen, setIsConfirmDialogOpen] = useState(false)\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const fetchTemplates = () => {\r\n        getTemplates()\r\n            .then(data => setTemplates(data))\r\n    }\r\n\r\n    const handleDeleteClick = (template) => {\r\n        currentTemplate.current = template\r\n        setIsConfirmDialogOpen(true)\r\n    }\r\n\r\n    const handleConfirmDialogClose = (shouldDelete) => {\r\n        setIsConfirmDialogOpen(false)\r\n\r\n        if (shouldDelete) {\r\n            deleteTemplate(context.password, currentTemplate.current.id)\r\n                .then(fetchTemplates)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event, template) => {\r\n        // Prevent loading when delete icon got clicked\r\n        if (event.target.tagName === \"DIV\" || event.target.tagName === \"IMG\") {\r\n            onLoad(template)\r\n        }\r\n    }\r\n\r\n    const handleSearchChange = event => {\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    const handleImageLoad = (template) => {\r\n        cacheImage(template.image_url)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTemplates()\r\n    }, [])\r\n\r\n    if (!templates) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    // Filter by search string\r\n    const renderTemplates = templates.filter(({ label }) => label.toLowerCase().includes(search.toLowerCase()))\r\n\r\n    // Sort by usage => Push most used memes to the top\r\n    renderTemplates.sort((a, b) => b.amount_uses - a.amount_uses)\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.spacer}/>\r\n\r\n            <Paper variant=\"outlined\" className={classes.searchWrapper}>\r\n                <InputBase value={search} onChange={handleSearchChange} placeholder=\"Search\" className={classes.search} />\r\n\r\n                <IconButton onClick={() => setSearch(\"\")} className={classes.searchClear}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </Paper>\r\n\r\n            <div className={classes.listWrapper}>\r\n                <GridList cellHeight={150} className={classes.list}>\r\n                    {renderTemplates.map((template, i) => (\r\n                        <GridListTile key={i} className={classes.tile} onClick={e => handleClick(e, template)}>\r\n                            <img src={template.image_url} alt={template.label} loading=\"lazy\" onLoad={() => handleImageLoad(template)}/>\r\n\r\n                            <GridListTileBar title={template.label} subtitle={getSubtitle(template.amount_uses)} className={classes.tilebar} />\r\n\r\n                            {context.password && (\r\n                                <IconButton onClick={() => handleDeleteClick(template)} className={classes.deleteButton}>\r\n                                    <DeleteIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            )}\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n\r\n                <ConfirmDialog\r\n                    open={isConfirmDialogOpen}\r\n                    onClose={handleConfirmDialogClose}\r\n                    content={`The template \"${currentTemplate.current.label}\" will be deleted`}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Templates","import React, { useState, useContext, useEffect, useRef } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { IconButton, GridList, GridListTile, CircularProgress, Fab, Zoom } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\n\r\nimport { AppContext } from \"../../../App.js\"\r\nimport ConfirmDialog from \"../ConfirmDialog.js\"\r\n\r\nimport { getStickers, deleteSticker, uploadSticker } from \"../../../utils/API.js\"\r\nimport importFile from \"../../../utils/importFile.js\"\r\nimport { cacheImage } from \"../../../utils/cache.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    listWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    list: {\r\n        maxWidth: 400,\r\n        paddingTop: theme.spacing(1),\r\n        width: \"100%\"\r\n    },\r\n\r\n    tile: {\r\n        cursor: \"pointer\",\r\n        \r\n        \"& div\": {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }\r\n    },\r\n\r\n    deleteButton: {\r\n        zIndex: 10,\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0\r\n    },\r\n\r\n    addButton: {\r\n        position: \"fixed\",\r\n        right: theme.spacing(2),\r\n        bottom: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nfunction InnerTile({ sticker, onDelete }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const image = useRef()\r\n\r\n    const resizeImage = () => {\r\n        if (!image.current) {\r\n            return\r\n        }\r\n\r\n        // Set image dimensions\r\n        if (image.current.naturalWidth >= image.current.naturalHeight) {\r\n            image.current.style.width = \"100%\"\r\n        } else if (image.current.naturalHeight > image.current.naturalWidth) {\r\n            image.current.style.height = \"100%\"\r\n        }\r\n    }\r\n\r\n    const handleImageLoad = () => {\r\n        cacheImage(sticker.image_url)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!image.current) {\r\n            return\r\n        }\r\n\r\n        image.current.onload = () => {\r\n            resizeImage()\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <img src={sticker.image_url} alt=\"Sticker\" loading=\"lazy\" ref={image} onLoad={handleImageLoad}/>\r\n\r\n            {context.password && (\r\n                <IconButton onClick={() => onDelete(sticker)} className={classes.deleteButton}>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Stickers({ onLoad, active }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const currentSticker = useRef({})\r\n\r\n    const [stickers, setStickers] = useState()\r\n    const [isConfirmDialogOpen, setIsConfirmDialogOpen] = useState(false)\r\n\r\n    const fetchStickers = () => {\r\n        getStickers()\r\n            .then(data => setStickers(data))\r\n    }\r\n\r\n    const handleDelete = (sticker) => {\r\n        currentSticker.current = sticker\r\n        setIsConfirmDialogOpen(true)\r\n    }\r\n\r\n    const handleConfirmDialogClose = (shouldDelete) => {\r\n        setIsConfirmDialogOpen(false)\r\n\r\n        if (shouldDelete) {\r\n            deleteSticker(context.password, currentSticker.current.id)\r\n                .then(fetchStickers)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event, sticker) => {\r\n        // Prevent loading when delete icon got clicked\r\n        if (event.target.tagName === \"DIV\" || event.target.tagName === \"IMG\") {\r\n            onLoad(sticker)\r\n        }\r\n    }\r\n\r\n    const handleAddSticker = async () => {\r\n        // Import image\r\n        const image = await importFile(\"image/*\")\r\n\r\n        // Create form data\r\n        const formData = new FormData()\r\n        formData.append(\"image\", image)\r\n        formData.append(\"password\", context.password)\r\n\r\n        // Upload image\r\n        await uploadSticker(formData)\r\n        fetchStickers()\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchStickers()\r\n    }, [])\r\n\r\n    if (!stickers) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    // Sort by usage => Push most used stickers to the top\r\n    stickers.sort((a, b) => b.amount_uses - a.amount_uses)\r\n\r\n    return (\r\n        <div className={classes.listWrapper}>\r\n            <GridList className={classes.list} cols={3}>\r\n                {stickers.map((sticker, i) => (\r\n                    <GridListTile className={classes.tile} onClick={e => handleClick(e, sticker)} key={i}>\r\n                        <InnerTile sticker={sticker} onDelete={handleDelete}/>\r\n                    </GridListTile>    \r\n                ))}\r\n            </GridList>\r\n\r\n            <ConfirmDialog\r\n                open={isConfirmDialogOpen}\r\n                onClose={handleConfirmDialogClose}\r\n                content={`Sticker ${currentSticker.current.id} will be deleted`}\r\n            />\r\n            \r\n            {context.password && ReactDOM.createPortal((\r\n                <Zoom in={active} unmountOnExit>\r\n                    <Fab color=\"secondary\" className={classes.addButton} onClick={handleAddSticker}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Zoom>\r\n            ), document.getElementById(\"templates-dialog-inner-container\"))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stickers","import React, { useState, useContext } from \"react\"\r\nimport { Dialog, AppBar, Toolbar, IconButton, Slide, Tabs, Tab } from \"@material-ui/core\"\r\nimport SwipeableViews from \"react-swipeable-views\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport Templates from \"./components/Templates.js\"\r\nimport Stickers from \"./components/Stickers.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbar: {\r\n        minHeight: 46\r\n    },\r\n\r\n    body: {\r\n        marginTop: 46\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props}/>\r\n})\r\n\r\nfunction TemplatesDialog({ onClose, open }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles({\r\n        width: context.width\r\n    })\r\n\r\n    const [currentTab, setCurrentTab] = useState(0)\r\n\r\n    const handleClose = () => {\r\n        onClose()\r\n    }\r\n\r\n    const handleTemplateLoad = (template) => {\r\n        context.event.dispatchEvent(new CustomEvent(\"loadTemplate\", { detail: { template } }))\r\n        handleClose()\r\n    }\r\n\r\n    const handleStickerLoad = (sticker) => {\r\n        context.event.dispatchEvent(new CustomEvent(\"loadSticker\", { detail: { sticker } }))\r\n        handleClose()\r\n    }\r\n\r\n    const scrollToTop = () => {\r\n        document.getElementById(\"templates-dialog-inner-container\").scrollTo(0, 0)\r\n    }\r\n\r\n    const handleTabChange = (event, index) => {\r\n        setCurrentTab(index)\r\n        scrollToTop()\r\n    }\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setCurrentTab(index)\r\n        scrollToTop()\r\n    }\r\n\r\n    return (\r\n        <Dialog fullScreen onClose={handleClose} open={open} TransitionComponent={Transition}>\r\n            <AppBar>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n\r\n                    <Tabs value={currentTab} onChange={handleTabChange}>\r\n                        <Tab label=\"Templates\"/>\r\n                        <Tab label=\"Stickers\"/>\r\n                    </Tabs>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <SwipeableViews index={currentTab} onChangeIndex={handleChangeIndex} axis=\"x\" id=\"templates-dialog-inner-container\" disableLazyLoading>\r\n                <div className={classes.body}>\r\n                    <Templates onLoad={handleTemplateLoad} active={currentTab === 0}/>\r\n                </div>\r\n\r\n                <div className={classes.body}>\r\n                    <Stickers onLoad={handleStickerLoad} active={currentTab === 1}/>\r\n                </div>\r\n            </SwipeableViews>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(TemplatesDialog, \"templates\")","import React from \"react\"\r\nimport { Dialog, ClickAwayListener, Tooltip } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport data from \"../../config/help-overlay-data.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    innerDialog: {\r\n        background: \"none\",\r\n        overflow: \"hidden\"\r\n    }\r\n}))\r\n\r\nconst tooltipOffset = 20\r\n\r\nfunction OverlayChild({ data: { selector, content }, open }) {\r\n    const rect = document.querySelector(selector).getBoundingClientRect()\r\n    \r\n    return (\r\n        <Tooltip\r\n            open={open}\r\n            placement=\"top\"\r\n            arrow\r\n            title={content}\r\n        >\r\n            <div style={{\r\n                position: \"absolute\",\r\n                top: rect.top + tooltipOffset,\r\n                left: rect.left,\r\n                width: rect.width + \"px\",\r\n                height: rect.height + \"px\"\r\n            }}/>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nfunction HelpDialog({ open, onClose }) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            fullScreen\r\n            PaperProps={{ className: classes.innerDialog }}\r\n        >\r\n            <ClickAwayListener onClickAway={onClose}>\r\n                <div>\r\n                    {data.map((data, i) => <OverlayChild data={data} key={i} open={open}/>)}\r\n                </div>\r\n            </ClickAwayListener>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(HelpDialog, \"help\")","import React, { useState, useContext } from \"react\"\r\nimport { Dialog, DialogTitle, Button, TextField, FormGroup, Snackbar, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormContext } from \"react-hook-form\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\nimport { authorize } from \"../../utils/API.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n\r\n    snackbarClose: {\r\n        color: theme.palette.primary.variant\r\n    }\r\n}))\r\n\r\nfunction BorderDialog({ onClose, open }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const { register, getValues, handleSubmit, control, watch, setValue } = useForm()\r\n\r\n    const classes = useStyles()\r\n\r\n    const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n    const [isWrongPassword, setIsWrongPassword] = useState(false)\r\n\r\n    const onSubmit = async () => {\r\n        const password = getValues(\"password\")\r\n\r\n        const res = await authorize(password)\r\n\r\n        if(res) {\r\n            setIsWrongPassword(false)\r\n            setIsSnackbarOpen(true)\r\n            context.setPassword(password)\r\n            onClose()\r\n        } else {\r\n            setIsWrongPassword(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog onClose={onClose} open={open}>\r\n                <DialogTitle>Login</DialogTitle>\r\n\r\n                <FormContext {...{ control, watch, register, setValue }}>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n                        <FormGroup>\r\n                            {/* Password */}\r\n                            <TextField\r\n                                error={isWrongPassword}\r\n                                inputRef={register()}\r\n                                className={classes.input}\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                helperText={isWrongPassword && \"Wrong Password\"}\r\n                            />\r\n\r\n                            <Button fullWidth className={classes.applyButton} type=\"submit\">Login</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormContext>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\"\r\n                }}\r\n                open={isSnackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={() => setIsSnackbarOpen(false)}\r\n                message=\"Logged In\"\r\n                action={\r\n                    <IconButton onClick={() => setIsSnackbarOpen(false)} className={classes.snackbarClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(BorderDialog, \"auth\")","import React, { useContext, useState, useRef, useEffect } from \"react\"\r\nimport { AppBar, Toolbar, Fab, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DoneIcon from \"@material-ui/icons/Done\"\r\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\"\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\"\r\nimport HelpIcon from \"@material-ui/icons/Help\"\r\nimport UndoIcon from \"@material-ui/icons/Undo\"\r\n\r\nimport Menu from \"./Menu.js\"\r\nimport TemplatesDialog from \"../Dialogs/TemplatesDialog.js\"\r\nimport HelpDialog from \"../Dialogs/HelpDialog.js\"\r\nimport AuthDialog from \"../Dialogs/AuthDialog.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport { LONG_PRESS_DURATION } from \"../../config/constants.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: \"absolute\",\r\n        top: \"unset\",\r\n        bottom: 0,\r\n        left: 0,\r\n        right: \"unset\",\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n\r\n    fabButton: {\r\n        position: \"absolute\",\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: \"0 auto\"\r\n    },\r\n\r\n    spacer: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nfunction BottomBar() {\r\n    const context = useContext(AppContext)\r\n    \r\n    const classes = useStyles()\r\n\r\n    const openMenuButton = useRef()\r\n    const helpButtonTimer = useRef()\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n    const [isTemplatesOpen, setIsTemplatesOpen] = useState(false)\r\n    const [isHelpOpen, setIsHelpOpen] = useState(false)\r\n    const [isAuthDialogOpen, setIsAuthDialogOpen] = useState(false)\r\n\r\n    const handleMoreClick = () => {\r\n        setIsMenuOpen(!isMenuOpen)\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setIsMenuOpen(false)\r\n    }\r\n\r\n    const handleTemplatesClick = () => {\r\n        setIsTemplatesOpen(true)\r\n    }\r\n\r\n    const handleHelpClick = () => {\r\n        setIsHelpOpen(true)\r\n    }\r\n\r\n    const handleTouchStart = () => {\r\n        if(context.password) {\r\n            return\r\n        }\r\n\r\n        helpButtonTimer.current = setTimeout(() => {\r\n            setIsAuthDialogOpen(true)\r\n        }, LONG_PRESS_DURATION)\r\n    }\r\n\r\n    const handleTouchEnd = () => {\r\n        clearTimeout(helpButtonTimer.current)\r\n    }\r\n\r\n    const dispatchEvent = (name) => () => {\r\n        context.event.dispatchEvent(new CustomEvent(name))\r\n    }\r\n\r\n    useEffect(() => {\r\n        context.event.addEventListener(\"openTemplatesDialog\", handleTemplatesClick)\r\n        \r\n        return () => {\r\n            context.event.removeEventListener(\"openTemplatesDialog\", handleTemplatesClick)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton onClick={handleHelpClick} onTouchStart={handleTouchStart} onTouchEnd={handleTouchEnd} onMouseDown={handleTouchStart} onMouseUp={handleTouchEnd}>\r\n                    <HelpIcon/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={handleTemplatesClick} id=\"templates-button\">\r\n                    <CloudDownloadIcon/>\r\n                </IconButton>\r\n\r\n                <div className={classes.spacer}/>\r\n\r\n                <Fab color=\"primary\" className={classes.fabButton} onClick={dispatchEvent(\"generateImage\")} disabled={!context.image}>\r\n                    <DoneIcon/>\r\n                </Fab>\r\n\r\n                <IconButton onClick={dispatchEvent(\"addTextbox\")} id=\"textbox-button\">\r\n                    <TextFieldsIcon/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={dispatchEvent(\"undo\")} id=\"undo-button\">\r\n                    <UndoIcon/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={handleMoreClick} ref={openMenuButton}>\r\n                    <MoreVertIcon/>\r\n                </IconButton>\r\n\r\n                <Menu open={isMenuOpen} anchorEl={openMenuButton.current} onClose={handleMenuClose}/>\r\n\r\n                <TemplatesDialog open={isTemplatesOpen} onClose={() => setIsTemplatesOpen(false)}/>\r\n                <HelpDialog open={isHelpOpen} onClose={() => setIsHelpOpen(false)}/>\r\n                <AuthDialog open={isAuthDialogOpen} onClose={() => setIsAuthDialogOpen(false)}/>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default BottomBar","import { useContext, useEffect, useState } from \"react\"\r\nimport ReactGA from \"react-ga\"\r\n\r\nimport { AppContext } from \"../App.js\"\r\nimport { GA_TRACKING_ID, IS_DEV } from \"../config/constants.js\"\r\n\r\nfunction Analytics() {\r\n    const context = useContext(AppContext)\r\n    const [isInitialized, setIsInitialized] = useState(false)\r\n\r\n    /**\r\n     * Initialize GA\r\n     */\r\n    useEffect(() => {\r\n        if(context.password || IS_DEV) {\r\n            return\r\n        }\r\n\r\n        ReactGA.initialize(GA_TRACKING_ID)\r\n\r\n        ReactGA.pageview(window.location.pathname)\r\n\r\n        setIsInitialized(true)\r\n    }, [])\r\n\r\n    /**\r\n     * Forward events to GA\r\n     */\r\n    useEffect(() => {\r\n        if(!isInitialized) {\r\n            return\r\n        }\r\n\r\n        const generateImageEvent = ReactGA.event.bind(null, {\r\n            category: \"Editor\",\r\n            action: \"Generate Image\",\r\n            ...(context.currentTemplate ? {\r\n                label: context.currentTemplate.label,\r\n                value: context.currentTemplate.id\r\n            } : {})\r\n        })\r\n\r\n        const loadTemplateEvent = ({ detail: { template } }) => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Load Template\",\r\n            label: template.label,\r\n            value: template.id\r\n        })\r\n        \r\n        const shareModalModalview = () => ReactGA.modalview(\"share\")\r\n\r\n        const uploadImageEvent = ({ detail: { link } }) => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Upload Image\",\r\n            label: link\r\n        })\r\n\r\n        const downloadImageEvent = () => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Download Image\"\r\n        })\r\n\r\n        const shareEvent = ({ detail: { label } }) => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Share\",\r\n            label\r\n        })\r\n\r\n        context.event.addEventListener(\"generateImage\", generateImageEvent)\r\n        context.event.addEventListener(\"loadTemplate\", loadTemplateEvent)\r\n        context.event.addEventListener(\"openShareModal\", shareModalModalview)\r\n        context.event.addEventListener(\"uploadImage\", uploadImageEvent)\r\n        context.event.addEventListener(\"downloadImage\", downloadImageEvent)\r\n        context.event.addEventListener(\"share\", shareEvent)\r\n\r\n        return () => {\r\n            context.event.removeEventListener(\"generateImage\", generateImageEvent)\r\n            context.event.removeEventListener(\"loadTemplate\", loadTemplateEvent)\r\n            context.event.removeEventListener(\"openShareModal\", shareModalModalview)\r\n            context.event.removeEventListener(\"uploadImage\", uploadImageEvent)\r\n            context.event.removeEventListener(\"downloadImage\", downloadImageEvent)\r\n            context.event.removeEventListener(\"share\", shareEvent)\r\n        }\r\n    }, [context, isInitialized])\r\n\r\n    return null\r\n}\r\n\r\nexport default Analytics","import React, { useState, useEffect } from \"react\"\r\nimport { Snackbar, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    snackbarClose: {\r\n        color: theme.palette.primary.variant\r\n    }\r\n}))\r\n\r\nfunction OfflineUseAlerts() {\r\n    const classes = useStyles()\r\n\r\n    const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n    const [snackbarText, setSnackbarText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const channel = new BroadcastChannel(\"sw-0\")\r\n    \r\n        channel.addEventListener(\"message\", function ({ data: message }) {\r\n            if(message === \"content-cached\") {\r\n                setIsSnackbarOpen(true)\r\n                setSnackbarText(\"The app is cached for offline use\")\r\n\r\n            } else if (message === \"content-available\") {\r\n                setIsSnackbarOpen(true)\r\n                setSnackbarText(\"A new version is available. Restart the app to see it\")\r\n\r\n            }\r\n        })\r\n\r\n        return () => channel.close()\r\n    }, [])\r\n\r\n    return ( \r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n                open={isSnackbarOpen}\r\n                autoHideDuration={6000}\r\n                message={snackbarText}\r\n                onClose={() => setIsSnackbarOpen(false)}\r\n                action={\r\n                    <IconButton onClick={() => setIsSnackbarOpen(false)} className={classes.snackbarClose}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OfflineUseAlerts","import React, { useState, useEffect } from \"react\"\r\n\r\nimport Canvas from \"./components/Canvas/Canvas.js\"\r\nimport BottomBar from \"./components/BottomBar/BottomBar.js\"\r\nimport Analytics from \"./utils/Analytics.js\"\r\nimport OfflineUseAlerts from \"./utils/OfflineUseAlerts.js\"\r\n\r\nconst AppContext = React.createContext()\r\n\r\nfunction App() {\r\n    const [context, setContext] = useState({\r\n        event: new EventTarget(),\r\n        image: null,\r\n        label: null,\r\n        currentTemplate: null,\r\n        password: localStorage.getItem(\"password\")\r\n    })\r\n\r\n    const setter = {\r\n        set: values => setContext({ ...context, ...values }),\r\n        setPassword: password => {\r\n            // Store password in localstorage\r\n            localStorage.setItem(\"password\", password)\r\n            setContext({ ...context, password })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Handle image injection\r\n        const handleMessage = (message) => {\r\n            if (message.data.image) {\r\n                setContext({\r\n                    ...context,\r\n                    image: message.data.image,\r\n                    label: message.data.label\r\n                })\r\n            }\r\n        }\r\n\r\n        // Detect ctrl + z\r\n        const handleUndo = (event) => {\r\n            if (event.ctrlKey && event.keyCode === 90) {\r\n                context.event.dispatchEvent(new CustomEvent(\"undo\"))\r\n            }\r\n        }\r\n\r\n        window.addEventListener(\"message\", handleMessage)\r\n        window.addEventListener(\"keydown\", handleUndo)\r\n        \r\n        return () => {\r\n            window.removeEventListener(\"message\", handleMessage)\r\n            window.removeEventListener(\"keydown\", handleUndo)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <AppContext.Provider value={{ ...context, ...setter }}>\r\n            <Analytics/>\r\n            <OfflineUseAlerts/>\r\n            \r\n            <Canvas/>\r\n            <BottomBar/>\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nexport {\r\n    AppContext\r\n}","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nconst channel = new BroadcastChannel(\"sw-0\")\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' &&'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            channel.postMessage(\"content-available\")\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            channel.postMessage(\"content-cached\")\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\"\r\n\r\nimport App from \"./App.js\"\r\nimport { IS_DEV } from \"./config/constants.js\"\r\nimport * as serviceWorker from \"./serviceWorker.js\"\r\nimport \"./index.css\"\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: \"#BB86FC\",\r\n            variant: \"#3700B3\"\r\n        }\r\n    }\r\n})\r\n\r\nif(IS_DEV) {\r\n    console.log(theme)\r\n}\r\n\r\nReactDOM.render((\r\n    <ThemeProvider theme={theme}>\r\n        <App/>\r\n    </ThemeProvider>\r\n), document.getElementById(\"root\"))\r\n\r\nserviceWorker.register()"],"sourceRoot":""}