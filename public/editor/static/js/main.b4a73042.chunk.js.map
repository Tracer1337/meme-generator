{"version":3,"sources":["assets/images/icons/WhatsApp.svg","assets/images/icons/Twitter.png","assets/images/icons/Facebook.png","assets/images/icons/Gmail.png","assets/images/icons/Telegram.png","assets/images/icons/Pinterest.png","assets/images/icons/Reddit.png","assets/images/icons/Tumblr.png","assets/images/icons/Skype.png","assets/images/icons/FBMessenger.png","components/Dialogs/components/Select.js","components/Dialogs/components/Switch.js","utils/withBackButtonSupport.js","config/constants.js","utils/index.js","utils/getTextboxStyles.js","components/Dialogs/TextboxSettingsDialog.js","utils/useSnapshots.js","components/Canvas/Elements/makeElement.js","utils/fitText.js","components/Canvas/Elements/Textbox.js","components/Dialogs/ImageSettingsDialog.js","components/Canvas/Elements/Sticker.js","components/Canvas/Grid.js","components/Dialogs/BorderDialog.js","components/Dialogs/ShareDialog.js","components/Dialogs/UploadTermsDialog.js","utils/cache.js","config/formatAPI.js","config/api.js","utils/uploadImage.js","components/Dialogs/ImageDialog.js","components/Dialogs/GridDialog.js","utils/generateImage.js","components/Canvas/Canvas.js","components/BottomBar/Menu.js","components/Dialogs/ConfirmDialog.js","utils/useAPIData.js","components/Dialogs/components/Templates.js","components/Dialogs/components/Stickers.js","components/Dialogs/TemplatesDialog.js","components/Dialogs/HelpDialog.js","components/Dialogs/AuthDialog.js","components/BottomBar/BottomBar.js","utils/Analytics.js","utils/OfflineUseAlerts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Select","name","label","options","child","className","useFormContext","control","watch","as","props","TextField","select","fullWidth","value","Object","entries","map","MenuItem","key","React","createElement","useStyles","makeStyles","theme","switch","width","register","setValue","classes","FormControlLabel","Switch","inputRef","onChange","event","checked","withBackButtonSupport","childElement","open","onClose","handleClose","values","window","removeEventListener","location","hash","useEffect","addEventListener","ReactGA","modalview","API_BASE_URL","origin","URLSearchParams","search","get","dataURLToFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","importFile","accept","Promise","resolve","input","document","body","appendChild","onchange","e","file","target","files","click","remove","fileToImage","reader","FileReader","onload","result","readAsDataURL","textShadow","stroke","color","shadows","i","j","push","join","getTextboxStyles","border","fontSize","resize","whiteSpace","zIndex","padding","display","flexDirection","outline","capture","isFocused","userSelect","isEditing","cursor","backgroundColor","settings","fontFamily","textTransform","caps","fontWeight","bold","parseInt","textOutlineWidth","textOutlineColor","textAlign","justifyContent","verticalTextAlign","form","spacing","paddingTop","text","minHeight","applyButton","marginTop","useForm","getValues","handleSubmit","reset","Dialog","onSubmit","settingsOptions","colors","style","fontFamilies","Button","useSnapshots","createSnapshot","applySnapshot","onSnapshotsEmpty","context","useContext","AppContext","snapshots","useRef","addSnapshot","newSnapshot","current","shift","handleUndo","snapshot","pop","dispatchEvent","CustomEvent","highlight","borderRadius","shape","handle","height","position","container","top","alignItems","rotationHandle","button","marginLeft","action","transform","resizeHandles","vertical","left","horizontal","diagonal","makeElement","controls","defaultValues","Child","onRemove","grid","canvas","template","id","lastRotation","rotation","childRef","hasCreatedSnapshot","useState","x","y","setPosition","setRotation","TEXTBOX_PADDING","setHeight","setWidth","setCapture","setIsFocused","shouldMove","setShouldMove","dragGrid","useMemo","enabled","fixedSize","clientWidth","columns","clientHeight","rows","getRotationAngle","data","childRect","getBoundingClientRect","childCenter","newRotation","Math","atan2","PI","handleRotationStart","emitResize","onResize","calcNewHeight","angle","dy","deltaX","sin","deltaY","cos","newHeight","aspectRatio","newWidth","calcNewWidth","dx","beforeCapturing","afterCapturing","handleClick","contains","a","requestAnimationFrame","onDrag","onStop","disabled","transformOrigin","ref","data-id","onFocus","toggleMovement","state","dimensions","includes","onStart","IconButton","onClick","onEditClicked","onSettingsClicked","fitText","styles","floor","div","assign","textContent","textfit","multiLine","minFontSize","maxFontSize","innerHeight","span","querySelector","getComputedStyle","getNewFontsize","removeChild","globalDefaultSettings","forwardRef","forwardedRef","defaultSettings","textboxRef","shouldEmitSnapshot","dialogOpen","setDialogOpen","setSettings","setIsEditing","handleEditClicked","handleFocusOut","focus","toLowerCase","toObject","image","toPercentage","useWidth","changedSettings","contentEditable","onMouseDown","onTouchStart","onInput","newValue","imageWrapper","boxSizing","src","alt","keepAspectRatio","flip","imageRef","isDialogOpen","setIsDialogOpen","defineProperty","naturalHeight","naturalWidth","configurable","draggable","line","x1","y1","x2","y2","beginPath","moveTo","lineTo","pointerEvents","touchAction","Grid","renderContext","config","setDimensions","canvasRect","render","cellWidth","cellHeight","renderGrid","getContext","strokeStyle","fixedSpacing","renderWithRelativeSpacing","then","DialogTitle","FormGroup","innerDrawer","title","paddingBottom","iconsContainer","overflowX","icon","ShareDialog","link","onOpen","encodeURIComponent","openLink","href","detail","replace","SwipeableDrawer","disableDiscovery","disableSwipeToOpen","anchor","PaperProps","WhatsAppIcon","FacebookIcon","TwitterIcon","TelegramIcon","SkypeIcon","FBMessengerIcon","PinterestIcon","RedditIcon","TumblrIcon","GmailIcon","innerDialog","palette","primary","secondary","UploadTermsDialog","onAccept","onReject","dialogRef","hasScrolledToBottom","setHasScrolledToBottom","content","handleScroll","scrollTop","scrollHeight","DialogContent","DialogContentText","DialogActions","isCacheSupported","cachedRequest","url","axios","caches","cache","navigator","onLine","cachedData","json","response","put","Response","request","status","headers","getCachedImage","blob","imageURL","URL","createObjectURL","cacheImage","indexOf","fetch","formatTemplate","image_url","meta_data","JSON","parse","formatSticker","sticker","elements","fn","all","element","format","setPasswordHeader","password","defaults","common","path","authorize","post","getTemplates","uploadTemplate","formData","editTemplate","deleteTemplate","registerTemplateUse","getStickers","uploadSticker","deleteSticker","registerStickerUse","uploadFile","FormData","append","host","console","error","uploadImage","margin","imageData","uploadButtonWrapper","buttonLoader","linkWrapper","shareButton","snackbarClose","variant","isRegistered","setLink","isUploading","setIsUploading","isPublishing","setIsPublishing","isShareDialogOpen","setIsShareDialogOpen","isUploadTermsDialogOpen","setIsUploadTermsDialogOpen","isUploadSnackbarOpen","setIsUploadSnackbarOpen","hasCreatedTemplate","setHasCreatedTemplate","isEditingTemplate","currentTemplate","registerUsage","undefined","handleShareClick","handlePublishTemplateClick","metaData","textboxes","getTextboxes","getBorder","stringify","res","finally","handleEditTemplateClick","Paper","Typography","startIcon","reject","catch","CircularProgress","size","download","downloadImageFromSrc","defaultValue","Snackbar","anchorOrigin","autoHideDuration","message","spacingError","setSpacingError","compensateError","clonedDocument","querySelectorAll","forEach","textbox","shiftOffset","min","offsetHeight","fontFeatureSettings","Array","from","parent","parentNode","node","reverse","minWidth","html2canvas","useCORS","onclone","toDataURL","generateImage","getDimensionsWithoutPadding","parseFloat","paddingLeft","paddingRight","waitFrames","amount","defaultBorderValues","bottom","right","defaultGridValues","canvasWrapper","background","default","mixins","toolbar","overflow","Canvas","idCounter","elementRefs","elementKeys","setElementKeys","borderValues","setBorderValues","gridValues","setGridValues","isBorderDialogOpen","setIsBorderDialogOpen","isImageDialogOpen","setIsImageDialogOpen","isGridDialogOpen","setIsGridDialogOpen","generatedImage","setGeneratedImage","handleImageDialogClose","handleRemoveElement","removeKey","newKeys","filter","clearElements","createNewElement","handleAddTextbox","newElementKey","addSticker","handleImportSticker","base64Image","handleImportImage","set","handleGenerateImage","handleSetBorder","handleSetGrid","handleLoadTemplate","formatPercentage","object","selector","test","percentage","newKey","handleLoadSticker","handleGetTextboxes","handleGetBorder","imgWidth","imgHeight","imgRatio","maxWidth","maxHeight","borderSize","Error","Menu","anchorEl","ListItemIcon","ListItemText","ConfirmDialog","disableBackdropClick","disableEscapeKeyDown","dividers","Map","useAPIData","method","useCache","API","bind","isLoading","setIsLoading","setError","useReducer","setData","version","reload","onLoad","spacer","searchWrapper","flex","searchClear","listWrapper","list","tile","tilebar","deleteButton","Templates","isConfirmDialogOpen","setIsConfirmDialogOpen","setSearch","renderTemplates","sort","b","amount_uses","InputBase","placeholder","GridList","GridListTile","tagName","loading","handleImageLoad","GridListTileBar","subtitle","count","handleDeleteClick","shouldDelete","addButton","InnerTile","onDelete","Stickers","active","currentSticker","handleDelete","handleAddSticker","actionContainer","getElementById","cols","ReactDOM","createPortal","Zoom","in","unmountOnExit","Fab","Transition","Slide","direction","currentTab","setCurrentTab","scrollToTop","scrollTo","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Tabs","index","Tab","onChangeIndex","axis","disableLazyLoading","OverlayChild","rect","Tooltip","placement","arrow","ClickAwayListener","onClickAway","isSnackbarOpen","setIsSnackbarOpen","isWrongPassword","setIsWrongPassword","setPassword","helperText","appBar","paper","fabButton","flexGrow","BottomBar","openMenuButton","helpButtonTimer","isMenuOpen","setIsMenuOpen","isTemplatesOpen","setIsTemplatesOpen","isHelpOpen","setIsHelpOpen","isAuthDialogOpen","setIsAuthDialogOpen","handleTemplatesClick","handleTouchStart","setTimeout","handleTouchEnd","clearTimeout","onTouchEnd","onMouseUp","AuthDialog","Analytics","isInitialized","setIsInitialized","initialize","pageview","pathname","generateImageEvent","category","loadTemplateEvent","shareModalModalview","uploadImageEvent","downloadImageEvent","shareEvent","OfflineUseAlerts","snackbarText","setSnackbarText","channel","BroadcastChannel","close","createContext","localStorage","getItem","App","EventTarget","setContext","setter","setItem","handleMessage","ctrlKey","keyCode","Provider","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","postMessage","log","onUpdate","onSuccess","createMuiTheme","main","ThemeProvider","process","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b4a73042.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WhatsApp.0e878a0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Twitter.1f5a8ef5.png\";","module.exports = __webpack_public_path__ + \"static/media/Facebook.9ee5d43c.png\";","module.exports = __webpack_public_path__ + \"static/media/Gmail.598d07e7.png\";","module.exports = __webpack_public_path__ + \"static/media/Telegram.b4b9d64f.png\";","module.exports = __webpack_public_path__ + \"static/media/Pinterest.717253e4.png\";","module.exports = __webpack_public_path__ + \"static/media/Reddit.3826daa7.png\";","module.exports = __webpack_public_path__ + \"static/media/Tumblr.93e9138a.png\";","module.exports = __webpack_public_path__ + \"static/media/Skype.5a725d78.png\";","module.exports = __webpack_public_path__ + \"static/media/FBMessenger.f8b3ffc7.png\";","import React from \"react\"\r\nimport { TextField, MenuItem } from \"@material-ui/core\"\r\nimport { Controller, useFormContext } from \"react-hook-form\"\r\n\r\nfunction Select({ name, label, options, child, className }) {\r\n    const { control, watch } = useFormContext()\r\n\r\n    return (\r\n        <Controller\r\n            as={props => (\r\n                <TextField\r\n                    select\r\n                    label={label}\r\n                    fullWidth\r\n                    className={className}\r\n                    value={watch(name)}\r\n                    {...props}\r\n                >\r\n                    {Object.entries(options).map(([label, value]) => (\r\n                        <MenuItem key={value} value={value}>\r\n                            {React.createElement(child, { label, value })}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )}\r\n            control={control}\r\n            name={name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Select","import React from \"react\"\r\nimport { Switch, FormControlLabel } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useFormContext } from \"react-hook-form\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    switch: {\r\n        width: \"100%\"\r\n    }\r\n}))\r\n\r\nfunction Select({ name, label, className }) {\r\n    const { register, watch, setValue } = useFormContext()\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    name={name}\r\n                    inputRef={register()}\r\n                    onChange={(event, value) => setValue(name, value)}\r\n                    checked={watch(name)}\r\n                />\r\n            }\r\n            label={label}\r\n            className={`${classes.switch} ${className}`}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Select","import React, { useEffect } from \"react\"\r\nimport ReactGA from \"react-ga\"\r\n\r\nfunction withBackButtonSupport(childElement, name) {\r\n    return ({ open, onClose, ...props }) => {\r\n        const handleClose = ({ values }) => {\r\n            window.removeEventListener(\"popstate\", handleClose)\r\n            window.location.hash = \"\"\r\n            onClose(values)\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (open) {\r\n                window.location.hash = \"#\" + name\r\n                window.addEventListener(\"popstate\", handleClose)\r\n                ReactGA.modalview(name)\r\n            }\r\n\r\n            // eslint-disable-next-line\r\n        }, [open])\r\n\r\n        return React.createElement(childElement, {\r\n            ...props,\r\n            open,\r\n            onClose: values => handleClose({ values })\r\n        })\r\n    }\r\n}\r\n\r\nexport default withBackButtonSupport","export const API_BASE_URL = window.location.origin + \"/api\"\r\n\r\nexport const MAX_SNAPSHOTS = 50\r\n\r\nexport const TEXTBOX_PLACEHOLDER = \"Enter Text...\"\r\nexport const TEXTBOX_PADDING = 6\r\n\r\nexport const LONG_PRESS_DURATION = 1000\r\n\r\nexport const IS_DEV = process.env.NODE_ENV === \"development\"\r\nexport const IS_ANDROID_APP = new URLSearchParams(window.location.search).get(\"isAndroidApp\")\r\n\r\nexport const CACHE_NAME = \"v1\"\r\n\r\nexport const GA_TRACKING_ID = \"UA-162994094-2\"","export function dataURLToFile(dataurl, filename) {\r\n    var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\n\r\nexport function downloadImageFromSrc(src) {\r\n    const a = document.createElement(\"a\")\r\n    a.href = src\r\n    a.download = \"download.png\"\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n}\r\n\r\nexport function importFile(accept) {\r\n    return new Promise(resolve => {\r\n        const input = document.createElement(\"input\")\r\n        input.type = \"file\"\r\n        input.accept = accept\r\n        document.body.appendChild(input)\r\n\r\n        input.onchange = e => {\r\n            const file = e.target.files[0]\r\n            resolve(file)\r\n        }\r\n\r\n        input.click()\r\n        input.remove()\r\n    })\r\n}\r\n\r\nexport function fileToImage(file) {\r\n    return new Promise(resolve => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = () => resolve(reader.result)\r\n\r\n        reader.readAsDataURL(file)\r\n    })\r\n}\r\n\r\n// Source: https://stackoverflow.com/questions/2570972/css-font-border\r\n\r\nexport function textShadow(stroke, color) {\r\n    if (stroke === 0) {\r\n        return \"\"\r\n    }\r\n\r\n    const shadows = []\r\n\r\n    for (let i = -stroke; i <= stroke; i++) {\r\n        for (let j = -stroke; j <= stroke; j++) {\r\n            shadows.push(`${i}px ${j}px 0 ${color}`)\r\n        }\r\n    }\r\n\r\n    return shadows.join(\",\")\r\n}","import { TEXTBOX_PADDING } from \"../config/constants.js\"\r\nimport { textShadow } from \"./index.js\"\r\n\r\nfunction getTextboxStyles({ theme, props }) {\r\n    return {\r\n        border: \"none\",\r\n        fontSize: 24,\r\n        resize: \"none\",\r\n        whiteSpace: \"pre-wrap\",\r\n        zIndex: 10,\r\n        padding: TEXTBOX_PADDING,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n\r\n        outline: !props.capture && props.isFocused ? \"1px dashed gray\" : \"none\",\r\n        userSelect: !props.isEditing && \"none\",\r\n        cursor: !props.isEditing && \"move\",\r\n\r\n        backgroundColor: props.settings.backgroundColor,\r\n        color: props.settings.color,\r\n        fontFamily: props.settings.fontFamily,\r\n        textTransform: props.settings.caps && \"uppercase\",\r\n        fontWeight: props.settings.bold && \"bold\",\r\n        textShadow: textShadow(parseInt(props.settings.textOutlineWidth), props.settings.textOutlineColor),\r\n        textAlign: props.settings.textAlign,\r\n        justifyContent: (\r\n            props.settings.verticalTextAlign === \"top\" ? \"flex-start\" :\r\n            props.settings.verticalTextAlign === \"bottom\" ? \"flex-end\" :\r\n            props.settings.verticalTextAlign === \"center\" ? \"center\" :\r\n            null\r\n        )\r\n    }\r\n}\r\n\r\nexport default getTextboxStyles","import React, { useEffect } from \"react\"\r\nimport { Dialog, Button, TextField } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormProvider } from \"react-hook-form\"\r\n\r\nimport Select from \"./components/Select.js\"\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport settingsOptions from \"../../config/settings-options.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\nimport getTextboxStyles from \"../../utils/getTextboxStyles.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    text: props => ({\r\n        ...getTextboxStyles({ theme, props }),\r\n        padding: theme.spacing(2),\r\n        minHeight: 40\r\n    }),\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nfunction TextboxSettingsDialog({ onClose, open, values, text }) {\r\n    const { getValues, handleSubmit, control, watch, reset, register, setValue } = useForm()\r\n    \r\n    const classes = useStyles({ settings: watch() })\r\n    \r\n    const handleClose = () => {\r\n        onClose(getValues())\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <div className={classes.text}>\r\n                {text}\r\n            </div>\r\n            \r\n            <FormProvider {...{ control, watch, register, setValue }}>\r\n                <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                    {/* Color */}\r\n                    <Select\r\n                        name=\"color\"\r\n                        label=\"Color\"\r\n                        options={settingsOptions.colors}\r\n                        className={classes.input}\r\n                        child={({ label, value }) => (\r\n                            <span style={{ color: value }}>{label}</span>\r\n                        )}\r\n                    />\r\n\r\n                    {/* Background Color */}\r\n                    <Select\r\n                        name=\"backgroundColor\"\r\n                        label=\"Background Color\"\r\n                        options={{\r\n                            \"None\": \"transparent\",\r\n                            ...settingsOptions.colors\r\n                        }}\r\n                        className={classes.input}\r\n                        child={({ label, value }) => (\r\n                            <span style={{ color: value !== \"transparent\" && value }}>{label}</span>\r\n                        )}\r\n                    />\r\n\r\n                    {/* Text Outline Width */}\r\n                    <TextField\r\n                        inputRef={register()}\r\n                        name=\"textOutlineWidth\"\r\n                        label=\"Outline Width\"\r\n                        className={classes.input}\r\n                        type=\"number\"\r\n                        fullWidth\r\n                    />\r\n\r\n                    {/* Text Outline Color */}\r\n                    <Select\r\n                        name=\"textOutlineColor\"\r\n                        label=\"Outline Color\"\r\n                        options={settingsOptions.colors}\r\n                        className={classes.input}\r\n                        child={({ label, value }) => (\r\n                            <span style={{ color: value }}>{label}</span>\r\n                        )}\r\n                    />\r\n\r\n                    {/* Text Align */}\r\n                    <Select\r\n                        name=\"textAlign\"\r\n                        label=\"Horizontal Align\"\r\n                        options={settingsOptions.textAlign}\r\n                        className={classes.input}\r\n                        child={({ label }) => label}\r\n                    />\r\n\r\n                    {/* Vertical Text Align */}\r\n                    <Select\r\n                        name=\"verticalTextAlign\"\r\n                        label=\"Vertical Align\"\r\n                        options={settingsOptions.verticalTextAlign}\r\n                        className={classes.input}\r\n                        child={({ label }) => label}\r\n                    />\r\n\r\n                    {/* Font Family */}\r\n                    <Select\r\n                        name=\"fontFamily\"\r\n                        label=\"Font Family\"\r\n                        options={settingsOptions.fontFamilies}\r\n                        className={classes.input}\r\n                        child={({ label, value }) => (\r\n                            <span style={{ fontFamily: value }}>{label}</span>\r\n                        )}\r\n                    />\r\n\r\n                    {/* Bold */}\r\n                    <Switch name=\"bold\" label=\"Bold\" className={classes.input}/>\r\n\r\n                    {/* Caps */}\r\n                    <Switch name=\"caps\" label=\"Caps\" className={classes.input}/>\r\n\r\n                    <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                </form>\r\n            </FormProvider>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(TextboxSettingsDialog, \"settings\")","import { useContext, useEffect, useRef } from \"react\"\r\n\r\nimport { AppContext } from \"../App.js\"\r\nimport { MAX_SNAPSHOTS } from \"../config/constants.js\"\r\n\r\nfunction useSnapshots({ createSnapshot, applySnapshot, onSnapshotsEmpty }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const snapshots = useRef([])\r\n\r\n    const addSnapshot = () => {\r\n        // Create new snapshot\r\n        const newSnapshot = createSnapshot()\r\n        snapshots.current.push(newSnapshot)\r\n\r\n        // Apply size constraint\r\n        if (snapshots.current.length > MAX_SNAPSHOTS) {\r\n            snapshots.current.shift()\r\n        }\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        // No snapshots left\r\n        if (snapshots.current.length === 0) {\r\n            onSnapshotsEmpty()\r\n            return\r\n        }\r\n\r\n        // Apply snapshot\r\n        const snapshot = snapshots.current.pop()\r\n        applySnapshot(snapshot)\r\n    }\r\n\r\n    useEffect(() => {\r\n        context.event.addEventListener(\"undo\", handleUndo)\r\n        context.event.addEventListener(\"addSnapshot\", addSnapshot)\r\n\r\n        return () => {\r\n            context.event.removeEventListener(\"undo\", handleUndo)\r\n            context.event.removeEventListener(\"addSnapshot\", addSnapshot)\r\n        }\r\n    })\r\n\r\n    return () => {\r\n        context.event.dispatchEvent(new CustomEvent(\"addSnapshot\"))\r\n    }\r\n}\r\n\r\nexport default useSnapshots","import React, { useState, useRef, useMemo, useEffect } from \"react\"\r\nimport { DraggableCore } from \"react-draggable\"\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\"\r\nimport SettingsIcon from \"@material-ui/icons/Settings\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport HeightIcon from \"@material-ui/icons/Height\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\n\r\nimport useSnapshots from \"../../../utils/useSnapshots.js\"\r\nimport { TEXTBOX_PADDING } from \"../../../config/constants.js\"\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    const highlight = {\r\n        backgroundColor: \"rgba(255, 255, 255, .5)\",\r\n        border: \"1px solid black\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        display: props => props.capture && \"none\"\r\n    }\r\n\r\n    const handle = {\r\n        ...highlight,\r\n        zIndex: 20,\r\n        height: 24,\r\n        position: \"absolute\",\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n    return {\r\n        container: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            zIndex: 10\r\n        },\r\n\r\n        rotationHandle: {\r\n            ...highlight,\r\n            cursor: \"pointer\"\r\n        },\r\n\r\n        button: {\r\n            ...highlight,\r\n            padding: 0,\r\n            marginLeft: theme.spacing(1),\r\n            color: \"black\"\r\n        },\r\n\r\n        action: {\r\n            position: \"absolute\",\r\n            transform: \"translateY(-100%)\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: 24\r\n        },\r\n\r\n        resizeHandles: {\r\n            position: \"absolute\",\r\n            height: \"100%\",\r\n            width: \"100%\"\r\n        },\r\n\r\n        vertical: {\r\n            ...handle,\r\n            top: \"100%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            cursor: \"ns-resize\"\r\n        },\r\n\r\n        horizontal: {\r\n            ...handle,\r\n            top: \"50%\",\r\n            left: \"100%\",\r\n            transform: \"translate(-50%, -50%) rotate(-90deg)\",\r\n            cursor: \"ew-resize\"\r\n        },\r\n\r\n        diagonal: {\r\n            ...handle,\r\n            top: \"100%\",\r\n            left: \"100%\",\r\n            transform: \"translate(-50%, -50%) rotate(-45deg)\",\r\n            cursor: \"nwse-resize\"\r\n        }\r\n    }\r\n})\r\n\r\nfunction makeElement({\r\n    controls,\r\n    defaultValues,\r\n    Child\r\n}) {\r\n    return function Element({ onRemove, handle, grid, canvas, template, id, ...props }) {\r\n        const lastRotation = useRef(template?.rotation || 0)\r\n        const container = useRef()\r\n        const childRef = useRef()\r\n        const hasCreatedSnapshot = useRef(false)\r\n\r\n        const [position, setPosition] = useState({ x: template?.x || 0, y: template?.y || 0 })\r\n        const [rotation, setRotation] = useState(template?.rotation || 0)\r\n        const [height, setHeight] = useState((template?.height && template.height - TEXTBOX_PADDING * 2) || defaultValues.height)\r\n        const [width, setWidth] = useState((template?.width && template.width - TEXTBOX_PADDING * 2) || defaultValues.width)\r\n        const [capture, setCapture] = useState(false)\r\n        const [isFocused, setIsFocused] = useState(false)\r\n        const [shouldMove, setShouldMove] = useState(true)\r\n\r\n        const classes = useStyles({ capture })\r\n\r\n        // Set grid for movement drag\r\n        const dragGrid = useMemo(() => {\r\n            if (grid.enabled) {\r\n                if (grid.fixedSize) {\r\n                    // Fixed size\r\n                    return [grid.spacing, grid.spacing]\r\n                } else {\r\n                    // Relative size\r\n                    const cellWidth = canvas.clientWidth / grid.columns\r\n                    const cellHeight = canvas.clientHeight / grid.rows\r\n                    return [cellWidth, cellHeight]\r\n                }\r\n            }\r\n        }, [grid, canvas.clientWidth, canvas.clientHeight])\r\n\r\n        const addSnapshot = useSnapshots({\r\n            createSnapshot: () => ({ width, height, position, rotation }),\r\n\r\n            applySnapshot: (snapshot) => {\r\n                setWidth(snapshot.width)\r\n                setHeight(snapshot.height)\r\n                setPosition(snapshot.position)\r\n                setRotation(snapshot.rotation)\r\n            },\r\n\r\n            onSnapshotsEmpty: () => {\r\n                // Remove element if it does not come from template\r\n                if (!template) {\r\n                    onRemove(id)\r\n                }\r\n            }\r\n        })\r\n\r\n        const getRotationAngle = (event, data) => {\r\n            // Get child center position\r\n            const childRect = childRef.current.getBoundingClientRect()\r\n            const childCenter = {\r\n                x: childRect.x + childRect.width / 2,\r\n                y: childRect.y + childRect.height / 2\r\n            }\r\n\r\n            // Calculate new rotation\r\n            const childToMouse = Math.atan2(childCenter.y - data.y, childCenter.x - data.x)\r\n            let newRotation = childToMouse - lastRotation.current\r\n\r\n            // Snap to 45°\r\n            if (grid.enabled) {\r\n                newRotation -= newRotation % (Math.PI / 4)\r\n            }\r\n\r\n            return newRotation\r\n        }\r\n\r\n        const handleRotationStart = (event, data) => {\r\n            lastRotation.current = getRotationAngle(event, data)\r\n        }\r\n\r\n        const handleRotationEnd = (event, data) => {\r\n            lastRotation.current = getRotationAngle(event, data)\r\n        }\r\n\r\n        const handleRotationDrag = (event, data) => {\r\n            setRotation(getRotationAngle(event, data))\r\n        }\r\n            \r\n        const emitResize = () => {\r\n            if(handle.onResize) {\r\n                handle.onResize()\r\n            }\r\n        }\r\n\r\n        const calcNewHeight = (data) => {\r\n            // Calculate new delta-y with the following rotation matrix: https://en.wikipedia.org/wiki/Rotation_matrix\r\n            const angle = -rotation\r\n            const dy = data.deltaX * Math.sin(angle) + data.deltaY * Math.cos(angle)\r\n            const newHeight = height + dy\r\n            setHeight(newHeight)\r\n\r\n            if(handle.aspectRatio) {\r\n                const newWidth = newHeight * (1 / handle.aspectRatio)\r\n                setWidth(newWidth)\r\n            }\r\n        }\r\n\r\n        const calcNewWidth = (data) => {\r\n            // Calculate new delta-x with the following rotation matrix: https://en.wikipedia.org/wiki/Rotation_matrix\r\n            const angle = -rotation\r\n            const dx = data.deltaX * Math.cos(angle) - data.deltaY * Math.sin(angle)\r\n            const newWidth = width + dx\r\n            setWidth(width + dx)\r\n\r\n            if(handle.aspectRatio) {\r\n                const newHeight = newWidth * handle.aspectRatio\r\n                setHeight(newHeight)\r\n            }\r\n        }\r\n\r\n        const handleVerticalDrag = (event, data) => {\r\n            calcNewHeight(data)\r\n            emitResize()\r\n        }\r\n\r\n        const handleHorizontalDrag = (event, data) => {\r\n            calcNewWidth(data)\r\n            emitResize()\r\n        }\r\n\r\n        const handleDiagonalDrag = (event, data) => {\r\n            calcNewWidth(data)\r\n            calcNewHeight(data)\r\n            emitResize()\r\n        }\r\n\r\n        const handleMovementDrag = (event, data) => {\r\n            if(!isFocused) {\r\n                return\r\n            }\r\n\r\n            // Add snapshot when dragging starts\r\n            if(!hasCreatedSnapshot.current) {\r\n                addSnapshot()\r\n                hasCreatedSnapshot.current = true\r\n            }\r\n\r\n            setPosition({\r\n                x: position.x + data.deltaX,\r\n                y: position.y + data.deltaY\r\n            })\r\n        }\r\n\r\n        const handleMovementStop = () => {\r\n            hasCreatedSnapshot.current = false\r\n        }\r\n\r\n        const handleRemoveClicked = () => {\r\n            onRemove(id)\r\n        }\r\n\r\n        const handleFocus = () => {\r\n            setIsFocused(true)\r\n        }\r\n\r\n        const handleBlur = () => {\r\n            setIsFocused(false)\r\n        }\r\n\r\n        const handleToggleMovement = (state = true) => {\r\n            setShouldMove(state)\r\n        }\r\n\r\n        const beforeCapturing = () => {\r\n            setCapture(true)\r\n        }\r\n\r\n        const afterCapturing = () => {\r\n            setCapture(false)\r\n        }\r\n\r\n        // Expose methods to parent\r\n        if (handle) {\r\n            handle.beforeCapturing = beforeCapturing\r\n            handle.afterCapturing = afterCapturing\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (grid.enabled) {\r\n                // Init position in grid\r\n                setPosition({\r\n                    x: position.x - position.x % dragGrid[0],\r\n                    y: position.y - position.y % dragGrid[1]\r\n                })\r\n\r\n                // Init width in grid\r\n                const newWidth = width - (width + TEXTBOX_PADDING * 2) % dragGrid[0]\r\n                setWidth(newWidth)\r\n\r\n                // Init height in grid\r\n                const newHeight = height - (height + TEXTBOX_PADDING * 2) % dragGrid[1]\r\n                setHeight(newHeight)\r\n            }\r\n\r\n            // eslint-disable-next-line\r\n        }, [grid])\r\n\r\n        useEffect(() => {\r\n            // Handle click-away event\r\n            const handleClick = (event) => {\r\n                if (isFocused && !container.current.contains(event.target)) {\r\n                    handleBlur()\r\n                }\r\n            }\r\n\r\n            window.addEventListener(\"click\", handleClick)\r\n            window.addEventListener(\"touchstart\", handleClick)\r\n            \r\n            return () => {\r\n                window.removeEventListener(\"click\", handleClick)\r\n                window.removeEventListener(\"touchstart\", handleClick)\r\n            }\r\n        })\r\n\r\n        useEffect(() => {\r\n            (async () => {\r\n                // Wait until handle received all props\r\n                await new Promise(requestAnimationFrame)\r\n\r\n                // Init dimensions\r\n                if (handle.aspectRatio) {\r\n                    if (width) {\r\n                        setHeight(width * handle.aspectRatio)\r\n                    } else if (height) {\r\n                        setWidth(height * (1 / handle.aspectRatio))\r\n                    }\r\n                }\r\n            })()\r\n\r\n            // eslint-disable-next-line\r\n        }, [])\r\n\r\n        return (\r\n            <DraggableCore onDrag={handleMovementDrag} onStop={handleMovementStop} grid={dragGrid} handle={`#element-${id}`} disabled={!shouldMove}>\r\n                <div\r\n                    className={`${classes.container} element`}\r\n                    style={{\r\n                        transform: `translate(${position.x}px, ${position.y}px) rotate(${rotation}rad)`,\r\n                        transformOrigin: `center center`,\r\n                        zIndex: defaultValues.zIndex || 0\r\n                    }}\r\n                    ref={container}\r\n                    data-id={id}\r\n                >\r\n                    <Child\r\n                        id={id}\r\n                        handle={handle}\r\n                        template={template}\r\n                        onFocus={handleFocus}\r\n                        isFocused={isFocused}\r\n                        toggleMovement={handleToggleMovement}\r\n                        dimensions={{ width, height, ...position, rotation }}\r\n                        ref={childRef}\r\n                        capture={capture}\r\n                        {...props}\r\n                    />\r\n\r\n                    {isFocused && (\r\n                        // Render controls if the element is focused\r\n                        <>\r\n                            {controls.includes(\"resize\") && (\r\n                                <div className={classes.resizeHandles}>\r\n                                    <DraggableCore onDrag={handleVerticalDrag} onStart={addSnapshot} grid={dragGrid}>\r\n                                        <div className={classes.vertical}>\r\n                                            <HeightIcon />\r\n                                        </div>\r\n                                    </DraggableCore>\r\n\r\n                                    <DraggableCore onDrag={handleHorizontalDrag} onStart={addSnapshot} grid={dragGrid}>\r\n                                        <div className={classes.horizontal}>\r\n                                            <HeightIcon />\r\n                                        </div>\r\n                                    </DraggableCore>\r\n\r\n                                    <DraggableCore onDrag={handleDiagonalDrag} onStart={addSnapshot} grid={dragGrid}>\r\n                                        <div className={classes.diagonal}>\r\n                                            <HeightIcon />\r\n                                        </div>\r\n                                    </DraggableCore>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className={classes.action}>\r\n                                {controls.includes(\"rotate\") && (\r\n                                    <DraggableCore onStart={(...args) => {\r\n                                        handleRotationStart(...args)\r\n                                        addSnapshot()\r\n                                    }} onStop={handleRotationEnd} onDrag={handleRotationDrag}>\r\n                                        <RotateLeftIcon className={classes.rotationHandle} />\r\n                                    </DraggableCore>\r\n                                )}\r\n\r\n                                {controls.includes(\"edit\") && (\r\n                                    <IconButton className={classes.button} onClick={handle.onEditClicked}>\r\n                                        <EditIcon />\r\n                                    </IconButton>\r\n                                )}\r\n\r\n                                {controls.includes(\"settings\") && (\r\n                                    <IconButton className={classes.button} onClick={handle.onSettingsClicked}>\r\n                                        <SettingsIcon />\r\n                                    </IconButton>\r\n                                )}\r\n\r\n                                {controls.includes(\"remove\") && (\r\n                                    <IconButton className={classes.button} onClick={handleRemoveClicked}>\r\n                                        <CloseIcon />\r\n                                    </IconButton>\r\n                                )}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </DraggableCore>\r\n        )\r\n    }\r\n}\r\n\r\nexport default makeElement","import textfit from \"textfit\"\r\n\r\nfunction getNewFontsize(div) {\r\n    textfit(div, {\r\n        multiLine: true,\r\n        minFontSize: 1,\r\n        maxFontSize: window.innerHeight\r\n    })\r\n    const span = div.querySelector(\"span\")\r\n    const fontSize = getComputedStyle(span).fontSize\r\n    return parseInt(fontSize)\r\n}\r\n\r\nfunction fitText({ width, height, text, styles }) {\r\n    width = Math.floor(width)\r\n    height = Math.floor(height)\r\n\r\n    if (width <= 0 || height <= 0) {\r\n        return 0\r\n    }\r\n\r\n    const div = document.createElement(\"div\")\r\n\r\n    // div.style.visibility = \"hidden\"\r\n    div.style.position = \"absolute\"\r\n    div.style.width = width + \"px\"\r\n    div.style.height = height + \"px\"\r\n    div.style.whiteSpace = \"pre-wrap\"\r\n    div.style.fontWeight = styles.bold ? \"bold\" : null\r\n    div.style.textTransform = styles.caps ? \"uppercase\" : null\r\n\r\n    Object.assign(div.style, styles)\r\n\r\n    div.textContent = text\r\n\r\n    document.body.appendChild(div)\r\n\r\n    const fontSize = getNewFontsize(div)\r\n\r\n    document.body.removeChild(div)\r\n\r\n    return fontSize\r\n}\r\n\r\nexport default fitText","import React, { useState, useRef, useMemo, useEffect } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport TextboxSettingsDialog from \"../../Dialogs/TextboxSettingsDialog.js\"\r\n\r\nimport useSnapshots from \"../../../utils/useSnapshots.js\"\r\nimport makeElement from \"./makeElement.js\"\r\nimport fitText from \"../../../utils/fitText.js\"\r\nimport getTextboxStyles from \"../../../utils/getTextboxStyles.js\"\r\nimport { TEXTBOX_PLACEHOLDER, TEXTBOX_PADDING } from \"../../../config/constants.js\"\r\n\r\nconst globalDefaultSettings = {\r\n    color: \"white\",\r\n    textOutlineWidth: 2,\r\n    textOutlineColor: \"black\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"'Impact', fantasy\",\r\n    backgroundColor: \"transparent\",\r\n    verticalTextAlign: \"center\",\r\n    bold: false,\r\n    caps: true\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    input: props => getTextboxStyles({ theme, props })\r\n}))\r\n\r\nfunction Textbox({ id, handle, template, onFocus, isFocused, toggleMovement, dimensions }, forwardedRef) {\r\n    const defaultSettings = {...globalDefaultSettings}\r\n\r\n    // Apply template settings\r\n    if(template?.settings) {\r\n        for(let key in defaultSettings) {\r\n            if(template.settings[key]) {\r\n                defaultSettings[key] = template.settings[key]\r\n            }\r\n        }\r\n    }\r\n\r\n    const textboxRef = useRef()\r\n    const shouldEmitSnapshot = useRef(false)\r\n\r\n    const [value, setValue] = useState(TEXTBOX_PLACEHOLDER)\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [settings, setSettings] = useState(defaultSettings)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    const classes = useStyles({ settings, isFocused, isEditing }) \r\n\r\n    const addSnapshot = useSnapshots({\r\n        createSnapshot: () => ({ value, settings }),\r\n\r\n        applySnapshot: (snapshot) => {\r\n            setValue(snapshot.value)\r\n            textboxRef.current.textContent = snapshot.value\r\n            setSettings(snapshot.settings)\r\n        },\r\n\r\n        onSnapshotsEmpty: () => {\r\n            // Set initial values\r\n            setValue(TEXTBOX_PLACEHOLDER)\r\n            setSettings(defaultSettings)\r\n        }\r\n    })\r\n\r\n    const handleSettingsClicked = () => {\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    const handleSettingsApply = values => {\r\n        if(values) {\r\n            addSnapshot()\r\n            setSettings(values)\r\n        }\r\n        setDialogOpen(false)\r\n    }\r\n    \r\n    const handleEditClicked = async () => {\r\n        const handleFocusOut = () => {\r\n            toggleMovement(true)\r\n            setIsEditing(false)\r\n            textboxRef.current.removeEventListener(\"focusout\", handleFocusOut)\r\n        }\r\n        \r\n        shouldEmitSnapshot.current = true\r\n        toggleMovement(false)\r\n        setIsEditing(true)\r\n        textboxRef.current.addEventListener(\"focusout\", handleFocusOut)\r\n\r\n        // Wait until contenteditable is set\r\n        await new Promise(requestAnimationFrame)\r\n\r\n        textboxRef.current.focus()\r\n\r\n        // Clear the placeholder\r\n        if(value.toLowerCase() === TEXTBOX_PLACEHOLDER.toLowerCase()) {\r\n            textboxRef.current.textContent = \"\"\r\n        }\r\n    }\r\n\r\n    const handleValueChange = (event) => {\r\n        if(shouldEmitSnapshot.current) {\r\n            shouldEmitSnapshot.current = false\r\n            addSnapshot()\r\n        }\r\n\r\n        const newValue = event.target.textContent\r\n        setValue(newValue)\r\n    }\r\n\r\n    const toObject = ({ image }) => {\r\n        const toPercentage = (value, useWidth = false) => value / (useWidth ? image.clientWidth : image.clientHeight) * 100 + \"%\"\r\n\r\n        const changedSettings = template?.settings || {}\r\n        for(let key in settings) {\r\n            if(settings[key] !== defaultSettings[key]) {\r\n                changedSettings[key] = settings[key]\r\n            }\r\n        }\r\n\r\n        return {\r\n            value,\r\n            width: toPercentage(dimensions.width + TEXTBOX_PADDING * 2, true),\r\n            height: toPercentage(dimensions.height + TEXTBOX_PADDING * 2),\r\n            x: toPercentage(dimensions.x, true),\r\n            y: toPercentage(dimensions.y),\r\n            rotation: dimensions.rotation,\r\n            settings: changedSettings\r\n        }\r\n    }\r\n\r\n    // Expose methods for parent\r\n    if(handle) {\r\n        handle.toObject = toObject\r\n        handle.onEditClicked = handleEditClicked\r\n        handle.onSettingsClicked = handleSettingsClicked\r\n    }\r\n\r\n    // Generate stylings for textbox\r\n    const styles = useMemo(() => ({\r\n        width: dimensions.width + \"px\",\r\n        height: dimensions.height + \"px\",\r\n        fontSize: fitText({ styles: settings, text: value, ...dimensions })\r\n    }), [value, settings, dimensions])\r\n\r\n    useEffect(() => {\r\n        // Set initial value\r\n        textboxRef.current.textContent = value\r\n\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!isEditing && !value) {\r\n            // Insert placeholder if textbox is empty\r\n            setValue(TEXTBOX_PLACEHOLDER)\r\n            textboxRef.current.textContent = TEXTBOX_PLACEHOLDER\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [isEditing])\r\n    \r\n    return (\r\n        <>\r\n            <div\r\n                contentEditable={isEditing}\r\n                id={`element-${id}`}\r\n                className={`textbox ${classes.input}`}\r\n                style={styles}\r\n                ref={ref => {\r\n                    textboxRef.current = ref\r\n                    forwardedRef.current = ref\r\n                }}\r\n                onMouseDown={onFocus}\r\n                onTouchStart={onFocus}\r\n                onInput={handleValueChange}\r\n            />\r\n\r\n            <TextboxSettingsDialog open={dialogOpen} onClose={handleSettingsApply} values={settings} text={value}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default makeElement({\r\n    controls: [\"resize\", \"rotate\", \"edit\", \"settings\", \"remove\"],\r\n    defaultValues: {\r\n        width: 160,\r\n        height: 24,\r\n        zIndex: 2\r\n    },\r\n    Child: React.forwardRef(Textbox)\r\n})","import React, { useEffect } from \"react\"\r\nimport { useForm, FormProvider } from \"react-hook-form\"\r\nimport { Dialog, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n\r\n    image: {\r\n        width: 100\r\n    },\r\n\r\n    imageWrapper: {\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        padding: theme.spacing(1),\r\n        boxSizing: \"border-box\"\r\n    }\r\n}))\r\n\r\nfunction ImageSettingsDialog({ onClose, open, values, src }) {\r\n    const { getValues, handleSubmit, control, watch, reset, register, setValue } = useForm()\r\n\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        onClose(getValues())\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <div className={classes.imageWrapper}>\r\n                <img src={src} alt=\"\" className={classes.image} style={{\r\n                    transform: `scaleX(${watch(\"flip\") ? \"-1\" : \"1\"})`\r\n                }}/>\r\n            </div>\r\n\r\n            <FormProvider {...{ control, watch, register, setValue }}>\r\n                <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                    {/* Keep Aspect Ratio */}\r\n                    <Switch name=\"keepAspectRatio\" label=\"Keep Aspect Ratio\" className={classes.input} />\r\n\r\n                    {/* Flip */}\r\n                    <Switch name=\"flip\" label=\"Flip\" className={classes.input} />\r\n\r\n                    <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                </form>\r\n            </FormProvider>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(ImageSettingsDialog, \"settings\")","import React, { useState, useRef } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport ImageSettingsDialog from \"../../Dialogs/ImageSettingsDialog.js\"\r\n\r\nimport makeElement from \"./makeElement.js\"\r\n\r\nconst defaultSettings = {\r\n    keepAspectRatio: true,\r\n    flip: false\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    image: {\r\n        zIndex: 1,\r\n        cursor: \"move\"\r\n    }\r\n}))\r\n\r\nfunction Sticker({ src, id, onFocus, dimensions, handle }, forwardedRef) {\r\n    const classes = useStyles()\r\n\r\n    const imageRef = useRef()\r\n\r\n    const [settings, setSettings] = useState(defaultSettings)\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n\r\n    const handleSettingsApply = (values) => {\r\n        if(values) {\r\n            setSettings(values)\r\n        }\r\n        setIsDialogOpen(false)\r\n    }\r\n\r\n    const styles = {\r\n        width: dimensions.width + \"px\",\r\n        height: dimensions.height + \"px\",\r\n        transform: `scaleX(${settings.flip ? \"-1\" : \"1\"})`\r\n    }\r\n\r\n    if(handle) {\r\n        handle.onSettingsClicked = () => setIsDialogOpen(true)\r\n\r\n        if(settings.keepAspectRatio) {\r\n            Object.defineProperty(handle, \"aspectRatio\", { \r\n                get: function() {\r\n                    return imageRef.current?.naturalHeight / imageRef.current?.naturalWidth\r\n                },\r\n                configurable: true\r\n            })\r\n        } else {\r\n            delete handle.aspectRatio\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img\r\n                src={src}\r\n                alt=\"\"\r\n                id={`element-${id}`}\r\n                ref={ref => {\r\n                    forwardedRef.current = ref\r\n                    imageRef.current = ref\r\n                }}\r\n                onMouseDown={onFocus}\r\n                onTouchStart={onFocus}\r\n                style={styles}\r\n                className={classes.image}\r\n                draggable=\"false\"\r\n            />\r\n\r\n            <ImageSettingsDialog open={isDialogOpen} onClose={handleSettingsApply} values={settings} src={src}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default makeElement({\r\n    controls: [\"resize\", \"rotate\", \"remove\", \"settings\"],\r\n    defaultValues: {\r\n        width: 100,\r\n        zIndex: 1\r\n    },\r\n    Child: React.forwardRef(Sticker)\r\n})","import React, { useEffect, useRef, useContext } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nfunction line(context, x1, y1, x2, y2) {\r\n    context.beginPath()\r\n    context.moveTo(x1, y1)\r\n    context.lineTo(x2, y2)\r\n    context.stroke()\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    canvas: {\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        touchAction: \"none\"\r\n    }\r\n}))\r\n\r\nfunction Grid({ config, canvas, border }) {\r\n    const classes = useStyles()\r\n\r\n    const context = useContext(AppContext)\r\n\r\n    const grid = useRef()\r\n\r\n    let renderContext;\r\n\r\n    const setDimensions = async () => {\r\n        // Wait until canvas has resized proberly\r\n        await new Promise(requestAnimationFrame)\r\n\r\n        const canvasRect = canvas.getBoundingClientRect()\r\n\r\n        grid.current.width = canvasRect.width\r\n        grid.current.height = canvasRect.height\r\n    }\r\n\r\n    const render = (cellWidth, cellHeight) => {\r\n        for (let x = 0; x < grid.current.width; x += cellWidth) {\r\n            line(renderContext, x, 0, x, grid.current.height)\r\n        }\r\n\r\n        for (let y = 0; y < grid.current.height; y += cellHeight) {\r\n            line(renderContext, 0, y, grid.current.width, y)\r\n        }\r\n    }\r\n\r\n    // Render a dynamic amount of columns / rows with a fixed size\r\n    const renderWithFixedSpacing = () => {\r\n        if(!config.spacing) {\r\n            return\r\n        }\r\n\r\n        render(config.spacing, config.spacing)\r\n    }\r\n\r\n    // Render a fixed amount of columns / rows with a dynamic size\r\n    const renderWithRelativeSpacing = () => {\r\n        if(!config.columns || !config.rows || !canvas) {\r\n            return\r\n        }\r\n\r\n        const cellWidth = canvas.clientWidth / config.columns\r\n        const cellHeight = canvas.clientHeight / config.rows\r\n\r\n        render(cellWidth, cellHeight)\r\n    }\r\n\r\n    const renderGrid = () => {\r\n        renderContext = grid.current.getContext(\"2d\")\r\n\r\n        renderContext.strokeStyle = config.color\r\n\r\n        if(config.fixedSpacing) {\r\n            renderWithFixedSpacing()\r\n        } else {\r\n            renderWithRelativeSpacing()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!canvas) {\r\n            return\r\n        }\r\n\r\n        setDimensions().then(renderGrid)\r\n\r\n        // eslint-disable-next-line\r\n    }, [canvas, config, context.image, border])\r\n\r\n    return (\r\n        <canvas\r\n            ref={grid}\r\n            style={{ display: !config.enabled && \"none\" }}\r\n            className={classes.canvas}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Grid","import React, { useEffect } from \"react\"\r\nimport { Dialog, DialogTitle, Button, TextField, FormGroup } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormProvider } from \"react-hook-form\"\r\n\r\nimport Select from \"./components/Select.js\"\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport settingsOptions from \"../../config/settings-options.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nfunction BorderDialog({ onClose, open, values }) {\r\n    const { register, getValues, handleSubmit, control, watch, reset, setValue } = useForm()\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = () => {\r\n        const values = getValues()\r\n\r\n        onClose(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n                <DialogTitle>Set Border</DialogTitle>\r\n\r\n                <FormProvider {...{ control, watch, register, setValue }}>\r\n                    <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                        <FormGroup>\r\n                            {/* Size */}\r\n                            <TextField\r\n                                inputRef={register()}\r\n                                className={classes.input}\r\n                                fullWidth\r\n                                type=\"number\"\r\n                                name=\"size\"\r\n                                label=\"Size (px)\"\r\n                            />\r\n\r\n                            {/* Color */}\r\n                            <Select\r\n                                name=\"color\"\r\n                                label=\"Color\"\r\n                                options={settingsOptions.colors}\r\n                                className={classes.input}\r\n                                child={({ label, value }) => (\r\n                                    <span style={{ color: value }}>{label}</span>\r\n                                )}\r\n                            />\r\n\r\n                            {/* Top */}\r\n                            <Switch name=\"top\" label=\"Top\" className={classes.input}/>\r\n\r\n                            {/* Bottom */}\r\n                            <Switch name=\"bottom\" label=\"Bottom\" className={classes.input}/>\r\n\r\n                            {/* Left */}\r\n                            <Switch name=\"left\" label=\"Left\" className={classes.input}/>\r\n\r\n                            {/* Right */}\r\n                            <Switch name=\"right\" label=\"Right\" className={classes.input}/>\r\n\r\n                            <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n            </FormProvider>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(BorderDialog, \"border\")","import React, { useContext } from \"react\"\r\nimport { SwipeableDrawer, IconButton, DialogTitle } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nimport WhatsAppIcon from \"../../assets/images/icons/WhatsApp.svg\"\r\nimport TwitterIcon from \"../../assets/images/icons/Twitter.png\"\r\nimport FacebookIcon from \"../../assets/images/icons/Facebook.png\"\r\nimport GmailIcon from \"../../assets/images/icons/Gmail.png\"\r\nimport TelegramIcon from \"../../assets/images/icons/Telegram.png\"\r\nimport PinterestIcon from \"../../assets/images/icons/Pinterest.png\"\r\nimport RedditIcon from \"../../assets/images/icons/Reddit.png\"\r\nimport TumblrIcon from \"../../assets/images/icons/Tumblr.png\"\r\nimport SkypeIcon from \"../../assets/images/icons/Skype.png\"\r\nimport FBMessengerIcon from \"../../assets/images/icons/FBMessenger.png\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    innerDrawer: {\r\n        borderRadius: \"16px 16px 0 0\"\r\n    },\r\n\r\n    title: {\r\n        paddingBottom: theme.spacing(1)\r\n    },\r\n\r\n    iconsContainer: {\r\n        display: \"flex\",\r\n        padding: `0 ${theme.spacing(1)}px ${theme.spacing(2)}px ${theme.spacing(1)}px`,\r\n        overflowX: \"scroll\"\r\n    },\r\n\r\n    icon: {\r\n        width: 40\r\n    }\r\n}))\r\n\r\nfunction ShareDialog({ open, link, onClose, onOpen }) {\r\n    link = encodeURIComponent(link)\r\n\r\n    const context = useContext(AppContext)\r\n    \r\n    const classes = useStyles()\r\n\r\n    const openLink = (href, label) => () => {\r\n        context.event.dispatchEvent(new CustomEvent(\"share\", { detail: { label } }))\r\n        window.open(href.replace(/{}/g, link))\r\n    }\r\n\r\n    return (\r\n        <SwipeableDrawer\r\n            disableDiscovery\r\n            disableSwipeToOpen\r\n            open={open}\r\n            onClose={onClose}\r\n            onOpen={onOpen}\r\n            anchor=\"bottom\"\r\n            PaperProps={{ className: classes.innerDrawer }}\r\n        >\r\n            <DialogTitle className={classes.title}>Share Link</DialogTitle>\r\n\r\n            <div className={classes.iconsContainer}>\r\n                <IconButton onClick={openLink(\"whatsapp://send?text={}\", \"WhatsApp\")}>\r\n                    <img src={WhatsAppIcon} alt=\"WhatsApp\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.facebook.com/sharer/sharer.php?u={}\", \"Facebook\")}>\r\n                    <img src={FacebookIcon} alt=\"Facebook\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"http://twitter.com/intent/tweet?text={}\", \"Twitter\")}>\r\n                    <img src={TwitterIcon} alt=\"Twitter\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://telegram.me/share?url={}\", \"Telegram\")}>\r\n                    <img src={TelegramIcon} alt=\"Telegram\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://web.skype.com/share?url={}\", \"Skype\")}>\r\n                    <img src={SkypeIcon} alt=\"Skype\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"fb-messenger://share?link={}\", \"FB-Messenger\")}>\r\n                    <img src={FBMessengerIcon} alt=\"Messenger\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.pinterest.com/pin/create/button?url={}\", \"Pinterest\")}>\r\n                    <img src={PinterestIcon} alt=\"Pinterest\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.reddit.com/submit?url={}\", \"Reddit\")}>\r\n                    <img src={RedditIcon} alt=\"Reddit\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"https://www.tumblr.com/widgets/share/tool?posttype=link&canonicalUrl={}\", \"Tumblr\")}>\r\n                    <img src={TumblrIcon} alt=\"Tumblr\" className={classes.icon}/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={openLink(\"mailto:?body={}\", \"Mail\")}>\r\n                    <img src={GmailIcon} alt=\"Email\" className={classes.icon}/>\r\n                </IconButton>\r\n            </div>\r\n        </SwipeableDrawer>\r\n    )\r\n}\r\n\r\nexport default ShareDialog","import React, { useState, useRef, useEffect } from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    innerDialog: {\r\n        \"& p\": {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n\r\n    link: {\r\n        color: theme.palette.text.secondary\r\n    }\r\n}))\r\n\r\nfunction UploadTermsDialog({ open, onAccept, onReject }) {\r\n    const dialogRef = useRef()\r\n    \r\n    const classes = useStyles()\r\n\r\n    const [hasScrolledToBottom, setHasScrolledToBottom] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            return\r\n        }\r\n\r\n        (async () => {\r\n            await new Promise(requestAnimationFrame)\r\n\r\n            if (!dialogRef.current) {\r\n                return\r\n            }\r\n\r\n            const content = dialogRef.current.querySelector(\".\" + classes.innerDialog)\r\n\r\n            const handleScroll = () => {\r\n                if (content.getBoundingClientRect().height + content.scrollTop >= content.scrollHeight) {\r\n                    setHasScrolledToBottom(true)\r\n                    content.removeEventListener(\"scroll\", handleScroll)\r\n                }\r\n            }\r\n\r\n            content.addEventListener(\"scroll\", handleScroll)\r\n\r\n            handleScroll()\r\n        })()\r\n\r\n        // eslint-disable-next-line\r\n    }, [open])\r\n\r\n    const handleClose = () => {\r\n        setHasScrolledToBottom(false)\r\n        onReject()\r\n    }\r\n    \r\n    return (\r\n        <Dialog open={open} onClose={handleClose} ref={ref => dialogRef.current = ref}>\r\n            <DialogTitle>Terms and conditions</DialogTitle>\r\n\r\n            <DialogContent className={classes.innerDialog}>\r\n                <DialogContentText>\r\n                    By creating a link for your image, it will be uploaded to our servers and \r\n                    therefor be listed in our <a href=\"/archive\" target=\"_blank\" className={classes.link}>archive</a>.\r\n                    We will store your IP address and are allowed to hand it to third-parties if you violate against these terms and conditions.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    Your image must meet the following terms and conditions:\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    Only upload images that are relevant and appropriate to the product and that meet intellectual property, privacy, and other applicable laws.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    You must hold the copyright of the images that you are uploading.\r\n                    Images that are considered to infringe the copyright or trademarks of other individuals, organizations or companies will not be permitted and will be removed.\r\n                    You must acknowledge that you have sufficient written permission (if necessary) of any recognizable locations or people appearing in the image to be able \r\n                    to grant us permission to use it on our website. If you think that your copyright to an image on our website has been infringed, please contact us.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    You must not upload photographs that contain objectionable content, including but not limited to nudity, violence, and other offensive, illegal or\r\n                    inappropriate images. Also, images cannot contain advertisement or links.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    By uploading an image to easymeme69.com, you permit us, the unrestricted, perpetual, worldwide,\r\n                    non-transferable, royalty-free right and license to display, exhibit, transmit, reproduce, record, digitize, modify, alter, adapt,\r\n                    create derivative works, exploit and otherwise use and permit others to use in connection with the image uploaded, in all languages and all media,\r\n                    whether now known or hereinafter devised, including without limitation on the Internet, \r\n                    on mobile platforms and/or devices, in printed materials, and in the advertising, publicity and promotion thereof.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    You should bear in mind that by uploading an image to our website, you agree to indemnify us from any liability resulting from breaches\r\n                    of copyright of the image existing online on our website in digital form.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    You also understand and agree that nothing in this agreement obligates easymeme69.com to display your images.\r\n                    Images must be relevant and appropriate.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    easymeme69.com reserves the right in its sole and absolute discretion to alter these terms at any time for any reason without prior notice,\r\n                    or to terminate the image upload service for any reason at any time without prior notice.\r\n                </DialogContentText>\r\n\r\n                <DialogContentText>\r\n                    easymeme69.com also reserves the right to reject and remove any uploaded images from its servers, for any reason, at any time, without prior notice.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose} disabled={!hasScrolledToBottom}>\r\n                    decline\r\n                </Button>\r\n\r\n                <Button color=\"primary\" onClick={onAccept} disabled={!hasScrolledToBottom}>\r\n                    agree\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UploadTermsDialog","import axios from \"axios\"\r\n\r\nimport { IS_DEV, CACHE_NAME } from \"../config/constants.js\"\r\n\r\nconst isCacheSupported = \"caches\" in window\r\n\r\nexport async function cachedRequest(url) {\r\n    // Do not cache in development mode\r\n    if (IS_DEV || !isCacheSupported) {\r\n        return await axios.get(url)\r\n    }\r\n\r\n    const cache = await caches.open(CACHE_NAME)\r\n    \r\n    // Return cached data if neccessary\r\n    if (!navigator.onLine) {\r\n        const cachedData = await cache.match(url)\r\n\r\n        return {\r\n            data: await cachedData.json()\r\n        }\r\n    }\r\n\r\n    // Write data to cache\r\n    const response = await axios.get(url)\r\n\r\n    cache.put(url, new Response(response.request.response, {\r\n        status: response.status,\r\n        headers: response.headers\r\n    }))\r\n\r\n    return response\r\n}\r\n\r\nexport async function getCachedImage(url) {\r\n    if (!isCacheSupported) {\r\n        return url\r\n    }\r\n\r\n    const cache = await caches.open(CACHE_NAME)\r\n\r\n    const response = await cache.match(url)\r\n\r\n    if (!response) {\r\n        return url\r\n    }\r\n\r\n    // Create local image url from response\r\n    const blob = await response.blob()\r\n    const imageURL = URL.createObjectURL(blob)\r\n\r\n    return imageURL\r\n}\r\n\r\nexport async function cacheImage(url) {\r\n    if (!isCacheSupported) {\r\n        return\r\n    }\r\n\r\n    // Do not cache blob / in development mode\r\n    if (url.indexOf(\"blob\") === 0 || IS_DEV) {\r\n        return\r\n    }\r\n\r\n    const cache = await caches.open(CACHE_NAME)\r\n\r\n    const cachedData = await cache.match(url)\r\n\r\n    if (!cachedData) {\r\n        // Store image in cache\r\n        const response = await fetch(url)\r\n        cache.put(url, response)\r\n    }\r\n}","import { getCachedImage } from \"../utils/cache.js\"\r\n\r\nexport const TEMPLATES = \"TEMPLATES\"\r\nexport const STICKERS = \"STICKERS\"\r\n\r\nasync function formatTemplate(template) {\r\n    template.image_url = await getCachedImage(template.image_url)\r\n\r\n    if (template.meta_data) {\r\n        template.meta_data = JSON.parse(template.meta_data)\r\n    }\r\n}\r\n\r\nasync function formatSticker(sticker) {\r\n    sticker.image_url = await getCachedImage(sticker.image_url)\r\n}\r\n\r\nfunction map(elements, fn) {\r\n    return Promise.all(elements.map(async (element) => fn(element)))\r\n}\r\n\r\nexport default function format(type) {\r\n    let fn\r\n\r\n    if (type === TEMPLATES) {\r\n        fn = (data) => map(data.data, formatTemplate)\r\n    } else if (type === STICKERS) {\r\n        fn = (data) => map(data.data, formatSticker)\r\n    }\r\n\r\n    return (data) => {\r\n        return new Promise(async resolve => {\r\n            await fn(data)\r\n            resolve(data)\r\n        })\r\n    }\r\n}","import axios from \"axios\"\r\n\r\nimport format, {\r\n    TEMPLATES,\r\n    STICKERS\r\n} from \"./formatAPI.js\"\r\nimport { API_BASE_URL } from \"./constants.js\"\r\nimport { cachedRequest } from \"../utils/cache.js\"\r\n\r\nexport function setPasswordHeader(password) {\r\n    axios.defaults.headers.common = {\r\n        \"Authorization\": password\r\n    }\r\n}\r\n\r\nfunction url(path) {\r\n    return API_BASE_URL + path\r\n}\r\n\r\nexport const authorize = (password) => axios.post(url(\"/auth/authorize\"), { password })\r\n\r\nexport const getTemplates = () => cachedRequest(url(\"/templates\")).then(format(TEMPLATES))\r\nexport const uploadTemplate = (formData) => axios.post(url(\"/templates\"), formData)\r\nexport const editTemplate = (body) => axios.put(url(\"/templates\"), body)\r\nexport const deleteTemplate = (id) => axios.post(url(\"/templates/delete/\" + id))\r\nexport const registerTemplateUse = (id) => axios.post(url(\"/templates/register-use\"), { id })\r\n\r\nexport const getStickers = () => cachedRequest(url(\"/stickers\")).then(format(STICKERS))\r\nexport const uploadSticker = (formData) => axios.post(url(\"/stickers\"), formData)\r\nexport const deleteSticker = (id) => axios.post(url(\"/stickers/delete/\" + id))\r\nexport const registerStickerUse = (id) => axios.post(url(\"/stickers/register-use\"), { id })\r\n\r\nexport const uploadFile = (formData) => axios.post(\"/upload\", formData)","import { uploadFile } from \"../config/api.js\"\r\n\r\nasync function uploadImage(image) {\r\n    // Create formData object\r\n    const formData = new FormData()\r\n    formData.append(\"file\", image)\r\n\r\n    // Upload image to server\r\n    try {\r\n        const response = await uploadFile(formData)\r\n\r\n        return \"https://\" + window.location.host + response.data.path\r\n    } catch (error) {\r\n        console.error(error)\r\n        return\r\n    }\r\n}\r\n\r\nexport default uploadImage","import React, { useState, useEffect, useContext, useRef } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Dialog, Button, CircularProgress, Paper, Typography, IconButton, TextField, Snackbar } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\r\nimport LinkIcon from \"@material-ui/icons/Link\"\r\nimport ShareIcon from \"@material-ui/icons/Share\"\r\nimport PublishIcon from \"@material-ui/icons/Publish\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport ShareDialog from \"./ShareDialog.js\"\r\nimport UploadTermsDialog from \"./UploadTermsDialog.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport { downloadImageFromSrc, dataURLToFile } from \"../../utils\"\r\nimport uploadImage from \"../../utils/uploadImage.js\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\nimport { uploadTemplate, editTemplate, registerTemplateUse, registerStickerUse } from \"../../config/api.js\"\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    const spacing = {\r\n        margin: theme.spacing(2),\r\n        marginTop: 0\r\n    }\r\n\r\n    return {\r\n        spacing,\r\n\r\n        title: {\r\n            textAlign: \"center\"\r\n        },\r\n\r\n        innerDialog: {\r\n            margin: theme.spacing(1),\r\n            width: props => !props.imageData && \"100%\",\r\n            height: props => !props.imageData && \"50%\",\r\n            display: props => !props.imageData && \"flex\",\r\n            justifyContent: props => !props.imageData && \"center\",\r\n            alignItems: props => !props.imageData && \"center\"\r\n        },\r\n\r\n        image: {\r\n            width: \"90%\",\r\n            margin: `${theme.spacing(2)}px auto`\r\n        },\r\n\r\n        uploadButtonWrapper: {\r\n            ...spacing,\r\n            position: \"relative\"\r\n        },\r\n        \r\n        buttonLoader: {\r\n            position: \"absolute\",\r\n            top: \"50%\", left: \"50%\",\r\n            margin: \"-12px 0 0 -12px\"\r\n        },\r\n\r\n        linkWrapper: {\r\n            margin: theme.spacing(2),\r\n            marginTop: 0,\r\n            padding: `0 ${theme.spacing(1)}px`,\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\"\r\n        },\r\n\r\n        link: {\r\n            overflowX: \"overlay\",\r\n            padding: `${theme.spacing(1)}px 0`\r\n        },\r\n\r\n        shareButton: {\r\n            padding: theme.spacing(1)\r\n        },\r\n\r\n        snackbarClose: {\r\n            color: theme.palette.primary.variant\r\n        }\r\n    }\r\n})\r\n\r\nfunction ImageDialog({ open, onClose, imageData, elements }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles({ imageData })\r\n    \r\n    const { register, getValues } = useForm()\r\n\r\n    // Increase the usage-counter only once\r\n    const isRegistered = useRef(false)\r\n    const onAccept = useRef()\r\n    const onReject = useRef()\r\n\r\n    const [link, setLink] = useState()\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isShareDialogOpen, setIsShareDialogOpen] = useState(false)\r\n    const [isUploadTermsDialogOpen, setIsUploadTermsDialogOpen] = useState(false)\r\n    const [isUploadSnackbarOpen, setIsUploadSnackbarOpen] = useState(false)\r\n    const [hasCreatedTemplate, setHasCreatedTemplate] = useState(false)\r\n\r\n    const isEditingTemplate = !!context.currentTemplate\r\n\r\n    const dispatchEvent = (name, detail) => context.event.dispatchEvent(new CustomEvent(name, { detail }))\r\n\r\n    const registerUsage = async () => {\r\n        // Register template usage\r\n        if(context.currentTemplate) {\r\n            if (!isRegistered.current) {\r\n                await registerTemplateUse(context.currentTemplate.id)\r\n            }\r\n        }\r\n\r\n        // Register sticker usage\r\n        for(let element of elements) {\r\n            if (element.type === \"sticker\" && element.data.id !== undefined) {\r\n                await registerStickerUse(element.data.id)\r\n            }\r\n        }\r\n\r\n        isRegistered.current = true\r\n    }\r\n\r\n    const handleClose = () => {\r\n        isRegistered.current = false\r\n        setHasCreatedTemplate(false)\r\n        onClose()\r\n    }\r\n\r\n    const handleDownloadClick = () => {\r\n        downloadImageFromSrc(imageData)\r\n        registerUsage()\r\n        dispatchEvent(\"downloadImage\")\r\n    }\r\n\r\n    const handleUploadClick = () => {\r\n        setIsUploadTermsDialogOpen(true)\r\n\r\n        new Promise((resolve, reject) => {\r\n            onAccept.current = resolve\r\n            onReject.current = reject\r\n        })\r\n\r\n        .then(async () => {\r\n            setIsUploadTermsDialogOpen(false)\r\n            setIsUploading(true)\r\n\r\n            const file = dataURLToFile(imageData, \"image.png\")\r\n            const link = await uploadImage(file)\r\n\r\n            setIsUploading(false)\r\n            setLink(link)\r\n            registerUsage()\r\n            dispatchEvent(\"uploadImage\", { link })\r\n        })\r\n\r\n        .catch(() => {\r\n            setIsUploadTermsDialogOpen(false)\r\n        })\r\n    }\r\n\r\n    const handleShareClick = () => {\r\n        setIsShareDialogOpen(true)\r\n        dispatchEvent(\"openShareModal\")\r\n    }\r\n\r\n    const handlePublishTemplateClick = async () => {\r\n        if(!getValues(\"label\")) {\r\n            return\r\n        }\r\n\r\n        setIsPublishing(true)\r\n\r\n        // Collect image data\r\n        const label = getValues(\"label\")\r\n        const image = dataURLToFile(context.image, \"image.png\")\r\n        const metaData = {\r\n            textboxes: window.getTextboxes(),\r\n            border: window.getBorder()\r\n        }\r\n\r\n        // Create form data\r\n        const formData = new FormData()\r\n        formData.append(\"password\", context.password)\r\n        formData.append(\"image\", image)\r\n        formData.append(\"label\", label)\r\n        formData.append(\"meta_data\", JSON.stringify(metaData))\r\n\r\n        // Upload data\r\n        uploadTemplate(formData).then(res => {\r\n            if(res.status === 200) {\r\n                setHasCreatedTemplate(true)\r\n                setIsUploadSnackbarOpen(true)\r\n            }\r\n        }).finally(() => {\r\n            setIsPublishing(false)\r\n        })\r\n    }\r\n\r\n    const handleEditTemplateClick = async () => {\r\n        if(!getValues(\"label\")) {\r\n            return\r\n        }\r\n\r\n        setIsPublishing(true)\r\n\r\n        // Collect image data\r\n        const label = getValues(\"label\")\r\n        const metaData = {\r\n            textboxes: window.getTextboxes(),\r\n            border: window.getBorder()\r\n        }\r\n\r\n        // Create body object\r\n        const body = {\r\n            id: context.currentTemplate.id,\r\n            label,\r\n            meta_data: metaData\r\n        }\r\n\r\n        // Upload data\r\n        editTemplate(body).then(res => {\r\n            if (res.status === 200) {\r\n                setHasCreatedTemplate(true)\r\n                setIsUploadSnackbarOpen(true)\r\n            }\r\n        }).finally(() => {\r\n            setIsPublishing(false)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!open) {\r\n            // Reset link when dialog closes\r\n            setLink(null)\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={handleClose} PaperProps={{ className: classes.innerDialog }}>\r\n                {!imageData ? (\r\n                    <CircularProgress/>\r\n                ) : (\r\n                    <>\r\n                        <img alt=\"\" src={imageData} className={classes.image}/>\r\n\r\n                        <Paper variant=\"outlined\" className={classes.linkWrapper} style={{ display: !link && \"none\" }}>\r\n                            <Typography variant=\"body1\" className={classes.link}>\r\n                                {link}\r\n                            </Typography>\r\n\r\n                            <IconButton className={classes.shareButton} onClick={handleShareClick}>\r\n                                <ShareIcon />\r\n                            </IconButton>\r\n                        </Paper>\r\n\r\n                        {!link && (\r\n                            <div className={classes.uploadButtonWrapper}>\r\n                                <Button\r\n                                    startIcon={<LinkIcon />}\r\n                                    color=\"primary\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={handleUploadClick}\r\n                                    disabled={isUploading}\r\n                                    fullWidth\r\n                                >\r\n                                    Create Link\r\n                                </Button>\r\n\r\n                                {isUploading && <CircularProgress size={24} className={classes.buttonLoader} />}\r\n                            </div>\r\n                        )}\r\n\r\n                        <Button\r\n                            startIcon={<DownloadIcon />}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            className={classes.spacing}\r\n                            onClick={handleDownloadClick}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n\r\n                        {context.password && !hasCreatedTemplate && (\r\n                            <>\r\n                                <TextField\r\n                                    inputRef={register()}\r\n                                    name=\"label\"\r\n                                    label=\"Label\"\r\n                                    className={classes.spacing}\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={context.label}\r\n                                />\r\n                                \r\n                                <div className={classes.uploadButtonWrapper}>\r\n                                    <Button\r\n                                        startIcon={<PublishIcon />}\r\n                                        color=\"primary\"\r\n                                        variant=\"outlined\"\r\n                                        onClick={!isEditingTemplate ? handlePublishTemplateClick : handleEditTemplateClick}\r\n                                        disabled={isPublishing}\r\n                                        fullWidth\r\n                                    >\r\n                                        { !isEditingTemplate ? \"Publish\" : \"Update\" } Template\r\n                                    </Button>\r\n\r\n                                    {isPublishing && <CircularProgress size={24} className={classes.buttonLoader} />}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        <ShareDialog\r\n                            open={isShareDialogOpen}\r\n                            link={link}\r\n                            onOpen={handleShareClick}\r\n                            onClose={() => setIsShareDialogOpen(false)}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n\r\n            <UploadTermsDialog\r\n                open={isUploadTermsDialogOpen}\r\n                onAccept={onAccept.current}\r\n                onReject={onReject.current}\r\n            />\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={isUploadSnackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={() => setIsUploadSnackbarOpen(false)}\r\n                message=\"Uploaded\"\r\n                action={\r\n                    <IconButton onClick={() => setIsUploadSnackbarOpen(false)} className={classes.snackbarClose}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(ImageDialog, \"image\")","import React, { useState, useEffect } from \"react\"\r\nimport { Dialog, DialogTitle, Button, TextField, FormGroup } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormProvider } from \"react-hook-form\"\r\n\r\nimport Select from \"./components/Select.js\"\r\nimport Switch from \"./components/Switch.js\"\r\n\r\nimport settingsOptions from \"../../config/settings-options.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nfunction GridDialog({ onClose, open, values }) {\r\n    const { register, getValues, handleSubmit, control, watch, reset, setValue } = useForm()\r\n\r\n    const classes = useStyles()\r\n\r\n    const [spacingError, setSpacingError] = useState(false)\r\n\r\n    const handleClose = () => {\r\n        const values = getValues()\r\n\r\n        // Missing value \"Spacing\"\r\n        if(values.fixedSpacing && !values.spacing) {\r\n            setSpacingError(true)\r\n            return\r\n        } else {\r\n            setSpacingError(false)\r\n        }\r\n\r\n        values.spacing = parseInt(values.spacing)\r\n\r\n        onClose(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        reset(values)\r\n    }, [values, reset])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle>Set Grid</DialogTitle>\r\n\r\n            <FormProvider {...{ control, watch, register, setValue }}>\r\n                <form onSubmit={handleSubmit(handleClose)} className={classes.form}>\r\n                    <FormGroup>\r\n                        {/* Enabled */}\r\n                        <Switch name=\"enabled\" label=\"Enabled\" className={classes.input}/>\r\n\r\n                        {/* Use Fixed Spacing */}\r\n                        <Switch name=\"fixedSpacing\" label=\"Fixed Spacing\" className={classes.input}/>\r\n\r\n                        {/* Color */}\r\n                        <Select\r\n                            name=\"color\"\r\n                            label=\"Color\"\r\n                            options={settingsOptions.colors}\r\n                            className={classes.input}\r\n                            child={({ label, value }) => (\r\n                                <span style={{ color: value }}>{label}</span>\r\n                            )}\r\n                        />\r\n\r\n                        {/* Columns */}\r\n                        <TextField\r\n                            inputRef={register()}\r\n                            className={classes.input}\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"columns\"\r\n                            label=\"Columns\"\r\n                        />\r\n\r\n                        {/* Rows */}\r\n                        <TextField\r\n                            inputRef={register()}\r\n                            className={classes.input}\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"rows\"\r\n                            label=\"Rows\"\r\n                        />\r\n\r\n                        {/* Spacing */}\r\n                        <TextField\r\n                            inputRef={register()}\r\n                            className={classes.input}\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"spacing\"\r\n                            label=\"Spacing (px)\"\r\n                            error={spacingError}\r\n                        />\r\n\r\n                        <Button fullWidth className={classes.applyButton} type=\"submit\">Apply</Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </FormProvider>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(GridDialog, \"grid\")","import html2canvas from \"html2canvas\"\r\n\r\nimport { TEXTBOX_PADDING } from \"../config/constants.js\"\r\n\r\nfunction compensateError(clonedDocument) {\r\n    /**\r\n     * Compensate down shifting\r\n     */\r\n    const textboxes = clonedDocument.querySelectorAll(\".textbox\")\r\n    const padding = TEXTBOX_PADDING\r\n\r\n    textboxes.forEach(textbox => {\r\n        const shiftOffset = Math.min(textbox.offsetHeight / 18, padding)\r\n        textbox.style.padding = `${padding - shiftOffset}px ${padding}px ${padding + shiftOffset}px`\r\n    })\r\n\r\n    /**\r\n     * Compensate font error\r\n     */\r\n    textboxes.forEach(textbox => {\r\n        textbox.style.fontFeatureSettings = '\"liga\" 0'\r\n    })\r\n\r\n    /**\r\n     * Reverse order of elements\r\n     */\r\n    const elements = Array.from(clonedDocument.querySelectorAll(\".element\"))\r\n    if (elements.length > 0) {\r\n        const parent = elements[0].parentNode\r\n        elements\r\n            .map(node => parent.removeChild(node))\r\n            .reverse()\r\n            .map(node => parent.appendChild(node))\r\n    }\r\n\r\n    /**\r\n     * Remove white border\r\n     */\r\n    const image = clonedDocument.querySelector(\".meme-image\")\r\n    image.style.minWidth = (image.clientWidth + 1) + \"px\"\r\n    image.style.minHeight = (image.clientHeight + 1) + \"px\"\r\n}\r\n\r\nasync function generateImage(container) {\r\n    const canvas = await html2canvas(container, {\r\n        useCORS: true,\r\n        onclone: compensateError\r\n    })\r\n\r\n    return canvas.toDataURL()\r\n}\r\n\r\nexport default generateImage","import React, { useContext, useEffect, useState, useRef } from \"react\"\r\nimport { IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\"\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\"\r\n\r\nimport Textbox from \"./Elements/Textbox.js\"\r\nimport Sticker from \"./Elements/Sticker.js\"\r\nimport Grid from \"./Grid.js\"\r\nimport BorderDialog from \"../Dialogs/BorderDialog.js\"\r\nimport ImageDialog from \"../Dialogs/ImageDialog.js\"\r\nimport GridDialog from \"../Dialogs/GridDialog.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nimport { fileToImage, importFile } from \"../../utils\"\r\nimport generateImage from \"../../utils/generateImage.js\"\r\n\r\n// function showCanvas (canvas) {\r\n//     const newWindow = window.open(\"\", \"canvas\")\r\n//     newWindow.document.body.appendChild(canvas)\r\n// }\r\n\r\nfunction getDimensionsWithoutPadding(element) {\r\n    const styles = getComputedStyle(element)\r\n\r\n    return {\r\n        width: element.clientWidth - parseFloat(styles.paddingLeft) - parseFloat(styles.paddingRight),\r\n        height: element.clientHeight - parseFloat(styles.paddingTop) - parseFloat(styles.paddingBottom)\r\n    }\r\n}\r\n\r\nasync function waitFrames(amount = 1) {\r\n    for(let i = 0; i < amount; i++) {\r\n        await new Promise(requestAnimationFrame)\r\n    }\r\n}\r\n\r\nconst defaultBorderValues = {\r\n    size: 0,\r\n    top: true,\r\n    bottom: true,\r\n    left: false,\r\n    right: false,\r\n    color: \"white\"\r\n}\r\n\r\nconst defaultGridValues = {\r\n    enabled: false,\r\n    fixedSpacing: false,\r\n    color: \"black\",\r\n    spacing: undefined,\r\n    columns: 16,\r\n    rows: 16\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    canvasWrapper: {\r\n        position: \"absolute\",\r\n        top: 0, bottom: 0,\r\n        left: 0, right: 0,\r\n        backgroundColor: theme.palette.background.default,\r\n        // outline: `${theme.spacing(1)}px solid ${theme.palette.background.default}`,\r\n        padding: theme.spacing(1),\r\n        paddingBottom: theme.mixins.toolbar.minHeight + theme.spacing(1),\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    canvas: {\r\n        position: \"relative\",\r\n        display: \"flex\"\r\n    }\r\n}))\r\n\r\nfunction Canvas() {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const idCounter = useRef(0)\r\n\r\n    const image = useRef()\r\n    const canvas = useRef()\r\n    const container = useRef()\r\n    const elementRefs = useRef({})\r\n\r\n    let [elementKeys, setElementKeys] = useState([])\r\n    const [borderValues, setBorderValues] = useState(defaultBorderValues)\r\n    const [gridValues, setGridValues] = useState(defaultGridValues)\r\n    const [isBorderDialogOpen, setIsBorderDialogOpen] = useState(false)\r\n    const [isImageDialogOpen, setIsImageDialogOpen] = useState(false)\r\n    const [isGridDialogOpen, setIsGridDialogOpen] = useState(false)\r\n    const [generatedImage, setGeneratedImage] = useState(null)\r\n\r\n    elementRefs.current = {}\r\n    for (let element of elementKeys) {\r\n        elementRefs.current[element.key] = {}\r\n    }\r\n\r\n    const handleBorderDialogClose = (values) => {\r\n        if(values) {\r\n            setBorderValues(values)\r\n        }\r\n        setIsBorderDialogOpen(false)\r\n    }\r\n\r\n    const handleGridDialogClose = (values) => {\r\n        if(values) {\r\n            setGridValues(values)\r\n        }\r\n        setIsGridDialogOpen(false)\r\n    }\r\n\r\n    const handleImageDialogClose = async () => {\r\n        setIsImageDialogOpen(false)\r\n        // Wait until dialog is closed\r\n        await waitFrames(3)\r\n        setGeneratedImage(null)\r\n    }\r\n\r\n    const handleRemoveElement = (removeKey) => {\r\n        const newKeys = elementKeys.filter(({ key }) => key !== removeKey)\r\n        setElementKeys(newKeys)\r\n\r\n        delete elementRefs.current[removeKey]\r\n    }\r\n\r\n    const clearElements = () => {\r\n        setElementKeys([])\r\n        elementRefs.current = {}\r\n    }\r\n\r\n    const createNewElement = (type, data) => {\r\n        const newElementKey = {\r\n            type,\r\n            data,\r\n            key: idCounter.current++\r\n        }\r\n\r\n        return newElementKey\r\n    }\r\n\r\n    const handleAddTextbox = ({ template }) => {\r\n        const newElementKey = createNewElement(\"textbox\", { template })\r\n\r\n        setElementKeys([...elementKeys, newElementKey])\r\n\r\n        return newElementKey\r\n    }\r\n\r\n    const addSticker = (src, id) => {\r\n        const newElementKey = createNewElement(\"sticker\", { src, id })\r\n        setElementKeys([...elementKeys, newElementKey])\r\n    }\r\n\r\n    const handleImportSticker = async () => {\r\n        const file = await importFile(\"image/*\")\r\n        const base64Image = await fileToImage(file)\r\n        addSticker(base64Image)\r\n    }\r\n\r\n    const beforeCapturing = async container => {\r\n        Object.values(elementRefs.current).forEach(textbox => textbox.beforeCapturing())\r\n        \r\n        // Wait until the dom changes have applied\r\n        await waitFrames(3)\r\n    }\r\n\r\n    const afterCapturing = container => {\r\n        Object.values(elementRefs.current).forEach(textbox => textbox.afterCapturing())\r\n    }\r\n\r\n    const handleImportImage = async () => {\r\n        const file = await importFile(\"image/*\")\r\n        const base64Image = await fileToImage(file)\r\n\r\n        clearElements()\r\n        context.set({\r\n            currentTemplate: null,\r\n            image: base64Image\r\n        })\r\n    }\r\n\r\n    const handleGenerateImage = async () => {\r\n        setIsImageDialogOpen(true)\r\n\r\n        // Wait until component got rendered and the textbox handles got applied\r\n        await waitFrames(1)\r\n\r\n        const container = document.querySelector(`.${classes.canvas}`)\r\n\r\n        await beforeCapturing(container)\r\n\r\n        const imageData = await generateImage(container)\r\n\r\n        setGeneratedImage(imageData)\r\n        \r\n        afterCapturing(container)\r\n    }\r\n\r\n    const handleSetBorder = () => {\r\n        setIsBorderDialogOpen(true)\r\n    }\r\n\r\n    const handleSetGrid = () => {\r\n        setIsGridDialogOpen(true)\r\n    }\r\n\r\n    const handleLoadTemplate = async ({ detail: { template } }) => {\r\n        context.set({\r\n            currentTemplate: template,\r\n            image: template.image_url,\r\n            label: template.label\r\n        })\r\n\r\n        // Wait until image is loaded into DOM and resized\r\n        await waitFrames(2)\r\n        \r\n        // Check if value is given as percentage string and convert it if true\r\n        const formatPercentage = (object, selector, useWidth = false) => {\r\n            if(/\\d+%/.test(object[selector])) {\r\n                const percentage = parseFloat(object[selector])\r\n                object[selector] = (useWidth ? image.current.clientWidth : image.current.clientHeight) * (percentage / 100)\r\n            }\r\n        }\r\n\r\n        // Delete all elements\r\n        clearElements()\r\n        elementKeys = []\r\n\r\n        // Stop if no metadata exists\r\n        if(!template.meta_data) {\r\n            return\r\n        }\r\n\r\n        const border = template.meta_data.border\r\n        const textboxes = template.meta_data.textboxes\r\n\r\n        // Format border size\r\n        if (typeof border?.size === \"string\") {\r\n            formatPercentage(border, \"size\")\r\n        }\r\n\r\n        // Set border\r\n        setBorderValues(border || defaultBorderValues)\r\n\r\n        // Handle textboxes\r\n        if(textboxes) {\r\n            for(let textbox of textboxes){\r\n                // Format values\r\n                formatPercentage(textbox, \"width\", true)\r\n                formatPercentage(textbox, \"height\")\r\n                formatPercentage(textbox, \"x\", true)\r\n                formatPercentage(textbox, \"y\")\r\n\r\n                // Add textbox\r\n                const newKey = handleAddTextbox({ template: textbox })\r\n                elementKeys.push(newKey)\r\n            }\r\n        }\r\n\r\n        // Set new keys\r\n        setElementKeys(elementKeys)\r\n    }\r\n\r\n    const handleLoadSticker = ({ detail: { sticker } }) => {\r\n        addSticker(sticker.image_url, sticker.id)\r\n    }\r\n\r\n    const handleGetTextboxes = () => {\r\n        const textboxKeys = elementKeys.filter(({ type }) => type === \"textbox\").map(({ key }) => key)\r\n        const formatted = textboxKeys.map(key => elementRefs.current[key].toObject({ image: image.current }))\r\n\r\n        return formatted\r\n    }\r\n\r\n    const handleGetBorder = () => {\r\n        return borderValues\r\n    }\r\n\r\n    // Set event listeners\r\n    useEffect(() => {\r\n        context.event.addEventListener(\"importImage\", handleImportImage)\r\n        context.event.addEventListener(\"addTextbox\", handleAddTextbox)\r\n        context.event.addEventListener(\"importSticker\", handleImportSticker)\r\n        context.event.addEventListener(\"generateImage\", handleGenerateImage)\r\n        context.event.addEventListener(\"setBorder\", handleSetBorder)\r\n        context.event.addEventListener(\"setGrid\", handleSetGrid)\r\n        context.event.addEventListener(\"loadTemplate\", handleLoadTemplate)\r\n        context.event.addEventListener(\"loadSticker\", handleLoadSticker)\r\n\r\n        window.getTextboxes = handleGetTextboxes\r\n        window.getBorder = handleGetBorder\r\n        \r\n        return () => {\r\n            context.event.removeEventListener(\"importImage\", handleImportImage)\r\n            context.event.removeEventListener(\"addTextbox\", handleAddTextbox)\r\n            context.event.removeEventListener(\"importSticker\", handleImportSticker)\r\n            context.event.removeEventListener(\"generateImage\", handleGenerateImage)\r\n            context.event.removeEventListener(\"setBorder\", handleSetBorder)\r\n            context.event.removeEventListener(\"setGrid\", handleSetGrid)\r\n            context.event.removeEventListener(\"loadTemplate\", handleLoadTemplate)\r\n            context.event.removeEventListener(\"loadSticker\", handleLoadSticker)\r\n        }\r\n    })\r\n\r\n    // Set image dimensions\r\n    useEffect(() => {\r\n        (async () => {\r\n            // Wait until image is loaded\r\n            await waitFrames(1)\r\n\r\n            if (!image.current || !container.current || !canvas.current) {\r\n                return\r\n            }\r\n\r\n            // Get image dimensions\r\n            const imgWidth = image.current.naturalWidth\r\n            const imgHeight = image.current.naturalHeight\r\n            const imgRatio = imgHeight / imgWidth\r\n\r\n            // Get container size\r\n            const { width: maxWidth, height: maxHeight } = getDimensionsWithoutPadding(container.current)\r\n\r\n            let newWidth, newHeight\r\n\r\n            if (maxWidth * imgRatio > maxHeight) {\r\n                // Height is larger than max height => Constrain height\r\n                const margin = 32\r\n                const borderSize = (borderValues.top || 0 + borderValues.bottom || 0) * borderValues.size\r\n                newHeight = maxHeight - margin - borderSize\r\n                newWidth = newHeight * (1 / imgRatio)\r\n            } else {\r\n                // Width is larger than max width => Constrain width\r\n                const borderSize = (borderValues.left || 0 + borderValues.right || 0) * borderValues.size\r\n                newWidth = maxWidth - borderSize\r\n                newHeight = newWidth * imgRatio\r\n            }\r\n\r\n            newWidth = Math.floor(newWidth)\r\n            newHeight = Math.floor(newHeight)\r\n\r\n            // Apply sizing to image\r\n            image.current.style.width = newWidth + \"px\"\r\n            image.current.style.height = newHeight + \"px\"\r\n\r\n            // Apply sizing to canvas\r\n            canvas.current.style.width = newWidth + \"px\"\r\n            canvas.current.style.height = newHeight + \"px\"\r\n        })()\r\n    }, [context.image, image, container, canvas, borderValues])\r\n\r\n    return (\r\n        <div className={classes.canvasWrapper} ref={container}>\r\n            <div \r\n                className={classes.canvas} \r\n                style={{\r\n                    paddingTop: borderValues.top && borderValues.size + \"px\",\r\n                    paddingBottom: borderValues.bottom && borderValues.size + \"px\",\r\n                    paddingLeft: borderValues.left && borderValues.size + \"px\",\r\n                    paddingRight: borderValues.right && borderValues.size + \"px\",\r\n                    backgroundColor: context.image && borderValues.color,\r\n                    width: !context.image && \"unset\"\r\n                }}\r\n                ref={canvas}\r\n            >\r\n                {context.image ? (\r\n                    <img\r\n                        alt=\"\"\r\n                        src={context.image}\r\n                        className=\"meme-image\"\r\n                        ref={image}\r\n                        draggable=\"false\"\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <IconButton onClick={() => context.event.dispatchEvent(new CustomEvent(\"openTemplatesDialog\"))}>\r\n                            <CloudDownloadIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                        \r\n                        <IconButton onClick={handleImportImage}>\r\n                            <PhotoLibraryIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </>\r\n                )}\r\n\r\n                {elementKeys.map(({ type, key, data }) => {\r\n                    if(type === \"textbox\") {\r\n                        return (\r\n                            <Textbox\r\n                                key={key}\r\n                                id={key}\r\n                                onRemove={handleRemoveElement}\r\n                                handle={elementRefs.current[key]}\r\n                                grid={gridValues}\r\n                                template={data.template}\r\n                                canvas={canvas.current}\r\n                            />\r\n                        )\r\n                    } else if (type === \"sticker\") {\r\n                        return (\r\n                            <Sticker\r\n                                key={key}\r\n                                id={key}\r\n                                onRemove={handleRemoveElement}\r\n                                handle={elementRefs.current[key]}\r\n                                grid={gridValues}\r\n                                canvas={canvas.current}\r\n                                src={data.src}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    throw new Error(\"Type \" + type + \" is not defined\")\r\n                })}\r\n            </div>\r\n\r\n            <Grid config={gridValues} canvas={canvas.current} border={borderValues}/>\r\n\r\n            <BorderDialog open={isBorderDialogOpen} onClose={handleBorderDialogClose} values={borderValues}/>\r\n            <GridDialog open={isGridDialogOpen} onClose={handleGridDialogClose} values={gridValues}/>\r\n            <ImageDialog open={isImageDialogOpen} onClose={handleImageDialogClose} imageData={generatedImage} elements={elementKeys}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Canvas","import React, { useContext } from \"react\"\r\nimport { Menu as MuiMenu, MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport BorderOuterIcon from \"@material-ui/icons/BorderOuter\"\r\nimport GridIcon from \"@material-ui/icons/GridOn\"\r\nimport AddPhotoIcon from \"@material-ui/icons/AddPhotoAlternate\"\r\nimport PhotoLibraryIcon from \"@material-ui/icons/PhotoLibrary\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        minWidth: theme.spacing(4)\r\n    }\r\n}))\r\n\r\nfunction Menu({ open, anchorEl, onClose }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const dispatchEvent = (name) => () => {\r\n        context.event.dispatchEvent(new CustomEvent(name))\r\n        onClose()\r\n    } \r\n\r\n    return (\r\n        <MuiMenu\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\"\r\n            }}\r\n            transformOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\"\r\n            }}\r\n        >\r\n            <MenuItem onClick={dispatchEvent(\"setBorder\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <BorderOuterIcon fontSize=\"small\"/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Border\"/>\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={dispatchEvent(\"setGrid\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <GridIcon fontSize=\"small\"/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Grid\"/>\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={dispatchEvent(\"importSticker\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <AddPhotoIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Import Sticker\" />\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={dispatchEvent(\"importImage\")}>\r\n                <ListItemIcon className={classes.icon}>\r\n                    <PhotoLibraryIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary={context.image ? \"Replace Meme\" : \"Import Meme\"} />\r\n            </MenuItem>\r\n        </MuiMenu>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from \"react\"\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from \"@material-ui/core\"\r\n\r\nfunction ConfirmDialog({ onClose, open, content }) {\r\n    const handleCancel = () => onClose(false)\r\n\r\n    const handleAccept = () => onClose(true)\r\n\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            open={open}\r\n        >\r\n            <DialogTitle>Confirm</DialogTitle>\r\n            \r\n            <DialogContent dividers>\r\n                <Typography>{content}</Typography>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={handleCancel}>Cancel</Button>\r\n                <Button onClick={handleAccept}>Ok</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialog","import { useState, useEffect, useReducer } from \"react\"\r\n\r\nimport * as API from \"../config/api.js\"\r\n\r\nconst cache = new Map()\r\n\r\n/**\r\n * Fetch data from given endpoint\r\n * \r\n * @param {String | Object} props Name of the API function to use of configuration object\r\n * @param {String} props.method Name of the API function to use\r\n * @param {Any} props.data Arguments to be passed to the API function\r\n * @param {Boolean} props.useCache Whether or not to cache requests and use a cached response as the initial data\r\n * @param {Any} props.defaultValue Default value for data\r\n * @param {Function} props.onLoad Will be triggered when the requests was performed successfully. Receives the data as the first argument\r\n * \r\n * @returns {Object} response A custom response object\r\n * @returns {Object} response.data The data returned from the API\r\n * @returns {Boolean} response.isLoading If the request is pending or complete\r\n * @returns {Object} response.error The error thrown by the request, undefined if there is none\r\n * @returns {Function} response.reload Perform the request again\r\n */\r\nfunction useAPIData(props) {\r\n    props = {\r\n        method: typeof props === \"string\" ? props : props.method,\r\n        useCache: true,\r\n        ...(typeof props === \"object\" ? props : {})\r\n    }\r\n\r\n    if (!props.method) {\r\n        throw new Error(\"API Method not found\")\r\n    }\r\n\r\n    const method = API[props.method].bind(null, props.data)\r\n\r\n    const [isLoading, setIsLoading] = useState(!(props.defaultValue || cache.get(props.method)))\r\n    const [error, setError] = useState()\r\n\r\n    const [data, setData] = useReducer((state, newValue) => {\r\n        cache.set(props.method, newValue)\r\n        return newValue\r\n    }, props.defaultValue || (props.useCache && cache.get(props.method)))\r\n\r\n    const [version, reload] = useReducer((key) => key + 1, 0)\r\n\r\n    useEffect(() => {\r\n        if (data && version === 0) {\r\n            return\r\n        }\r\n\r\n        setIsLoading(true)\r\n\r\n        method()\r\n            .then(res => {\r\n                setData(res.data)\r\n                setError(null)\r\n                setIsLoading(false)\r\n\r\n                if (props.onLoad) {\r\n                    props.onLoad(res.data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setData(null)\r\n                setError(error)\r\n                setIsLoading(false)\r\n            })\r\n        // eslint-disable-next-line\r\n    }, [version])\r\n\r\n    return {\r\n        isLoading,\r\n        data,\r\n        error,\r\n        reload\r\n    }\r\n}\r\n\r\nexport default useAPIData","import React, { useState, useContext, useRef } from \"react\"\r\nimport { IconButton, GridList, GridListTile, GridListTileBar, CircularProgress, InputBase, Paper } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport ConfirmDialog from \"../ConfirmDialog.js\"\r\n\r\nimport { AppContext } from \"../../../App.js\"\r\nimport { deleteTemplate } from \"../../../config/api.js\"\r\nimport { cacheImage } from \"../../../utils/cache.js\"\r\nimport useAPIData from \"../../../utils/useAPIData.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    spacer: {\r\n        height: theme.spacing(2)\r\n    },\r\n\r\n    searchWrapper: {\r\n        margin: `${theme.spacing(2)}px ${theme.spacing(1)}px`,\r\n        marginTop: 0,\r\n        padding: \"2px 4px\",\r\n        display: \"flex\"\r\n    },\r\n\r\n    search: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1\r\n    },\r\n\r\n    searchClear: {\r\n        padding: theme.spacing(1)\r\n    },\r\n    \r\n    listWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    list: {\r\n        maxWidth: 400,\r\n        width: \"100%\"\r\n    },\r\n\r\n    tile: {\r\n        cursor: \"pointer\"\r\n    },\r\n\r\n    tilebar: {\r\n        height: 56\r\n    },\r\n\r\n    deleteButton: {\r\n        zIndex: 10,\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0\r\n    }\r\n}))\r\n\r\nconst getSubtitle = (count) => {\r\n    if (count === 1) {\r\n        return \"1 Meme Created\"\r\n    } else {\r\n        return count + \" Memes Created\"\r\n    }\r\n}\r\n\r\nfunction Templates({ onLoad }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const currentTemplate = useRef({})\r\n\r\n    const [isConfirmDialogOpen, setIsConfirmDialogOpen] = useState(false)\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const { data, isLoading, reload } = useAPIData(\"getTemplates\")\r\n\r\n    const handleDeleteClick = (template) => {\r\n        currentTemplate.current = template\r\n        setIsConfirmDialogOpen(true)\r\n    }\r\n\r\n    const handleConfirmDialogClose = (shouldDelete) => {\r\n        setIsConfirmDialogOpen(false)\r\n\r\n        if (shouldDelete) {\r\n            deleteTemplate(currentTemplate.current.id)\r\n                .then(reload)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event, template) => {\r\n        // Prevent loading when delete icon got clicked\r\n        if (event.target.tagName === \"DIV\" || event.target.tagName === \"IMG\") {\r\n            onLoad(template)\r\n        }\r\n    }\r\n\r\n    const handleSearchChange = event => {\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    const handleImageLoad = (template) => {\r\n        cacheImage(template.image_url)\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    // Filter by search string\r\n    const renderTemplates = data.filter(({ label }) => label.toLowerCase().includes(search.toLowerCase()))\r\n\r\n    // Sort by usage => Push most used memes to the top\r\n    renderTemplates.sort((a, b) => b.amount_uses - a.amount_uses)\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.spacer}/>\r\n\r\n            <Paper variant=\"outlined\" className={classes.searchWrapper}>\r\n                <InputBase value={search} onChange={handleSearchChange} placeholder=\"Search\" className={classes.search} />\r\n\r\n                <IconButton onClick={() => setSearch(\"\")} className={classes.searchClear}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </Paper>\r\n            \r\n            <div className={classes.listWrapper}>\r\n                <GridList cellHeight={150} className={classes.list}>\r\n                    {renderTemplates.map((template, i) => (\r\n                        <GridListTile key={i} className={classes.tile} onClick={e => handleClick(e, template)}>\r\n                            <img src={template.image_url} alt={template.label} loading=\"lazy\" onLoad={() => handleImageLoad(template)}/>\r\n\r\n                            <GridListTileBar title={template.label} subtitle={getSubtitle(template.amount_uses)} className={classes.tilebar} />\r\n\r\n                            {context.password && (\r\n                                <IconButton onClick={() => handleDeleteClick(template)} className={classes.deleteButton}>\r\n                                    <DeleteIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            )}\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n\r\n                <ConfirmDialog\r\n                    open={isConfirmDialogOpen}\r\n                    onClose={handleConfirmDialogClose}\r\n                    content={`The template \"${currentTemplate.current.label}\" will be deleted`}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Templates","import React, { useState, useContext, useEffect, useRef } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { IconButton, GridList, GridListTile, CircularProgress, Fab, Zoom } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\n\r\nimport { AppContext } from \"../../../App.js\"\r\nimport ConfirmDialog from \"../ConfirmDialog.js\"\r\n\r\nimport { deleteSticker, uploadSticker } from \"../../../config/api.js\"\r\nimport { importFile } from \"../../../utils\"\r\nimport { cacheImage } from \"../../../utils/cache.js\"\r\nimport useAPIData from \"../../../utils/useAPIData.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    listWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n\r\n    list: {\r\n        maxWidth: 400,\r\n        paddingTop: theme.spacing(1),\r\n        width: \"100%\"\r\n    },\r\n\r\n    tile: {\r\n        cursor: \"pointer\",\r\n        \r\n        \"& div\": {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        }\r\n    },\r\n\r\n    deleteButton: {\r\n        zIndex: 10,\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0\r\n    },\r\n\r\n    addButton: {\r\n        position: \"fixed\",\r\n        right: theme.spacing(2),\r\n        bottom: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nfunction InnerTile({ sticker, onDelete }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const image = useRef()\r\n\r\n    const resizeImage = () => {\r\n        if (!image.current) {\r\n            return\r\n        }\r\n\r\n        // Set image dimensions\r\n        if (image.current.naturalWidth >= image.current.naturalHeight) {\r\n            image.current.style.width = \"100%\"\r\n        } else if (image.current.naturalHeight > image.current.naturalWidth) {\r\n            image.current.style.height = \"100%\"\r\n        }\r\n    }\r\n\r\n    const handleImageLoad = () => {\r\n        cacheImage(sticker.image_url)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!image.current) {\r\n            return\r\n        }\r\n\r\n        image.current.onload = () => {\r\n            resizeImage()\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <img src={sticker.image_url} alt=\"Sticker\" loading=\"lazy\" ref={image} onLoad={handleImageLoad}/>\r\n\r\n            {context.password && (\r\n                <IconButton onClick={() => onDelete(sticker)} className={classes.deleteButton}>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Stickers({ onLoad, active }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles()\r\n\r\n    const currentSticker = useRef({})\r\n\r\n    const [isConfirmDialogOpen, setIsConfirmDialogOpen] = useState(false)\r\n\r\n    const { data, isLoading, reload } = useAPIData(\"getStickers\")\r\n\r\n    const handleDelete = (sticker) => {\r\n        currentSticker.current = sticker\r\n        setIsConfirmDialogOpen(true)\r\n    }\r\n\r\n    const handleConfirmDialogClose = (shouldDelete) => {\r\n        setIsConfirmDialogOpen(false)\r\n\r\n        if (shouldDelete) {\r\n            deleteSticker(currentSticker.current.id)\r\n                .then(reload)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event, sticker) => {\r\n        // Prevent loading when delete icon got clicked\r\n        if (event.target.tagName === \"DIV\" || event.target.tagName === \"IMG\") {\r\n            onLoad(sticker)\r\n        }\r\n    }\r\n\r\n    const handleAddSticker = async () => {\r\n        // Import image\r\n        const image = await importFile(\"image/*\")\r\n\r\n        // Create form data\r\n        const formData = new FormData()\r\n        formData.append(\"image\", image)\r\n\r\n        // Upload image\r\n        await uploadSticker(formData)\r\n        reload()\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    // Sort by usage => Push most used stickers to the top\r\n    data.sort((a, b) => b.amount_uses - a.amount_uses)\r\n\r\n    const actionContainer = document.getElementById(\"templates-dialog-inner-container\")\r\n\r\n    return (\r\n        <div className={classes.listWrapper}>\r\n            <GridList className={classes.list} cols={3}>\r\n                {data.map((sticker, i) => (\r\n                    <GridListTile className={classes.tile} onClick={e => handleClick(e, sticker)} key={i}>\r\n                        <InnerTile sticker={sticker} onDelete={handleDelete}/>\r\n                    </GridListTile>    \r\n                ))}\r\n            </GridList>\r\n\r\n            <ConfirmDialog\r\n                open={isConfirmDialogOpen}\r\n                onClose={handleConfirmDialogClose}\r\n                content={`Sticker ${currentSticker.current.id} will be deleted`}\r\n            />\r\n            \r\n            {context.password && actionContainer && ReactDOM.createPortal((\r\n                <Zoom in={active} unmountOnExit>\r\n                    <Fab color=\"secondary\" className={classes.addButton} onClick={handleAddSticker}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Zoom>\r\n            ), actionContainer)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stickers","import React, { useState, useContext } from \"react\"\r\nimport { Dialog, AppBar, Toolbar, IconButton, Slide, Tabs, Tab } from \"@material-ui/core\"\r\nimport SwipeableViews from \"react-swipeable-views\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport Templates from \"./components/Templates.js\"\r\nimport Stickers from \"./components/Stickers.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbar: {\r\n        minHeight: 46\r\n    },\r\n\r\n    body: {\r\n        marginTop: 46\r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props}/>\r\n})\r\n\r\nfunction TemplatesDialog({ onClose, open }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const classes = useStyles({\r\n        width: context.width\r\n    })\r\n\r\n    const [currentTab, setCurrentTab] = useState(0)\r\n\r\n    const handleClose = () => {\r\n        onClose()\r\n    }\r\n\r\n    const handleTemplateLoad = (template) => {\r\n        context.event.dispatchEvent(new CustomEvent(\"loadTemplate\", { detail: { template } }))\r\n        handleClose()\r\n    }\r\n\r\n    const handleStickerLoad = (sticker) => {\r\n        context.event.dispatchEvent(new CustomEvent(\"loadSticker\", { detail: { sticker } }))\r\n        handleClose()\r\n    }\r\n\r\n    const scrollToTop = () => {\r\n        document.getElementById(\"templates-dialog-inner-container\").scrollTo(0, 0)\r\n    }\r\n\r\n    const handleTabChange = (event, index) => {\r\n        setCurrentTab(index)\r\n        scrollToTop()\r\n    }\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setCurrentTab(index)\r\n        scrollToTop()\r\n    }\r\n\r\n    return (\r\n        <Dialog fullScreen onClose={handleClose} open={open} TransitionComponent={Transition}>\r\n            <AppBar>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n\r\n                    <Tabs value={currentTab} onChange={handleTabChange}>\r\n                        <Tab label=\"Templates\"/>\r\n                        <Tab label=\"Stickers\"/>\r\n                    </Tabs>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <SwipeableViews index={currentTab} onChangeIndex={handleChangeIndex} axis=\"x\" id=\"templates-dialog-inner-container\" disableLazyLoading>\r\n                <div className={classes.body}>\r\n                    <Templates onLoad={handleTemplateLoad} active={currentTab === 0}/>\r\n                </div>\r\n\r\n                <div className={classes.body}>\r\n                    <Stickers onLoad={handleStickerLoad} active={currentTab === 1}/>\r\n                </div>\r\n            </SwipeableViews>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(TemplatesDialog, \"templates\")","import React from \"react\"\r\nimport { Dialog, ClickAwayListener, Tooltip } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport data from \"../../config/help-overlay-data.json\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    innerDialog: {\r\n        background: \"none\",\r\n        overflow: \"hidden\"\r\n    }\r\n}))\r\n\r\nconst tooltipOffset = 20\r\n\r\nfunction OverlayChild({ data: { selector, content }, open }) {\r\n    const rect = document.querySelector(selector).getBoundingClientRect()\r\n    \r\n    return (\r\n        <Tooltip\r\n            open={open}\r\n            placement=\"top\"\r\n            arrow\r\n            title={content}\r\n        >\r\n            <div style={{\r\n                position: \"absolute\",\r\n                top: rect.top + tooltipOffset,\r\n                left: rect.left,\r\n                width: rect.width + \"px\",\r\n                height: rect.height + \"px\"\r\n            }}/>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nfunction HelpDialog({ open, onClose }) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            fullScreen\r\n            PaperProps={{ className: classes.innerDialog }}\r\n        >\r\n            <ClickAwayListener onClickAway={onClose}>\r\n                <div>\r\n                    {data.map((data, i) => <OverlayChild data={data} key={i} open={open}/>)}\r\n                </div>\r\n            </ClickAwayListener>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(HelpDialog, \"help\")","import React, { useState, useContext } from \"react\"\r\nimport { Dialog, DialogTitle, Button, TextField, FormGroup, Snackbar, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { useForm, FormProvider } from \"react-hook-form\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport withBackButtonSupport from \"../../utils/withBackButtonSupport.js\"\r\nimport { authorize } from \"../../config/api.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n        paddingTop: 0\r\n    },\r\n\r\n    applyButton: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n\r\n    input: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n\r\n    snackbarClose: {\r\n        color: theme.palette.primary.variant\r\n    }\r\n}))\r\n\r\nfunction BorderDialog({ onClose, open }) {\r\n    const context = useContext(AppContext)\r\n\r\n    const { register, getValues, handleSubmit, control, watch, setValue } = useForm()\r\n\r\n    const classes = useStyles()\r\n\r\n    const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n    const [isWrongPassword, setIsWrongPassword] = useState(false)\r\n\r\n    const onSubmit = async () => {\r\n        const password = getValues(\"password\")\r\n\r\n        const res = await authorize(password)\r\n\r\n        if(res.data) {\r\n            setIsWrongPassword(false)\r\n            setIsSnackbarOpen(true)\r\n            context.setPassword(password)\r\n            onClose()\r\n        } else {\r\n            setIsWrongPassword(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog onClose={onClose} open={open}>\r\n                <DialogTitle>Login</DialogTitle>\r\n\r\n                <FormProvider {...{ control, watch, register, setValue }}>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n                        <FormGroup>\r\n                            {/* Password */}\r\n                            <TextField\r\n                                error={isWrongPassword}\r\n                                inputRef={register()}\r\n                                className={classes.input}\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                helperText={isWrongPassword && \"Wrong Password\"}\r\n                            />\r\n\r\n                            <Button fullWidth className={classes.applyButton} type=\"submit\">Login</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormProvider>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\"\r\n                }}\r\n                open={isSnackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={() => setIsSnackbarOpen(false)}\r\n                message=\"Logged In\"\r\n                action={\r\n                    <IconButton onClick={() => setIsSnackbarOpen(false)} className={classes.snackbarClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withBackButtonSupport(BorderDialog, \"auth\")","import React, { useContext, useState, useRef, useEffect } from \"react\"\r\nimport { AppBar, Toolbar, Fab, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport DoneIcon from \"@material-ui/icons/Done\"\r\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\"\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\"\r\nimport HelpIcon from \"@material-ui/icons/Help\"\r\nimport UndoIcon from \"@material-ui/icons/Undo\"\r\n\r\nimport Menu from \"./Menu.js\"\r\nimport TemplatesDialog from \"../Dialogs/TemplatesDialog.js\"\r\nimport HelpDialog from \"../Dialogs/HelpDialog.js\"\r\nimport AuthDialog from \"../Dialogs/AuthDialog.js\"\r\n\r\nimport { AppContext } from \"../../App.js\"\r\nimport { LONG_PRESS_DURATION } from \"../../config/constants.js\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: \"absolute\",\r\n        top: \"unset\",\r\n        bottom: 0,\r\n        left: 0,\r\n        right: \"unset\",\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n\r\n    fabButton: {\r\n        position: \"absolute\",\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: \"0 auto\"\r\n    },\r\n\r\n    spacer: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nfunction BottomBar() {\r\n    const context = useContext(AppContext)\r\n    \r\n    const classes = useStyles()\r\n\r\n    const openMenuButton = useRef()\r\n    const helpButtonTimer = useRef()\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n    const [isTemplatesOpen, setIsTemplatesOpen] = useState(false)\r\n    const [isHelpOpen, setIsHelpOpen] = useState(false)\r\n    const [isAuthDialogOpen, setIsAuthDialogOpen] = useState(false)\r\n\r\n    const handleMoreClick = () => {\r\n        setIsMenuOpen(!isMenuOpen)\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setIsMenuOpen(false)\r\n    }\r\n\r\n    const handleTemplatesClick = () => {\r\n        setIsTemplatesOpen(true)\r\n    }\r\n\r\n    const handleHelpClick = () => {\r\n        setIsHelpOpen(true)\r\n    }\r\n\r\n    const handleTouchStart = () => {\r\n        if(context.password) {\r\n            return\r\n        }\r\n\r\n        helpButtonTimer.current = setTimeout(() => {\r\n            setIsAuthDialogOpen(true)\r\n        }, LONG_PRESS_DURATION)\r\n    }\r\n\r\n    const handleTouchEnd = () => {\r\n        clearTimeout(helpButtonTimer.current)\r\n    }\r\n\r\n    const dispatchEvent = (name) => () => {\r\n        context.event.dispatchEvent(new CustomEvent(name))\r\n    }\r\n\r\n    useEffect(() => {\r\n        context.event.addEventListener(\"openTemplatesDialog\", handleTemplatesClick)\r\n        \r\n        return () => {\r\n            context.event.removeEventListener(\"openTemplatesDialog\", handleTemplatesClick)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton onClick={handleHelpClick} onTouchStart={handleTouchStart} onTouchEnd={handleTouchEnd} onMouseDown={handleTouchStart} onMouseUp={handleTouchEnd}>\r\n                    <HelpIcon/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={handleTemplatesClick} id=\"templates-button\">\r\n                    <CloudDownloadIcon/>\r\n                </IconButton>\r\n\r\n                <div className={classes.spacer}/>\r\n\r\n                <Fab color=\"primary\" className={classes.fabButton} onClick={dispatchEvent(\"generateImage\")} disabled={!context.image}>\r\n                    <DoneIcon/>\r\n                </Fab>\r\n\r\n                <IconButton onClick={dispatchEvent(\"addTextbox\")} id=\"textbox-button\">\r\n                    <TextFieldsIcon/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={dispatchEvent(\"undo\")} id=\"undo-button\">\r\n                    <UndoIcon/>\r\n                </IconButton>\r\n\r\n                <IconButton onClick={handleMoreClick} ref={openMenuButton}>\r\n                    <MoreVertIcon/>\r\n                </IconButton>\r\n\r\n                <Menu open={isMenuOpen} anchorEl={openMenuButton.current} onClose={handleMenuClose}/>\r\n\r\n                <TemplatesDialog open={isTemplatesOpen} onClose={() => setIsTemplatesOpen(false)}/>\r\n                <HelpDialog open={isHelpOpen} onClose={() => setIsHelpOpen(false)}/>\r\n                <AuthDialog open={isAuthDialogOpen} onClose={() => setIsAuthDialogOpen(false)}/>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default BottomBar","import { useContext, useEffect, useState } from \"react\"\r\nimport ReactGA from \"react-ga\"\r\n\r\nimport { AppContext } from \"../App.js\"\r\nimport { GA_TRACKING_ID, IS_DEV } from \"../config/constants.js\"\r\n\r\nfunction Analytics() {\r\n    const context = useContext(AppContext)\r\n    const [isInitialized, setIsInitialized] = useState(false)\r\n\r\n    /**\r\n     * Initialize GA\r\n     */\r\n    useEffect(() => {\r\n        if (context.password || IS_DEV) {\r\n            return\r\n        }\r\n\r\n        ReactGA.initialize(GA_TRACKING_ID)\r\n\r\n        ReactGA.pageview(window.location.pathname)\r\n\r\n        setIsInitialized(true)\r\n\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    /**\r\n     * Forward events to GA\r\n     */\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            return\r\n        }\r\n\r\n        const generateImageEvent = ReactGA.event.bind(null, {\r\n            category: \"Editor\",\r\n            action: \"Generate Image\",\r\n            ...(context.currentTemplate ? {\r\n                label: context.currentTemplate.label,\r\n                value: context.currentTemplate.id\r\n            } : {})\r\n        })\r\n\r\n        const loadTemplateEvent = ({ detail: { template } }) => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Load Template\",\r\n            label: template.label,\r\n            value: template.id\r\n        })\r\n\r\n        const shareModalModalview = () => ReactGA.modalview(\"share\")\r\n\r\n        const uploadImageEvent = ({ detail: { link } }) => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Upload Image\",\r\n            label: link\r\n        })\r\n\r\n        const downloadImageEvent = () => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Download Image\"\r\n        })\r\n\r\n        const shareEvent = ({ detail: { label } }) => ReactGA.event({\r\n            category: \"Editor\",\r\n            action: \"Share\",\r\n            label\r\n        })\r\n\r\n        context.event.addEventListener(\"generateImage\", generateImageEvent)\r\n        context.event.addEventListener(\"loadTemplate\", loadTemplateEvent)\r\n        context.event.addEventListener(\"openShareModal\", shareModalModalview)\r\n        context.event.addEventListener(\"uploadImage\", uploadImageEvent)\r\n        context.event.addEventListener(\"downloadImage\", downloadImageEvent)\r\n        context.event.addEventListener(\"share\", shareEvent)\r\n\r\n        return () => {\r\n            context.event.removeEventListener(\"generateImage\", generateImageEvent)\r\n            context.event.removeEventListener(\"loadTemplate\", loadTemplateEvent)\r\n            context.event.removeEventListener(\"openShareModal\", shareModalModalview)\r\n            context.event.removeEventListener(\"uploadImage\", uploadImageEvent)\r\n            context.event.removeEventListener(\"downloadImage\", downloadImageEvent)\r\n            context.event.removeEventListener(\"share\", shareEvent)\r\n        }\r\n    }, [context, isInitialized])\r\n\r\n    return null\r\n}\r\n\r\nexport default Analytics","import React, { useState, useEffect } from \"react\"\r\nimport { Snackbar, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    snackbarClose: {\r\n        color: theme.palette.primary.variant\r\n    }\r\n}))\r\n\r\nfunction OfflineUseAlerts() {\r\n    const classes = useStyles()\r\n\r\n    const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n    const [snackbarText, setSnackbarText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const channel = new BroadcastChannel(\"sw-0\")\r\n\r\n        channel.addEventListener(\"message\", function ({ data: message }) {\r\n            if (message === \"content-cached\") {\r\n                setIsSnackbarOpen(true)\r\n                setSnackbarText(\"The app is cached for offline use\")\r\n\r\n            } else if (message === \"content-available\") {\r\n                setIsSnackbarOpen(true)\r\n                setSnackbarText(\"A new version is available. Restart the app to see it\")\r\n\r\n            }\r\n        })\r\n\r\n        return () => channel.close()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n                open={isSnackbarOpen}\r\n                autoHideDuration={6000}\r\n                message={snackbarText}\r\n                onClose={() => setIsSnackbarOpen(false)}\r\n                action={\r\n                    <IconButton onClick={() => setIsSnackbarOpen(false)} className={classes.snackbarClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OfflineUseAlerts","import React, { useState, useEffect } from \"react\"\r\n\r\nimport Canvas from \"./components/Canvas/Canvas.js\"\r\nimport BottomBar from \"./components/BottomBar/BottomBar.js\"\r\nimport Analytics from \"./utils/Analytics.js\"\r\nimport OfflineUseAlerts from \"./utils/OfflineUseAlerts.js\"\r\nimport { setPasswordHeader } from \"./config/api.js\"\r\n\r\nconst AppContext = React.createContext()\r\n\r\nif (localStorage.getItem(\"password\")) {\r\n    setPasswordHeader(localStorage.getItem(\"password\"))\r\n}\r\n\r\nfunction App() {\r\n    const [context, setContext] = useState({\r\n        event: new EventTarget(),\r\n        image: null,\r\n        label: null,\r\n        currentTemplate: null,\r\n        password: localStorage.getItem(\"password\")\r\n    })\r\n\r\n    const setter = {\r\n        set: values => setContext({ ...context, ...values }),\r\n        setPassword: password => {\r\n            // Store password in localstorage\r\n            localStorage.setItem(\"password\", password)\r\n            setPasswordHeader(password)\r\n            setContext({ ...context, password })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Handle image injection\r\n        const handleMessage = (message) => {\r\n            if (message.data.image) {\r\n                setContext({\r\n                    ...context,\r\n                    image: message.data.image,\r\n                    label: message.data.label\r\n                })\r\n            }\r\n        }\r\n\r\n        // Detect ctrl + z\r\n        const handleUndo = (event) => {\r\n            if (event.ctrlKey && event.keyCode === 90) {\r\n                context.event.dispatchEvent(new CustomEvent(\"undo\"))\r\n            }\r\n        }\r\n\r\n        window.addEventListener(\"message\", handleMessage)\r\n        window.addEventListener(\"keydown\", handleUndo)\r\n\r\n        return () => {\r\n            window.removeEventListener(\"message\", handleMessage)\r\n            window.removeEventListener(\"keydown\", handleUndo)\r\n        }\r\n    })\r\n\r\n    window.context = context\r\n\r\n    return (\r\n        <AppContext.Provider value={{ ...context, ...setter }}>\r\n            <Analytics />\r\n            <OfflineUseAlerts />\r\n\r\n            <Canvas />\r\n            <BottomBar />\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nexport {\r\n    AppContext\r\n}","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nconst channel = new BroadcastChannel(\"sw-0\")\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              channel.postMessage(\"content-available\")\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              channel.postMessage(\"content-cached\")\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\"\r\n\r\nimport App from \"./App.js\"\r\nimport { IS_DEV } from \"./config/constants.js\"\r\nimport * as serviceWorker from \"./serviceWorker.js\"\r\nimport \"./index.css\"\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: \"#BB86FC\",\r\n            variant: \"#3700B3\"\r\n        }\r\n    }\r\n})\r\n\r\nif (IS_DEV) {\r\n    console.log(theme)\r\n}\r\n\r\nReactDOM.render((\r\n    <ThemeProvider theme={theme}>\r\n        <App />\r\n    </ThemeProvider>\r\n), document.getElementById(\"root\"))\r\n\r\nserviceWorker.register()"],"sourceRoot":""}